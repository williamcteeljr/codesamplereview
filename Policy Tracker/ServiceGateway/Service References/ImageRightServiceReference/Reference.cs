//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceGateway.ImageRightServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drawer", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Drawer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DrawerRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private bool IsDeletedField;
        
        private bool DeletedContentVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ObjectTypeData[] FileTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Location ParentLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.DrawerRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool DeletedContentVisible {
            get {
                return this.DeletedContentVisibleField;
            }
            set {
                if ((this.DeletedContentVisibleField.Equals(value) != true)) {
                    this.DeletedContentVisibleField = value;
                    this.RaisePropertyChanged("DeletedContentVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData[] FileTypes {
            get {
                return this.FileTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypesField, value) != true)) {
                    this.FileTypesField = value;
                    this.RaisePropertyChanged("FileTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public ServiceGateway.ImageRightServiceReference.Location ParentLocation {
            get {
                return this.ParentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLocationField, value) != true)) {
                    this.ParentLocationField = value;
                    this.RaisePropertyChanged("ParentLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrawerRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DrawerRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Location : ServiceGateway.ImageRightServiceReference.ContainerData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Location ParentLocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Location ParentLocation {
            get {
                return this.ParentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLocationField, value) != true)) {
                    this.ParentLocationField = value;
                    this.RaisePropertyChanged("ParentLocation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectTypeData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ObjectTypeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.BurnQueueRef BurnQueueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammaticNameField;
        
        private int OverlayIdField;
        
        private int VersionedField;
        
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private System.DateTime LastModifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.BurnQueueRef BurnQueueId {
            get {
                return this.BurnQueueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BurnQueueIdField, value) != true)) {
                    this.BurnQueueIdField = value;
                    this.RaisePropertyChanged("BurnQueueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ProgrammaticName {
            get {
                return this.ProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammaticNameField, value) != true)) {
                    this.ProgrammaticNameField = value;
                    this.RaisePropertyChanged("ProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int OverlayId {
            get {
                return this.OverlayIdField;
            }
            set {
                if ((this.OverlayIdField.Equals(value) != true)) {
                    this.OverlayIdField = value;
                    this.RaisePropertyChanged("OverlayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Versioned {
            get {
                return this.VersionedField;
            }
            set {
                if ((this.VersionedField.Equals(value) != true)) {
                    this.VersionedField = value;
                    this.RaisePropertyChanged("Versioned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectTypeDataRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ObjectTypeDataRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BurnQueueRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class BurnQueueRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObjectData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    public partial class BaseObjectData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime DateLastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateLastModified {
            get {
                return this.DateLastModifiedField;
            }
            set {
                if ((this.DateLastModifiedField.Equals(value) != true)) {
                    this.DateLastModifiedField = value;
                    this.RaisePropertyChanged("DateLastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedObjectData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    public partial class TypedObjectData : ServiceGateway.ImageRightServiceReference.BaseObjectData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TypedObjectDataRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AccountPermissions[] ObjectPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ObjectTypeData ObjTypeField;
        
        private bool CachedCopyField;
        
        private ServiceGateway.ImageRightServiceReference.DeleteOperationType DeleteIndicatorField;
        
        private int EffectivePermissionsField;
        
        private ServiceGateway.ImageRightServiceReference.ContainerType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectDataRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.AccountPermissions[] ObjectPermissions {
            get {
                return this.ObjectPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectPermissionsField, value) != true)) {
                    this.ObjectPermissionsField = value;
                    this.RaisePropertyChanged("ObjectPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData ObjType {
            get {
                return this.ObjTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjTypeField, value) != true)) {
                    this.ObjTypeField = value;
                    this.RaisePropertyChanged("ObjType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool CachedCopy {
            get {
                return this.CachedCopyField;
            }
            set {
                if ((this.CachedCopyField.Equals(value) != true)) {
                    this.CachedCopyField = value;
                    this.RaisePropertyChanged("CachedCopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public ServiceGateway.ImageRightServiceReference.DeleteOperationType DeleteIndicator {
            get {
                return this.DeleteIndicatorField;
            }
            set {
                if ((this.DeleteIndicatorField.Equals(value) != true)) {
                    this.DeleteIndicatorField = value;
                    this.RaisePropertyChanged("DeleteIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int EffectivePermissions {
            get {
                return this.EffectivePermissionsField;
            }
            set {
                if ((this.EffectivePermissionsField.Equals(value) != true)) {
                    this.EffectivePermissionsField = value;
                    this.RaisePropertyChanged("EffectivePermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public ServiceGateway.ImageRightServiceReference.ContainerType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    public partial class ContainerData : ServiceGateway.ImageRightServiceReference.TypedObjectData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TypedObjectData[] ContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class File : ServiceGateway.ImageRightServiceReference.ContainerData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.LocationRef LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeData[] AttributeDataField;
        
        private System.DateTime DateLastOpenedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileJacketRef FileJacketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileUpdateFlags FileUpdateFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteCollection NoteCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteCollection CalcNoteCollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.LocationRef LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdField, value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] AttributeData {
            get {
                return this.AttributeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeDataField, value) != true)) {
                    this.AttributeDataField = value;
                    this.RaisePropertyChanged("AttributeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime DateLastOpened {
            get {
                return this.DateLastOpenedField;
            }
            set {
                if ((this.DateLastOpenedField.Equals(value) != true)) {
                    this.DateLastOpenedField = value;
                    this.RaisePropertyChanged("DateLastOpened");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.FileJacketRef FileJacket {
            get {
                return this.FileJacketField;
            }
            set {
                if ((object.ReferenceEquals(this.FileJacketField, value) != true)) {
                    this.FileJacketField = value;
                    this.RaisePropertyChanged("FileJacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string FileNumber1 {
            get {
                return this.FileNumber1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber1Field, value) != true)) {
                    this.FileNumber1Field = value;
                    this.RaisePropertyChanged("FileNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string FileNumber2 {
            get {
                return this.FileNumber2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber2Field, value) != true)) {
                    this.FileNumber2Field = value;
                    this.RaisePropertyChanged("FileNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string FileNumber3 {
            get {
                return this.FileNumber3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber3Field, value) != true)) {
                    this.FileNumber3Field = value;
                    this.RaisePropertyChanged("FileNumber3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public ServiceGateway.ImageRightServiceReference.FileUpdateFlags FileUpdateFlags {
            get {
                return this.FileUpdateFlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileUpdateFlagsField, value) != true)) {
                    this.FileUpdateFlagsField = value;
                    this.RaisePropertyChanged("FileUpdateFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public ServiceGateway.ImageRightServiceReference.NoteCollection NoteCollection {
            get {
                return this.NoteCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteCollectionField, value) != true)) {
                    this.NoteCollectionField = value;
                    this.RaisePropertyChanged("NoteCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public ServiceGateway.ImageRightServiceReference.NoteCollection CalcNoteCollection {
            get {
                return this.CalcNoteCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcNoteCollectionField, value) != true)) {
                    this.CalcNoteCollectionField = value;
                    this.RaisePropertyChanged("CalcNoteCollection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Document : ServiceGateway.ImageRightServiceReference.ContainerData {
        
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Page[] PagesField;
        
        private System.DateTime DocumentDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Page[] Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((object.ReferenceEquals(this.PagesField, value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Folder", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Folder : ServiceGateway.ImageRightServiceReference.ContainerData {
        
        private System.DateTime MaxDocCreateDateUTCField;
        
        private System.DateTime MaxDocDateUTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteCollection NoteCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteCollection CalcNoteCollectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime MaxDocCreateDateUTC {
            get {
                return this.MaxDocCreateDateUTCField;
            }
            set {
                if ((this.MaxDocCreateDateUTCField.Equals(value) != true)) {
                    this.MaxDocCreateDateUTCField = value;
                    this.RaisePropertyChanged("MaxDocCreateDateUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime MaxDocDateUTC {
            get {
                return this.MaxDocDateUTCField;
            }
            set {
                if ((this.MaxDocDateUTCField.Equals(value) != true)) {
                    this.MaxDocDateUTCField = value;
                    this.RaisePropertyChanged("MaxDocDateUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.NoteCollection NoteCollection {
            get {
                return this.NoteCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteCollectionField, value) != true)) {
                    this.NoteCollectionField = value;
                    this.RaisePropertyChanged("NoteCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.NoteCollection CalcNoteCollection {
            get {
                return this.CalcNoteCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.CalcNoteCollectionField, value) != true)) {
                    this.CalcNoteCollectionField = value;
                    this.RaisePropertyChanged("CalcNoteCollection");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypedObjectDataRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
    public partial class TypedObjectDataRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountPermissions", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class AccountPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AllowField;
        
        private int DenyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Allow {
            get {
                return this.AllowField;
            }
            set {
                if ((this.AllowField.Equals(value) != true)) {
                    this.AllowField = value;
                    this.RaisePropertyChanged("Allow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Deny {
            get {
                return this.DenyField;
            }
            set {
                if ((this.DenyField.Equals(value) != true)) {
                    this.DenyField = value;
                    this.RaisePropertyChanged("Deny");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityID Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteOperationType", Namespace="http://imageright.com/imageright.webservice")]
    public enum DeleteOperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cut = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CutAndUndelete = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerType", Namespace="http://imageright.com/imageright.webservice")]
    public enum ContainerType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Page = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class LocationRef : ServiceGateway.ImageRightServiceReference.TypedObjectDataRef {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ContainerRef : ServiceGateway.ImageRightServiceReference.TypedObjectDataRef {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileRef : ServiceGateway.ImageRightServiceReference.TypedObjectDataRef {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DocumentRef : ServiceGateway.ImageRightServiceReference.TypedObjectDataRef {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FolderRef : ServiceGateway.ImageRightServiceReference.TypedObjectDataRef {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityID", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class SecurityID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdField;
        
        private long IdField;
        
        private bool HasIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool HasId {
            get {
                return this.HasIdField;
            }
            set {
                if ((this.HasIdField.Equals(value) != true)) {
                    this.HasIdField = value;
                    this.RaisePropertyChanged("HasId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileJacketRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileJacketRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUpdateFlags", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileUpdateFlags : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool FileNameField;
        
        private bool FileNumberField;
        
        private bool FileNumber2Field;
        
        private bool FileNumber3Field;
        
        private bool FileJacketField;
        
        private bool FileTypeField;
        
        private bool LastModifiedDoNotUpdateField;
        
        private bool DateLastOpenedField;
        
        private bool TemporaryFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((this.FileNameField.Equals(value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool FileNumber {
            get {
                return this.FileNumberField;
            }
            set {
                if ((this.FileNumberField.Equals(value) != true)) {
                    this.FileNumberField = value;
                    this.RaisePropertyChanged("FileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool FileNumber2 {
            get {
                return this.FileNumber2Field;
            }
            set {
                if ((this.FileNumber2Field.Equals(value) != true)) {
                    this.FileNumber2Field = value;
                    this.RaisePropertyChanged("FileNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool FileNumber3 {
            get {
                return this.FileNumber3Field;
            }
            set {
                if ((this.FileNumber3Field.Equals(value) != true)) {
                    this.FileNumber3Field = value;
                    this.RaisePropertyChanged("FileNumber3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool FileJacket {
            get {
                return this.FileJacketField;
            }
            set {
                if ((this.FileJacketField.Equals(value) != true)) {
                    this.FileJacketField = value;
                    this.RaisePropertyChanged("FileJacket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool LastModifiedDoNotUpdate {
            get {
                return this.LastModifiedDoNotUpdateField;
            }
            set {
                if ((this.LastModifiedDoNotUpdateField.Equals(value) != true)) {
                    this.LastModifiedDoNotUpdateField = value;
                    this.RaisePropertyChanged("LastModifiedDoNotUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool DateLastOpened {
            get {
                return this.DateLastOpenedField;
            }
            set {
                if ((this.DateLastOpenedField.Equals(value) != true)) {
                    this.DateLastOpenedField = value;
                    this.RaisePropertyChanged("DateLastOpened");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public bool TemporaryFile {
            get {
                return this.TemporaryFileField;
            }
            set {
                if ((this.TemporaryFileField.Equals(value) != true)) {
                    this.TemporaryFileField = value;
                    this.RaisePropertyChanged("TemporaryFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteCollection", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class NoteCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long NoteidField;
        
        private int VersionField;
        
        private bool IsdeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Note[] NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Noteid {
            get {
                return this.NoteidField;
            }
            set {
                if ((this.NoteidField.Equals(value) != true)) {
                    this.NoteidField = value;
                    this.RaisePropertyChanged("Noteid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool Isdeleted {
            get {
                return this.IsdeletedField;
            }
            set {
                if ((this.IsdeletedField.Equals(value) != true)) {
                    this.IsdeletedField = value;
                    this.RaisePropertyChanged("Isdeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.Note[] Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BurnQueueRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BaseObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeleteOperationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileJacketRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteHideOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerMapping))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfLong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccountType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DepartmentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ProfileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TemplateRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MarkRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskErrorCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchConditionLists))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CustomAttributeTarget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompareOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompoundOp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FlowRequestFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRequestFlag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.RuleEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCreateData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MappingLookup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WSVersionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ResponseData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ServerObjectType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ImageList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageConversionDO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.InputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AssociateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DescriptionUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DateUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.OutputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location[]))]
    public partial class AttributeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ServiceGateway.ImageRightServiceReference.AttributeType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.AttributeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.AttributeRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public object Val {
            get {
                return this.ValField;
            }
            set {
                if ((object.ReferenceEquals(this.ValField, value) != true)) {
                    this.ValField = value;
                    this.RaisePropertyChanged("Val");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class AttributeRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeType", Namespace="http://imageright.com/imageright.webservice")]
    public enum AttributeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atInt = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atBool = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atString = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atFloat = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atBinary = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        atUser = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long CollectionIdField;
        
        private bool IsdefaultField;
        
        private ServiceGateway.ImageRightServiceReference.NoteHideOperation HiddenField;
        
        private ServiceGateway.ImageRightServiceReference.NoteType NoteTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteEntry[] EntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long CollectionId {
            get {
                return this.CollectionIdField;
            }
            set {
                if ((this.CollectionIdField.Equals(value) != true)) {
                    this.CollectionIdField = value;
                    this.RaisePropertyChanged("CollectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Isdefault {
            get {
                return this.IsdefaultField;
            }
            set {
                if ((this.IsdefaultField.Equals(value) != true)) {
                    this.IsdefaultField = value;
                    this.RaisePropertyChanged("Isdefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public ServiceGateway.ImageRightServiceReference.NoteHideOperation Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public ServiceGateway.ImageRightServiceReference.NoteType NoteType {
            get {
                return this.NoteTypeField;
            }
            set {
                if ((this.NoteTypeField.Equals(value) != true)) {
                    this.NoteTypeField = value;
                    this.RaisePropertyChanged("NoteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.NoteEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteHideOperation", Namespace="http://imageright.com/imageright.webservice")]
    public enum NoteHideOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Visible = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cut = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteType", Namespace="http://imageright.com/imageright.webservice")]
    public enum NoteType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notes = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculateNotes = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskNotes = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteEntry", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
    public partial class NoteEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.NoteRef IdField;
        
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.NoteRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.SecurityID userId {
            get {
                return this.userIdField;
            }
            set {
                if ((object.ReferenceEquals(this.userIdField, value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class NoteRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalcNoteEntry", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class CalcNoteEntry : ServiceGateway.ImageRightServiceReference.NoteEntry {
        
        private decimal AmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Page : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool DeletedField;
        
        private ServiceGateway.ImageRightServiceReference.DeleteOperationType DeleteOpTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.PageRef IdField;
        
        private int PageNumberField;
        
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DeleteOperationType DeleteOpType {
            get {
                return this.DeleteOpTypeField;
            }
            set {
                if ((this.DeleteOpTypeField.Equals(value) != true)) {
                    this.DeleteOpTypeField = value;
                    this.RaisePropertyChanged("DeleteOpType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.PageRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class PageRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrawerMapping", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DrawerMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDrawerField;
        
        private long DrawerField;
        
        private long FileTypeField;
        
        private long FileKeyField;
        
        private long ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ArrayOfLong AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ArrayOfLong FileMarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ArrayOfLong PageMarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SourceDrawer {
            get {
                return this.SourceDrawerField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDrawerField, value) != true)) {
                    this.SourceDrawerField = value;
                    this.RaisePropertyChanged("SourceDrawer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long Drawer {
            get {
                return this.DrawerField;
            }
            set {
                if ((this.DrawerField.Equals(value) != true)) {
                    this.DrawerField = value;
                    this.RaisePropertyChanged("Drawer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long FileKey {
            get {
                return this.FileKeyField;
            }
            set {
                if ((this.FileKeyField.Equals(value) != true)) {
                    this.FileKeyField = value;
                    this.RaisePropertyChanged("FileKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public long ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((this.ReferenceNumberField.Equals(value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfLong Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfLong FileMarks {
            get {
                return this.FileMarksField;
            }
            set {
                if ((object.ReferenceEquals(this.FileMarksField, value) != true)) {
                    this.FileMarksField = value;
                    this.RaisePropertyChanged("FileMarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfLong PageMarks {
            get {
                return this.PageMarksField;
            }
            set {
                if ((object.ReferenceEquals(this.PageMarksField, value) != true)) {
                    this.PageMarksField = value;
                    this.RaisePropertyChanged("PageMarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfLong", Namespace="http://imageright.com/imageright.webservice", ItemName="long")]
    [System.SerializableAttribute()]
    public class ArrayOfLong : System.Collections.Generic.List<long> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityAccount SecurityAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PasswordField;
        
        private System.DateTime AccountActivateField;
        
        private System.DateTime AccountExpiredField;
        
        private System.DateTime PasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.UserFlags[] FlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DepartmentRef DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ContainerRef DefaultContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityAccount SecurityAccount {
            get {
                return this.SecurityAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityAccountField, value) != true)) {
                    this.SecurityAccountField = value;
                    this.RaisePropertyChanged("SecurityAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime AccountActivate {
            get {
                return this.AccountActivateField;
            }
            set {
                if ((this.AccountActivateField.Equals(value) != true)) {
                    this.AccountActivateField = value;
                    this.RaisePropertyChanged("AccountActivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime AccountExpired {
            get {
                return this.AccountExpiredField;
            }
            set {
                if ((this.AccountExpiredField.Equals(value) != true)) {
                    this.AccountExpiredField = value;
                    this.RaisePropertyChanged("AccountExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime PasswordExpired {
            get {
                return this.PasswordExpiredField;
            }
            set {
                if ((this.PasswordExpiredField.Equals(value) != true)) {
                    this.PasswordExpiredField = value;
                    this.RaisePropertyChanged("PasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.UserFlags[] Flags {
            get {
                return this.FlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagsField, value) != true)) {
                    this.FlagsField = value;
                    this.RaisePropertyChanged("Flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string ProfileName {
            get {
                return this.ProfileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileNameField, value) != true)) {
                    this.ProfileNameField = value;
                    this.RaisePropertyChanged("ProfileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public ServiceGateway.ImageRightServiceReference.DepartmentRef DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIdField, value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string HomePhone {
            get {
                return this.HomePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneField, value) != true)) {
                    this.HomePhoneField = value;
                    this.RaisePropertyChanged("HomePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string StateProvince {
            get {
                return this.StateProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.StateProvinceField, value) != true)) {
                    this.StateProvinceField = value;
                    this.RaisePropertyChanged("StateProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public ServiceGateway.ImageRightServiceReference.ContainerRef DefaultContainer {
            get {
                return this.DefaultContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultContainerField, value) != true)) {
                    this.DefaultContainerField = value;
                    this.RaisePropertyChanged("DefaultContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAccount", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class SecurityAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ServiceGateway.ImageRightServiceReference.SecurityAccountType AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DepartmentRef DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private bool DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ProfileRef ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TemplateRef TemplateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.SecurityAccountType AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.DepartmentRef DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentIdField, value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityID Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ProfileRef ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileIdField, value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TemplateRef TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateIdField, value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityAccountType", Namespace="http://imageright.com/imageright.webservice")]
    public enum SecurityAccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        user = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        group = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        role = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        container = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        directory = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        computer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        orgUnit = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DepartmentRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ProfileRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemplateRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TemplateRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFlags", Namespace="http://imageright.com/imageright.webservice")]
    public enum UserFlags : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCannotChangePassword = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanChangePassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MustChangePassword = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableOnCreate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordNeverExpired = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mark", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
    public partial class Mark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BinaryDataField;
        
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammaticNameField;
        
        private int FileTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.MarkRef IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] BinaryData {
            get {
                return this.BinaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BinaryDataField, value) != true)) {
                    this.BinaryDataField = value;
                    this.RaisePropertyChanged("BinaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProgrammaticName {
            get {
                return this.ProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammaticNameField, value) != true)) {
                    this.ProgrammaticNameField = value;
                    this.RaisePropertyChanged("ProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int FileTypeId {
            get {
                return this.FileTypeIdField;
            }
            set {
                if ((this.FileTypeIdField.Equals(value) != true)) {
                    this.FileTypeIdField = value;
                    this.RaisePropertyChanged("FileTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.MarkRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class MarkRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTemplate", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileTypeRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FolderType[] FolderTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DocumentType[] DocumentTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.FileTypeRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FolderType[] FolderTypes {
            get {
                return this.FolderTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderTypesField, value) != true)) {
                    this.FolderTypesField = value;
                    this.RaisePropertyChanged("FolderTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.DocumentType[] DocumentTypes {
            get {
                return this.DocumentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypesField, value) != true)) {
                    this.DocumentTypesField = value;
                    this.RaisePropertyChanged("DocumentTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTypeRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileTypeRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderType", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FolderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ObjectTypeData FolderTypeInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FolderTypeRef IdField;
        
        private bool IsRepeatableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FolderType[] FolderTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DocumentType[] DocumentTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData FolderTypeInfo {
            get {
                return this.FolderTypeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderTypeInfoField, value) != true)) {
                    this.FolderTypeInfoField = value;
                    this.RaisePropertyChanged("FolderTypeInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.FolderTypeRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsRepeatable {
            get {
                return this.IsRepeatableField;
            }
            set {
                if ((this.IsRepeatableField.Equals(value) != true)) {
                    this.IsRepeatableField = value;
                    this.RaisePropertyChanged("IsRepeatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.FolderType[] FolderTypes {
            get {
                return this.FolderTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderTypesField, value) != true)) {
                    this.FolderTypesField = value;
                    this.RaisePropertyChanged("FolderTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.DocumentType[] DocumentTypes {
            get {
                return this.DocumentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypesField, value) != true)) {
                    this.DocumentTypesField = value;
                    this.RaisePropertyChanged("DocumentTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderTypeRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FolderTypeRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentType", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ObjectTypeData DocumentTypeInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DocumentTypeRef IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData DocumentTypeInfo {
            get {
                return this.DocumentTypeInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeInfoField, value) != true)) {
                    this.DocumentTypeInfoField = value;
                    this.RaisePropertyChanged("DocumentTypeInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.DocumentTypeRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentTypeRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DocumentTypeRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TaskRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ArrayOfLong StackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepRef FromStepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID FromUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeData[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID AssignedToField;
        
        private System.DateTime DateAvailableField;
        
        private System.DateTime DateInitiatedField;
        
        private System.DateTime DeadlineField;
        
        private bool DebugField;
        
        private bool DeferedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private ServiceGateway.ImageRightServiceReference.TaskErrorCode ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TaskRef TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID LockedByField;
        
        private long ObjIdField;
        
        private long PriorityField;
        
        private ServiceGateway.ImageRightServiceReference.TaskStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepRef StepIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskErrorMessageField;
        
        private long NotesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileRef FileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DocumentRef DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FolderRef FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.PageRef PageIdField;
        
        private long PagenumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfLong Stack {
            get {
                return this.StackField;
            }
            set {
                if ((object.ReferenceEquals(this.StackField, value) != true)) {
                    this.StackField = value;
                    this.RaisePropertyChanged("Stack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.StepRef FromStep {
            get {
                return this.FromStepField;
            }
            set {
                if ((object.ReferenceEquals(this.FromStepField, value) != true)) {
                    this.FromStepField = value;
                    this.RaisePropertyChanged("FromStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.SecurityID FromUser {
            get {
                return this.FromUserField;
            }
            set {
                if ((object.ReferenceEquals(this.FromUserField, value) != true)) {
                    this.FromUserField = value;
                    this.RaisePropertyChanged("FromUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.SecurityID AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.DateTime DateAvailable {
            get {
                return this.DateAvailableField;
            }
            set {
                if ((this.DateAvailableField.Equals(value) != true)) {
                    this.DateAvailableField = value;
                    this.RaisePropertyChanged("DateAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime DateInitiated {
            get {
                return this.DateInitiatedField;
            }
            set {
                if ((this.DateInitiatedField.Equals(value) != true)) {
                    this.DateInitiatedField = value;
                    this.RaisePropertyChanged("DateInitiated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool Defered {
            get {
                return this.DeferedField;
            }
            set {
                if ((this.DeferedField.Equals(value) != true)) {
                    this.DeferedField = value;
                    this.RaisePropertyChanged("Defered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public ServiceGateway.ImageRightServiceReference.TaskErrorCode ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public ServiceGateway.ImageRightServiceReference.TaskRef TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskIdField, value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public ServiceGateway.ImageRightServiceReference.SecurityID LockedBy {
            get {
                return this.LockedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LockedByField, value) != true)) {
                    this.LockedByField = value;
                    this.RaisePropertyChanged("LockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public long ObjId {
            get {
                return this.ObjIdField;
            }
            set {
                if ((this.ObjIdField.Equals(value) != true)) {
                    this.ObjIdField = value;
                    this.RaisePropertyChanged("ObjId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public long Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public ServiceGateway.ImageRightServiceReference.TaskStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public ServiceGateway.ImageRightServiceReference.StepRef StepId {
            get {
                return this.StepIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StepIdField, value) != true)) {
                    this.StepIdField = value;
                    this.RaisePropertyChanged("StepId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string TaskErrorMessage {
            get {
                return this.TaskErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskErrorMessageField, value) != true)) {
                    this.TaskErrorMessageField = value;
                    this.RaisePropertyChanged("TaskErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public long NotesId {
            get {
                return this.NotesIdField;
            }
            set {
                if ((this.NotesIdField.Equals(value) != true)) {
                    this.NotesIdField = value;
                    this.RaisePropertyChanged("NotesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public ServiceGateway.ImageRightServiceReference.FileRef File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentIdField, value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public ServiceGateway.ImageRightServiceReference.FolderRef FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderIdField, value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public ServiceGateway.ImageRightServiceReference.PageRef PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PageIdField, value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public long Pagenumber {
            get {
                return this.PagenumberField;
            }
            set {
                if ((this.PagenumberField.Equals(value) != true)) {
                    this.PagenumberField = value;
                    this.RaisePropertyChanged("Pagenumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class StepRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StepProgrammaticNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlowProgrammaticNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string StepProgrammaticName {
            get {
                return this.StepProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StepProgrammaticNameField, value) != true)) {
                    this.StepProgrammaticNameField = value;
                    this.RaisePropertyChanged("StepProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FlowProgrammaticName {
            get {
                return this.FlowProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowProgrammaticNameField, value) != true)) {
                    this.FlowProgrammaticNameField = value;
                    this.RaisePropertyChanged("FlowProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskErrorCode", Namespace="http://imageright.com/imageright.webservice")]
    public enum TaskErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StepCodeCheckFails = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScriptSyntax = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskRelease = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExitStepAttributes = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnterStepAttributes = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskStatus", Namespace="http://imageright.com/imageright.webservice")]
    public enum TaskStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hold = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locked = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Uncommitted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undoable = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wait = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchConditionLists", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class SearchConditionLists : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DocumentCondition[] DocumentConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DrawerCondition[] DrawerConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileCondition[] FileConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FolderCondition[] FolderConditionsField;
        
        private ServiceGateway.ImageRightServiceReference.CompoundOp OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.PageCondition[] PageConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TaskCondition[] TaskConditionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.DocumentCondition[] DocumentConditions {
            get {
                return this.DocumentConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentConditionsField, value) != true)) {
                    this.DocumentConditionsField = value;
                    this.RaisePropertyChanged("DocumentConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.DrawerCondition[] DrawerConditions {
            get {
                return this.DrawerConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawerConditionsField, value) != true)) {
                    this.DrawerConditionsField = value;
                    this.RaisePropertyChanged("DrawerConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.FileCondition[] FileConditions {
            get {
                return this.FileConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileConditionsField, value) != true)) {
                    this.FileConditionsField = value;
                    this.RaisePropertyChanged("FileConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.FolderCondition[] FolderConditions {
            get {
                return this.FolderConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderConditionsField, value) != true)) {
                    this.FolderConditionsField = value;
                    this.RaisePropertyChanged("FolderConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.CompoundOp Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.PageCondition[] PageConditions {
            get {
                return this.PageConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageConditionsField, value) != true)) {
                    this.PageConditionsField = value;
                    this.RaisePropertyChanged("PageConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TaskCondition[] TaskConditions {
            get {
                return this.TaskConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskConditionsField, value) != true)) {
                    this.TaskConditionsField = value;
                    this.RaisePropertyChanged("TaskConditions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DocumentCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        private ServiceGateway.ImageRightServiceReference.DocumentAttribute ConditionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.DocumentAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BurnQueueRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BaseObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeleteOperationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileJacketRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteHideOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerMapping))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfLong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccountType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DepartmentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ProfileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TemplateRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MarkRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskErrorCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchConditionLists))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CustomAttributeTarget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompareOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompoundOp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FlowRequestFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRequestFlag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.RuleEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCreateData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MappingLookup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WSVersionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ResponseData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ServerObjectType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ImageList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageConversionDO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.InputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AssociateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DescriptionUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DateUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.OutputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location[]))]
    public partial class SearchCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ServiceGateway.ImageRightServiceReference.AttributeType ATypeField;
        
        private ServiceGateway.ImageRightServiceReference.CustomAttributeTarget ATargetField;
        
        private ServiceGateway.ImageRightServiceReference.CompareOperation CompOpField;
        
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object Value2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.AttributeType AType {
            get {
                return this.ATypeField;
            }
            set {
                if ((this.ATypeField.Equals(value) != true)) {
                    this.ATypeField = value;
                    this.RaisePropertyChanged("AType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public ServiceGateway.ImageRightServiceReference.CustomAttributeTarget ATarget {
            get {
                return this.ATargetField;
            }
            set {
                if ((this.ATargetField.Equals(value) != true)) {
                    this.ATargetField = value;
                    this.RaisePropertyChanged("ATarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public ServiceGateway.ImageRightServiceReference.CompareOperation CompOp {
            get {
                return this.CompOpField;
            }
            set {
                if ((this.CompOpField.Equals(value) != true)) {
                    this.CompOpField = value;
                    this.RaisePropertyChanged("CompOp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public object Value2 {
            get {
                return this.Value2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Value2Field, value) != true)) {
                    this.Value2Field = value;
                    this.RaisePropertyChanged("Value2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomAttributeTarget", Namespace="http://imageright.com/imageright.webservice")]
    public enum CustomAttributeTarget : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        catSelf = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        catParent = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        catFile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        catTask = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompareOperation", Namespace="http://imageright.com/imageright.webservice")]
    public enum CompareOperation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coEqual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coLessThan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coLessOrEqual = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coNotEqual = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coGreaterThan = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coGreaterOrEqual = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coBetween = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coLike = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coInArray = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coIsNull = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        coIsNotNull = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TaskCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SearchCondition OtherConditionField;
        
        private ServiceGateway.ImageRightServiceReference.TaskAttribute ConditionNameField;
        
        private bool FutureTasksField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SearchCondition OtherCondition {
            get {
                return this.OtherConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherConditionField, value) != true)) {
                    this.OtherConditionField = value;
                    this.RaisePropertyChanged("OtherCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool FutureTasks {
            get {
                return this.FutureTasksField;
            }
            set {
                if ((this.FutureTasksField.Equals(value) != true)) {
                    this.FutureTasksField = value;
                    this.RaisePropertyChanged("FutureTasks");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum TaskAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaTaskId = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaStatus = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDateAvailable = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDeadline = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaStartTime = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDateInitiated = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaEndTime = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaUndoExpires = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDebug = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaPriority = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaAssignedTo = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDescription = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaLockedBy = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaSender = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaFlow = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaStep = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaSenderStep = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaSenderFlow = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDrawerCondition = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaFileCondition = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaFolderCondition = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaDocumentCondition = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaPageCondition = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        tsaCustom = 23,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class PageCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        private ServiceGateway.ImageRightServiceReference.PageAttribute ConditionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.PageAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum PageAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        psaDescription = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FolderCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        private ServiceGateway.ImageRightServiceReference.FolderAttribute ConditionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.FolderAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum FolderAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaParentContainerID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaFolderType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaDescription = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaLastmodified = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaDateCreated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        flsaCustom = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        private ServiceGateway.ImageRightServiceReference.FileAttribute ConditionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.FileAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum FileAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaParentContainerID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaFileType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaFileNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaFileNumber2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaFileNumber3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaFilename = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaDateLastOpened = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaDateCreated = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaDateModified = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaCustom = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fsaIsDeleted = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrawerCondition", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DrawerCondition : ServiceGateway.ImageRightServiceReference.SearchCondition {
        
        private ServiceGateway.ImageRightServiceReference.DrawerAttribute ConditionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.DrawerAttribute ConditionName {
            get {
                return this.ConditionNameField;
            }
            set {
                if ((this.ConditionNameField.Equals(value) != true)) {
                    this.ConditionNameField = value;
                    this.RaisePropertyChanged("ConditionName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrawerAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum DrawerAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        drsaDrawerId = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        drsaCustom = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentAttribute", Namespace="http://imageright.com/imageright.webservice")]
    public enum DocumentAttribute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaParentContainerID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaDocType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaDescription = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaLastmodified = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaDateCreated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dsaCustom = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompoundOp", Namespace="http://imageright.com/imageright.webservice")]
    public enum CompoundOp : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        And = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Or = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workflow", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Workflow : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Step[] StepsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammaticNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.WorkflowPermission[] PermissionsField;
        
        private ServiceGateway.ImageRightServiceReference.WorkflowStatus StatusField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime DateLastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.WorkflowRef IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Step[] Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepsField, value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ProgrammaticName {
            get {
                return this.ProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammaticNameField, value) != true)) {
                    this.ProgrammaticNameField = value;
                    this.RaisePropertyChanged("ProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.WorkflowPermission[] Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public ServiceGateway.ImageRightServiceReference.WorkflowStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime DateLastModified {
            get {
                return this.DateLastModifiedField;
            }
            set {
                if ((this.DateLastModifiedField.Equals(value) != true)) {
                    this.DateLastModifiedField = value;
                    this.RaisePropertyChanged("DateLastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public ServiceGateway.ImageRightServiceReference.WorkflowRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Step", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Step : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepDef DebugField;
        
        private long DeleteForwardingRuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepPermission[] EffectivePermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.WorkflowRef FlowidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        private bool IsStoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammaticNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepDef ProductionField;
        
        private ServiceGateway.ImageRightServiceReference.StepStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeGuidField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime DateLastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.StepRef IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.StepDef Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((object.ReferenceEquals(this.DebugField, value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long DeleteForwardingRule {
            get {
                return this.DeleteForwardingRuleField;
            }
            set {
                if ((this.DeleteForwardingRuleField.Equals(value) != true)) {
                    this.DeleteForwardingRuleField = value;
                    this.RaisePropertyChanged("DeleteForwardingRule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.StepPermission[] EffectivePermissions {
            get {
                return this.EffectivePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectivePermissionsField, value) != true)) {
                    this.EffectivePermissionsField = value;
                    this.RaisePropertyChanged("EffectivePermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.WorkflowRef Flowid {
            get {
                return this.FlowidField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowidField, value) != true)) {
                    this.FlowidField = value;
                    this.RaisePropertyChanged("Flowid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsStopped {
            get {
                return this.IsStoppedField;
            }
            set {
                if ((this.IsStoppedField.Equals(value) != true)) {
                    this.IsStoppedField = value;
                    this.RaisePropertyChanged("IsStopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProgrammaticName {
            get {
                return this.ProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammaticNameField, value) != true)) {
                    this.ProgrammaticNameField = value;
                    this.RaisePropertyChanged("ProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public ServiceGateway.ImageRightServiceReference.StepDef Production {
            get {
                return this.ProductionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionField, value) != true)) {
                    this.ProductionField = value;
                    this.RaisePropertyChanged("Production");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public ServiceGateway.ImageRightServiceReference.StepStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string TypeGuid {
            get {
                return this.TypeGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeGuidField, value) != true)) {
                    this.TypeGuidField = value;
                    this.RaisePropertyChanged("TypeGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.DateTime DateLastModified {
            get {
                return this.DateLastModifiedField;
            }
            set {
                if ((this.DateLastModifiedField.Equals(value) != true)) {
                    this.DateLastModifiedField = value;
                    this.RaisePropertyChanged("DateLastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public ServiceGateway.ImageRightServiceReference.StepRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepDef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class StepDef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool DebugField;
        
        private long IdField;
        
        private bool IsStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsStart {
            get {
                return this.IsStartField;
            }
            set {
                if ((this.IsStartField.Equals(value) != true)) {
                    this.IsStartField = value;
                    this.RaisePropertyChanged("IsStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepPermission", Namespace="http://imageright.com/imageright.webservice")]
    public enum StepPermission : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Write = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Route = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RouteExternal = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RouteExternalAny = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateTask = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Client = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unassigned = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssignmentAllowed = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KillTask = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowRef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class WorkflowRef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammaticNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        private long RefIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProgrammaticName {
            get {
                return this.ProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammaticNameField, value) != true)) {
                    this.ProgrammaticNameField = value;
                    this.RaisePropertyChanged("ProgrammaticName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long RefId {
            get {
                return this.RefIdField;
            }
            set {
                if ((this.RefIdField.Equals(value) != true)) {
                    this.RefIdField = value;
                    this.RaisePropertyChanged("RefId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepStatus", Namespace="http://imageright.com/imageright.webservice")]
    public enum StepStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToBeDeleted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowPermission", Namespace="http://imageright.com/imageright.webservice")]
    public enum WorkflowPermission : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Write = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Append = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeStatus = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateTask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkflowStatus", Namespace="http://imageright.com/imageright.webservice")]
    public enum WorkflowStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deactivated = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlowRequestFilter", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FlowRequestFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ServiceGateway.ImageRightServiceReference.StepRequestFlag FlagField;
        
        private ServiceGateway.ImageRightServiceReference.StepPermission RequiredPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID[] RequiredSecurityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.ArrayOfString RequiredStepTypesField;
        
        private ServiceGateway.ImageRightServiceReference.WorkflowStatus WFStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.StepRequestFlag Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((this.FlagField.Equals(value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.StepPermission RequiredPermissions {
            get {
                return this.RequiredPermissionsField;
            }
            set {
                if ((this.RequiredPermissionsField.Equals(value) != true)) {
                    this.RequiredPermissionsField = value;
                    this.RaisePropertyChanged("RequiredPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityID[] RequiredSecurity {
            get {
                return this.RequiredSecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.RequiredSecurityField, value) != true)) {
                    this.RequiredSecurityField = value;
                    this.RaisePropertyChanged("RequiredSecurity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfString RequiredStepTypes {
            get {
                return this.RequiredStepTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.RequiredStepTypesField, value) != true)) {
                    this.RequiredStepTypesField = value;
                    this.RaisePropertyChanged("RequiredStepTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.WorkflowStatus WFStatus {
            get {
                return this.WFStatusField;
            }
            set {
                if ((this.WFStatusField.Equals(value) != true)) {
                    this.WFStatusField = value;
                    this.RaisePropertyChanged("WFStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepRequestFlag", Namespace="http://imageright.com/imageright.webservice")]
    public enum StepRequestFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Production = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadDetails = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://imageright.com/imageright.webservice", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedStepUser", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class AuthorizedStepUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int EffectivePermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Step StepField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int EffectivePermissions {
            get {
                return this.EffectivePermissionsField;
            }
            set {
                if ((this.EffectivePermissionsField.Equals(value) != true)) {
                    this.EffectivePermissionsField = value;
                    this.RaisePropertyChanged("EffectivePermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.Step Step {
            get {
                return this.StepField;
            }
            set {
                if ((object.ReferenceEquals(this.StepField, value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeDef", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
    public partial class AttributeDef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private bool DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeRef IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        private ServiceGateway.ImageRightServiceReference.AttributeType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.AttributeRef Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public ServiceGateway.ImageRightServiceReference.AttributeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeRule", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BurnQueueRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BaseObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectDataRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeleteOperationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileJacketRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteCollection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteHideOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerMapping))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfLong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccountType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DepartmentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ProfileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TemplateRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MarkRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTemplate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentTypeRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskErrorCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchConditionLists))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CustomAttributeTarget))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompareOperation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompoundOp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowRef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FlowRequestFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRequestFlag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.RuleEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCreateData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MappingLookup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WSVersionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateObjectData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ResponseData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ServerObjectType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ImageList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageConversionDO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.InputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AssociateOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DescriptionUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DateUpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.OutputTypes))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeviceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location[]))]
    public partial class AttributeRule : ServiceGateway.ImageRightServiceReference.AttributeDef {
        
        private bool HasDefaultValueField;
        
        private bool MandatoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DefaultValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool HasDefaultValue {
            get {
                return this.HasDefaultValueField;
            }
            set {
                if ((this.HasDefaultValueField.Equals(value) != true)) {
                    this.HasDefaultValueField = value;
                    this.RaisePropertyChanged("HasDefaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Mandatory {
            get {
                return this.MandatoryField;
            }
            set {
                if ((this.MandatoryField.Equals(value) != true)) {
                    this.MandatoryField = value;
                    this.RaisePropertyChanged("Mandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public object DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultValueField, value) != true)) {
                    this.DefaultValueField = value;
                    this.RaisePropertyChanged("DefaultValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StepAttributeRule", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class StepAttributeRule : ServiceGateway.ImageRightServiceReference.AttributeRule {
        
        private ServiceGateway.ImageRightServiceReference.RuleEnum RequirementsRuleField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.RuleEnum RequirementsRule {
            get {
                return this.RequirementsRuleField;
            }
            set {
                if ((this.RequirementsRuleField.Equals(value) != true)) {
                    this.RequirementsRuleField = value;
                    this.RaisePropertyChanged("RequirementsRule");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleEnum", Namespace="http://imageright.com/imageright.webservice")]
    public enum RuleEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnEntry = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnExit = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Link", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Link : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AnchorField;
        
        private bool DebugField;
        
        private bool IsDefaultField;
        
        private bool OneWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Step SourceStepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Step TargetStepField;
        
        private bool ToBeDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Anchor {
            get {
                return this.AnchorField;
            }
            set {
                if ((this.AnchorField.Equals(value) != true)) {
                    this.AnchorField = value;
                    this.RaisePropertyChanged("Anchor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool OneWay {
            get {
                return this.OneWayField;
            }
            set {
                if ((this.OneWayField.Equals(value) != true)) {
                    this.OneWayField = value;
                    this.RaisePropertyChanged("OneWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Step SourceStep {
            get {
                return this.SourceStepField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceStepField, value) != true)) {
                    this.SourceStepField = value;
                    this.RaisePropertyChanged("SourceStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Step TargetStep {
            get {
                return this.TargetStepField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetStepField, value) != true)) {
                    this.TargetStepField = value;
                    this.RaisePropertyChanged("TargetStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool ToBeDeleted {
            get {
                return this.ToBeDeletedField;
            }
            set {
                if ((this.ToBeDeletedField.Equals(value) != true)) {
                    this.ToBeDeletedField = value;
                    this.RaisePropertyChanged("ToBeDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskCreateData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TaskCreateData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID AssignedToField;
        
        private System.DateTime AvailableField;
        
        private long ContainerIdField;
        
        private System.DateTime DeadlineField;
        
        private bool DebugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private long PagenumberField;
        
        private long PriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityID AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ContainerId {
            get {
                return this.ContainerIdField;
            }
            set {
                if ((this.ContainerIdField.Equals(value) != true)) {
                    this.ContainerIdField = value;
                    this.RaisePropertyChanged("ContainerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Pagenumber {
            get {
                return this.PagenumberField;
            }
            set {
                if ((this.PagenumberField.Equals(value) != true)) {
                    this.PagenumberField = value;
                    this.RaisePropertyChanged("Pagenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskParameters", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TaskParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID AssignedToField;
        
        private System.DateTime DateAvailableField;
        
        private System.DateTime DeadlineField;
        
        private bool DebugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private int PriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.SecurityID AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateAvailable {
            get {
                return this.DateAvailableField;
            }
            set {
                if ((this.DateAvailableField.Equals(value) != true)) {
                    this.DateAvailableField = value;
                    this.RaisePropertyChanged("DateAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Deadline {
            get {
                return this.DeadlineField;
            }
            set {
                if ((this.DeadlineField.Equals(value) != true)) {
                    this.DeadlineField = value;
                    this.RaisePropertyChanged("Deadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SplitLinkParameter", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class SplitLinkParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool RequiredToCompleteField;
        
        private bool IndependentField;
        
        private int LinkAnchorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool RequiredToComplete {
            get {
                return this.RequiredToCompleteField;
            }
            set {
                if ((this.RequiredToCompleteField.Equals(value) != true)) {
                    this.RequiredToCompleteField = value;
                    this.RaisePropertyChanged("RequiredToComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool Independent {
            get {
                return this.IndependentField;
            }
            set {
                if ((this.IndependentField.Equals(value) != true)) {
                    this.IndependentField = value;
                    this.RaisePropertyChanged("Independent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int LinkAnchor {
            get {
                return this.LinkAnchorField;
            }
            set {
                if ((this.LinkAnchorField.Equals(value) != true)) {
                    this.LinkAnchorField = value;
                    this.RaisePropertyChanged("LinkAnchor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page3x", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Page3x : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoldernumberField;
        
        private int DocidField;
        
        private int PagenumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Userkey1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatecapturedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimecapturedField;
        
        private char StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatField;
        
        private int OrientationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempdinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        private int PackagetypeField;
        
        private int DspPagenumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PacktypeDescrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FldrnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctypeDescrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Drawer {
            get {
                return this.DrawerField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawerField, value) != true)) {
                    this.DrawerField = value;
                    this.RaisePropertyChanged("Drawer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Foldernumber {
            get {
                return this.FoldernumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FoldernumberField, value) != true)) {
                    this.FoldernumberField = value;
                    this.RaisePropertyChanged("Foldernumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Docid {
            get {
                return this.DocidField;
            }
            set {
                if ((this.DocidField.Equals(value) != true)) {
                    this.DocidField = value;
                    this.RaisePropertyChanged("Docid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Pagenumber {
            get {
                return this.PagenumberField;
            }
            set {
                if ((this.PagenumberField.Equals(value) != true)) {
                    this.PagenumberField = value;
                    this.RaisePropertyChanged("Pagenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Userkey1 {
            get {
                return this.Userkey1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Userkey1Field, value) != true)) {
                    this.Userkey1Field = value;
                    this.RaisePropertyChanged("Userkey1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Doctype {
            get {
                return this.DoctypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctypeField, value) != true)) {
                    this.DoctypeField = value;
                    this.RaisePropertyChanged("Doctype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Docdate {
            get {
                return this.DocdateField;
            }
            set {
                if ((object.ReferenceEquals(this.DocdateField, value) != true)) {
                    this.DocdateField = value;
                    this.RaisePropertyChanged("Docdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Datecaptured {
            get {
                return this.DatecapturedField;
            }
            set {
                if ((object.ReferenceEquals(this.DatecapturedField, value) != true)) {
                    this.DatecapturedField = value;
                    this.RaisePropertyChanged("Datecaptured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Timecaptured {
            get {
                return this.TimecapturedField;
            }
            set {
                if ((object.ReferenceEquals(this.TimecapturedField, value) != true)) {
                    this.TimecapturedField = value;
                    this.RaisePropertyChanged("Timecaptured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public char Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Format {
            get {
                return this.FormatField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatField, value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public int Orientation {
            get {
                return this.OrientationField;
            }
            set {
                if ((this.OrientationField.Equals(value) != true)) {
                    this.OrientationField = value;
                    this.RaisePropertyChanged("Orientation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string Tempdin {
            get {
                return this.TempdinField;
            }
            set {
                if ((object.ReferenceEquals(this.TempdinField, value) != true)) {
                    this.TempdinField = value;
                    this.RaisePropertyChanged("Tempdin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public int Packagetype {
            get {
                return this.PackagetypeField;
            }
            set {
                if ((this.PackagetypeField.Equals(value) != true)) {
                    this.PackagetypeField = value;
                    this.RaisePropertyChanged("Packagetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public int DspPagenumber {
            get {
                return this.DspPagenumberField;
            }
            set {
                if ((this.DspPagenumberField.Equals(value) != true)) {
                    this.DspPagenumberField = value;
                    this.RaisePropertyChanged("DspPagenumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string PacktypeDescr {
            get {
                return this.PacktypeDescrField;
            }
            set {
                if ((object.ReferenceEquals(this.PacktypeDescrField, value) != true)) {
                    this.PacktypeDescrField = value;
                    this.RaisePropertyChanged("PacktypeDescr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string Fldrname {
            get {
                return this.FldrnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FldrnameField, value) != true)) {
                    this.FldrnameField = value;
                    this.RaisePropertyChanged("Fldrname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string DoctypeDescr {
            get {
                return this.DoctypeDescrField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctypeDescrField, value) != true)) {
                    this.DoctypeDescrField = value;
                    this.RaisePropertyChanged("DoctypeDescr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MappingLookup", Namespace="http://imageright.com/imageright.webservice")]
    public enum MappingLookup : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderType = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drawer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attribute = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Criterion = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Account = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderType3x = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentType3x = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserByName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Step = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Step3x = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flow3x = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WSVersionInfo", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class WSVersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string WebService {
            get {
                return this.WebServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.WebServiceField, value) != true)) {
                    this.WebServiceField = value;
                    this.RaisePropertyChanged("WebService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Library {
            get {
                return this.LibraryField;
            }
            set {
                if ((object.ReferenceEquals(this.LibraryField, value) != true)) {
                    this.LibraryField = value;
                    this.RaisePropertyChanged("Library");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Session {
            get {
                return this.SessionField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionField, value) != true)) {
                    this.SessionField = value;
                    this.RaisePropertyChanged("Session");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageMark", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class PageMark : ServiceGateway.ImageRightServiceReference.Mark {
        
        private int DeleteFlagField;
        
        private long DocidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageDescriptionField;
        
        private long PageIdField;
        
        private int PageNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeleteFlag {
            get {
                return this.DeleteFlagField;
            }
            set {
                if ((this.DeleteFlagField.Equals(value) != true)) {
                    this.DeleteFlagField = value;
                    this.RaisePropertyChanged("DeleteFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Docid {
            get {
                return this.DocidField;
            }
            set {
                if ((this.DocidField.Equals(value) != true)) {
                    this.DocidField = value;
                    this.RaisePropertyChanged("Docid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string PageDescription {
            get {
                return this.PageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PageDescriptionField, value) != true)) {
                    this.PageDescriptionField = value;
                    this.RaisePropertyChanged("PageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long PageId {
            get {
                return this.PageIdField;
            }
            set {
                if ((this.PageIdField.Equals(value) != true)) {
                    this.PageIdField = value;
                    this.RaisePropertyChanged("PageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageVersion", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class PageVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int VersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.SecurityID CreatedByField;
        
        private System.DateTime DateCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SecurityID CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFileData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class CreateFileData : ServiceGateway.ImageRightServiceReference.CreateObjectData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumber3Field;
        
        private bool TemporaryFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FileNumber1 {
            get {
                return this.FileNumber1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber1Field, value) != true)) {
                    this.FileNumber1Field = value;
                    this.RaisePropertyChanged("FileNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FileNumber2 {
            get {
                return this.FileNumber2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber2Field, value) != true)) {
                    this.FileNumber2Field = value;
                    this.RaisePropertyChanged("FileNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FileNumber3 {
            get {
                return this.FileNumber3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumber3Field, value) != true)) {
                    this.FileNumber3Field = value;
                    this.RaisePropertyChanged("FileNumber3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool TemporaryFile {
            get {
                return this.TemporaryFileField;
            }
            set {
                if ((this.TemporaryFileField.Equals(value) != true)) {
                    this.TemporaryFileField = value;
                    this.RaisePropertyChanged("TemporaryFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string SourceData {
            get {
                return this.SourceDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDataField, value) != true)) {
                    this.SourceDataField = value;
                    this.RaisePropertyChanged("SourceData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateObjectData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
    public partial class CreateObjectData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private long ObjTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjTypeProgNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ObjTypeId {
            get {
                return this.ObjTypeIdField;
            }
            set {
                if ((this.ObjTypeIdField.Equals(value) != true)) {
                    this.ObjTypeIdField = value;
                    this.RaisePropertyChanged("ObjTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ObjTypeProgName {
            get {
                return this.ObjTypeProgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjTypeProgNameField, value) != true)) {
                    this.ObjTypeProgNameField = value;
                    this.RaisePropertyChanged("ObjTypeProgName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseData", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ResponseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool SucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Problem[] ProblemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Succeeded {
            get {
                return this.SucceededField;
            }
            set {
                if ((this.SucceededField.Equals(value) != true)) {
                    this.SucceededField = value;
                    this.RaisePropertyChanged("Succeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.Problem[] Problems {
            get {
                return this.ProblemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemsField, value) != true)) {
                    this.ProblemsField = value;
                    this.RaisePropertyChanged("Problems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Problem", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Problem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ServiceGateway.ImageRightServiceReference.ServerObjectType typeField;
        
        private long objectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.ServerObjectType type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long objectId {
            get {
                return this.objectIdField;
            }
            set {
                if ((this.objectIdField.Equals(value) != true)) {
                    this.objectIdField = value;
                    this.RaisePropertyChanged("objectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerObjectType", Namespace="http://imageright.com/imageright.webservice")]
    public enum ServerObjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Folder = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Page = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diary = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToLink = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromLink = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageList", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class ImageList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] EncryptionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Image[] ImagesField;
        
        private int VersionField;
        
        private int PreRotationField;
        
        private int RotationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] EncryptionKey {
            get {
                return this.EncryptionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionKeyField, value) != true)) {
                    this.EncryptionKeyField = value;
                    this.RaisePropertyChanged("EncryptionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int PreRotation {
            get {
                return this.PreRotationField;
            }
            set {
                if ((this.PreRotationField.Equals(value) != true)) {
                    this.PreRotationField = value;
                    this.RaisePropertyChanged("PreRotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        private long IdField;
        
        private int ImageTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int ImageType {
            get {
                return this.ImageTypeField;
            }
            set {
                if ((this.ImageTypeField.Equals(value) != true)) {
                    this.ImageTypeField = value;
                    this.RaisePropertyChanged("ImageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageConversionDO", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class PageConversionDO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.Image SourceImageField;
        
        private ServiceGateway.ImageRightServiceReference.InputTypes InputTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.Image SourceImage {
            get {
                return this.SourceImageField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceImageField, value) != true)) {
                    this.SourceImageField = value;
                    this.RaisePropertyChanged("SourceImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public ServiceGateway.ImageRightServiceReference.InputTypes InputType {
            get {
                return this.InputTypeField;
            }
            set {
                if ((this.InputTypeField.Equals(value) != true)) {
                    this.InputTypeField = value;
                    this.RaisePropertyChanged("InputType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputTypes", Namespace="http://imageright.com/imageright.webservice")]
    public enum InputTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Native = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pdf = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tiff = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiPageTiff = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociateOptions", Namespace="http://imageright.com/imageright.webservice")]
    public enum AssociateOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bidirectional = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest NewDrawerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest NewFileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest NewFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValuesField;
        
        private long FileIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest NewDrawer {
            get {
                return this.NewDrawerField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrawerField, value) != true)) {
                    this.NewDrawerField = value;
                    this.RaisePropertyChanged("NewDrawer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewType {
            get {
                return this.NewTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewTypeField, value) != true)) {
                    this.NewTypeField = value;
                    this.RaisePropertyChanged("NewType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest NewFileNumber {
            get {
                return this.NewFileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFileNumberField, value) != true)) {
                    this.NewFileNumberField = value;
                    this.RaisePropertyChanged("NewFileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest NewFileName {
            get {
                return this.NewFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFileNameField, value) != true)) {
                    this.NewFileNameField = value;
                    this.RaisePropertyChanged("NewFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValues {
            get {
                return this.NewAttributeValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.NewAttributeValuesField, value) != true)) {
                    this.NewAttributeValuesField = value;
                    this.RaisePropertyChanged("NewAttributeValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDrawerUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileDrawerUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long DrawerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long DrawerId {
            get {
                return this.DrawerIdField;
            }
            set {
                if ((this.DrawerIdField.Equals(value) != true)) {
                    this.DrawerIdField = value;
                    this.RaisePropertyChanged("DrawerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class TypeUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeProgrammaticNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((this.TypeIDField.Equals(value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TypeProgrammaticName {
            get {
                return this.TypeProgrammaticNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeProgrammaticNameField, value) != true)) {
                    this.TypeProgrammaticNameField = value;
                    this.RaisePropertyChanged("TypeProgrammaticName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileNumberUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileNumberUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Name3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name1 {
            get {
                return this.Name1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name1Field, value) != true)) {
                    this.Name1Field = value;
                    this.RaisePropertyChanged("Name1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name2 {
            get {
                return this.Name2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name2Field, value) != true)) {
                    this.Name2Field = value;
                    this.RaisePropertyChanged("Name2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name3 {
            get {
                return this.Name3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Name3Field, value) != true)) {
                    this.Name3Field = value;
                    this.RaisePropertyChanged("Name3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileNameUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileNameUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewFileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string NewFileName {
            get {
                return this.NewFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewFileNameField, value) != true)) {
                    this.NewFileNameField = value;
                    this.RaisePropertyChanged("NewFileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class AttributeUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeData[] NewOrChangedAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeData[] DeletedAttributesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] NewOrChangedAttributes {
            get {
                return this.NewOrChangedAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.NewOrChangedAttributesField, value) != true)) {
                    this.NewOrChangedAttributesField = value;
                    this.RaisePropertyChanged("NewOrChangedAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] DeletedAttributes {
            get {
                return this.DeletedAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedAttributesField, value) != true)) {
                    this.DeletedAttributesField = value;
                    this.RaisePropertyChanged("DeletedAttributes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfoUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FileInfoUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNumber3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string drawerPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newFileNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newFileNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newFileNumber3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newDrawerPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[] attrUpdatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string fileNumber1 {
            get {
                return this.fileNumber1Field;
            }
            set {
                if ((object.ReferenceEquals(this.fileNumber1Field, value) != true)) {
                    this.fileNumber1Field = value;
                    this.RaisePropertyChanged("fileNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string fileNumber2 {
            get {
                return this.fileNumber2Field;
            }
            set {
                if ((object.ReferenceEquals(this.fileNumber2Field, value) != true)) {
                    this.fileNumber2Field = value;
                    this.RaisePropertyChanged("fileNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string fileNumber3 {
            get {
                return this.fileNumber3Field;
            }
            set {
                if ((object.ReferenceEquals(this.fileNumber3Field, value) != true)) {
                    this.fileNumber3Field = value;
                    this.RaisePropertyChanged("fileNumber3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string drawerPath {
            get {
                return this.drawerPathField;
            }
            set {
                if ((object.ReferenceEquals(this.drawerPathField, value) != true)) {
                    this.drawerPathField = value;
                    this.RaisePropertyChanged("drawerPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string newFileNumber1 {
            get {
                return this.newFileNumber1Field;
            }
            set {
                if ((object.ReferenceEquals(this.newFileNumber1Field, value) != true)) {
                    this.newFileNumber1Field = value;
                    this.RaisePropertyChanged("newFileNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string newFileNumber2 {
            get {
                return this.newFileNumber2Field;
            }
            set {
                if ((object.ReferenceEquals(this.newFileNumber2Field, value) != true)) {
                    this.newFileNumber2Field = value;
                    this.RaisePropertyChanged("newFileNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string newFileNumber3 {
            get {
                return this.newFileNumber3Field;
            }
            set {
                if ((object.ReferenceEquals(this.newFileNumber3Field, value) != true)) {
                    this.newFileNumber3Field = value;
                    this.RaisePropertyChanged("newFileNumber3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string newDrawerPath {
            get {
                return this.newDrawerPathField;
            }
            set {
                if ((object.ReferenceEquals(this.newDrawerPathField, value) != true)) {
                    this.newDrawerPathField = value;
                    this.RaisePropertyChanged("newDrawerPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string fileType {
            get {
                return this.fileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.fileTypeField, value) != true)) {
                    this.fileTypeField = value;
                    this.RaisePropertyChanged("fileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string newType {
            get {
                return this.newTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.newTypeField, value) != true)) {
                    this.newTypeField = value;
                    this.RaisePropertyChanged("newType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string newName {
            get {
                return this.newNameField;
            }
            set {
                if ((object.ReferenceEquals(this.newNameField, value) != true)) {
                    this.newNameField = value;
                    this.RaisePropertyChanged("newName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[] attrUpdates {
            get {
                return this.attrUpdatesField;
            }
            set {
                if ((object.ReferenceEquals(this.attrUpdatesField, value) != true)) {
                    this.attrUpdatesField = value;
                    this.RaisePropertyChanged("attrUpdates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeUpdateCommand", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class AttributeUpdateCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool clearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool clear {
            get {
                return this.clearField;
            }
            set {
                if ((this.clearField.Equals(value) != true)) {
                    this.clearField = value;
                    this.RaisePropertyChanged("clear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class FolderUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long FolderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DescriptionUpdate NewDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long FolderID {
            get {
                return this.FolderIDField;
            }
            set {
                if ((this.FolderIDField.Equals(value) != true)) {
                    this.FolderIDField = value;
                    this.RaisePropertyChanged("FolderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewType {
            get {
                return this.NewTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewTypeField, value) != true)) {
                    this.NewTypeField = value;
                    this.RaisePropertyChanged("NewType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.DescriptionUpdate NewDescription {
            get {
                return this.NewDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDescriptionField, value) != true)) {
                    this.NewDescriptionField = value;
                    this.RaisePropertyChanged("NewDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValues {
            get {
                return this.NewAttributeValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.NewAttributeValuesField, value) != true)) {
                    this.NewAttributeValuesField = value;
                    this.RaisePropertyChanged("NewAttributeValues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DescriptionUpdate", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DescriptionUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DocumentUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DateUpdateRequest NewDocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.DescriptionUpdate NewDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValuesField;
        
        private long DocumentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public ServiceGateway.ImageRightServiceReference.TypeUpdateRequest NewType {
            get {
                return this.NewTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewTypeField, value) != true)) {
                    this.NewTypeField = value;
                    this.RaisePropertyChanged("NewType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DateUpdateRequest NewDocumentDate {
            get {
                return this.NewDocumentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDocumentDateField, value) != true)) {
                    this.NewDocumentDateField = value;
                    this.RaisePropertyChanged("NewDocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.DescriptionUpdate NewDescription {
            get {
                return this.NewDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDescriptionField, value) != true)) {
                    this.NewDescriptionField = value;
                    this.RaisePropertyChanged("NewDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest NewAttributeValues {
            get {
                return this.NewAttributeValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.NewAttributeValuesField, value) != true)) {
                    this.NewAttributeValuesField = value;
                    this.RaisePropertyChanged("NewAttributeValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public long DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateUpdateRequest", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class DateUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputTypes", Namespace="http://imageright.com/imageright.webservice")]
    public enum OutputTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZIP = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Native = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeAnn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeAnnToPDF = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeOvlToTiff = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeOvlToPDF = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeOvlAnnToTiff = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeOvlAnnToPDF = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://imageright.com/imageright.webservice")]
    [System.SerializableAttribute()]
    public partial class Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long DeviceIDField;
        
        private bool IsDefaultField;
        
        private bool IsEnabledField;
        
        private ServiceGateway.ImageRightServiceReference.DeviceType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ServiceGateway.ImageRightServiceReference.DeviceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UNC {
            get {
                return this.UNCField;
            }
            set {
                if ((object.ReferenceEquals(this.UNCField, value) != true)) {
                    this.UNCField = value;
                    this.RaisePropertyChanged("UNC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceType", Namespace="http://imageright.com/imageright.webservice")]
    public enum DeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nearline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legacy = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://imageright.com/imageright.webservice", ConfigurationName="ImageRightServiceReference.IRWebService40Soap")]
    public interface IRWebService40Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawersByParent", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse GetDrawersByParent(ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawersByParent", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse> GetDrawersByParentAsync(ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawerByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse GetDrawerByRef(ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawerByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse> GetDrawerByRefAsync(ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileMarkDefs", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse GetFileMarkDefs(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileMarkDefs", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse> GetFileMarkDefsAsync(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarkDefs", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse GetPageMarkDefs(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarkDefs", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse> GetPageMarkDefsAsync(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileTemplate", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse GetFileTemplate(ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileTemplate", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse> GetFileTemplateAsync(ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTypePermissions", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse GetTypePermissions(ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTypePermissions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse> GetTypePermissionsAsync(ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTaskByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse GetTaskByRef(ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTaskByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse> GetTaskByRefAsync(ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksForCurrentUser", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse GetTasksForCurrentUser(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksForCurrentUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse> GetTasksForCurrentUserAsync(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksEx", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTasksExResponse GetTasksEx(ServiceGateway.ImageRightServiceReference.GetTasksExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksEx", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksExResponse> GetTasksExAsync(ServiceGateway.ImageRightServiceReference.GetTasksExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksForFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse GetTasksForFile(ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetTasksForFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse> GetTasksForFileAsync(ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDiaryFlow", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse GetDiaryFlow(ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDiaryFlow", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse> GetDiaryFlowAsync(ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFlows", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFlowsResponse GetFlows(ServiceGateway.ImageRightServiceReference.GetFlowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFlows", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowsResponse> GetFlowsAsync(ServiceGateway.ImageRightServiceReference.GetFlowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFlowByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse GetFlowByRef(ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFlowByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse> GetFlowByRefAsync(ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetStepByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetStepByRefResponse GetStepByRef(ServiceGateway.ImageRightServiceReference.GetStepByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetStepByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepByRefResponse> GetStepByRefAsync(ServiceGateway.ImageRightServiceReference.GetStepByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSteps", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetStepsResponse GetSteps(ServiceGateway.ImageRightServiceReference.GetStepsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSteps", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepsResponse> GetStepsAsync(ServiceGateway.ImageRightServiceReference.GetStepsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAuthorizedUsersForStep", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse GetAuthorizedUsersForStep(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAuthorizedUsersForStep", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse> GetAuthorizedUsersForStepAsync(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetStepAttributes", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse GetStepAttributes(ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetStepAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse> GetStepAttributesAsync(ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLinks", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetLinksResponse GetLinks(ServiceGateway.ImageRightServiceReference.GetLinksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLinks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLinksResponse> GetLinksAsync(ServiceGateway.ImageRightServiceReference.GetLinksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateTaskResponse CreateTask(ServiceGateway.ImageRightServiceReference.CreateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateTaskResponse> CreateTaskAsync(ServiceGateway.ImageRightServiceReference.CreateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/LockTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.LockTaskResponse LockTask(ServiceGateway.ImageRightServiceReference.LockTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/LockTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockTaskResponse> LockTaskAsync(ServiceGateway.ImageRightServiceReference.LockTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UnlockTaskResponse UnlockTask(ServiceGateway.ImageRightServiceReference.UnlockTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockTaskResponse> UnlockTaskAsync(ServiceGateway.ImageRightServiceReference.UnlockTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdateTaskResponse UpdateTask(ServiceGateway.ImageRightServiceReference.UpdateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateTaskResponse> UpdateTaskAsync(ServiceGateway.ImageRightServiceReference.UpdateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/MoveTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.MoveTaskResponse MoveTask(ServiceGateway.ImageRightServiceReference.MoveTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/MoveTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.MoveTaskResponse> MoveTaskAsync(ServiceGateway.ImageRightServiceReference.MoveTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/KillTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.KillTaskResponse KillTask(ServiceGateway.ImageRightServiceReference.KillTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/KillTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTaskResponse> KillTaskAsync(ServiceGateway.ImageRightServiceReference.KillTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/KillTasks", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.KillTasksResponse KillTasks(ServiceGateway.ImageRightServiceReference.KillTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/KillTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTasksResponse> KillTasksAsync(ServiceGateway.ImageRightServiceReference.KillTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RouteTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.RouteTaskResponse RouteTask(ServiceGateway.ImageRightServiceReference.RouteTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RouteTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RouteTaskResponse> RouteTaskAsync(ServiceGateway.ImageRightServiceReference.RouteTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseTaskToStep", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse ReleaseTaskToStep(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseTaskToStep", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse> ReleaseTaskToStepAsync(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse ReleaseTask(ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse> ReleaseTaskAsync(ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseSplitTask", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse ReleaseSplitTask(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ReleaseSplitTask", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse> ReleaseSplitTaskAsync(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/SetTaskAttribute", ReplyAction="*")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BurnQueueRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BaseObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectDataRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeleteOperationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileJacketRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateFlags))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteHideOperation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfLong))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccountType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DepartmentRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ProfileRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TemplateRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MarkRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTemplate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskErrorCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchConditionLists))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CustomAttributeTarget))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompareOperation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompoundOp))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepDef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FlowRequestFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRequestFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfString))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.RuleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCreateData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskParameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MappingLookup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WSVersionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ResponseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ServerObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ImageList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageConversionDO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.InputTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AssociateOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypeUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DescriptionUpdate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DateUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.OutputTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeviceType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(char))]
        ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse SetTaskAttribute(ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/SetTaskAttribute", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse> SetTaskAttributeAsync(ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSubTasks", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetSubTasksResponse GetSubTasks(ServiceGateway.ImageRightServiceReference.GetSubTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSubTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSubTasksResponse> GetSubTasksAsync(ServiceGateway.ImageRightServiceReference.GetSubTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPages3x", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPages3xResponse GetPages3x(ServiceGateway.ImageRightServiceReference.GetPages3xRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPages3x", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPages3xResponse> GetPages3xAsync(ServiceGateway.ImageRightServiceReference.GetPages3xRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocumentsLegacy", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse FindDocumentsLegacy(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocumentsLegacy", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse> FindDocumentsLegacyAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMapping", ReplyAction="*")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Drawer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ObjectTypeDataRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BurnQueueRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.BaseObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectDataRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.LocationRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AccountPermissions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeleteOperationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ContainerType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypedObjectData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileJacketRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateFlags))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteCollection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Note))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteHideOperation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.NoteRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CalcNoteEntry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Folder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfLong))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccount))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityAccountType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DepartmentRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ProfileRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TemplateRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.UserFlags))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SecurityID[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.User[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MarkRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Mark[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTemplate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentTypeRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskErrorCode))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Task[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchConditionLists))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SearchCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CustomAttributeTarget))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompareOperation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentAttribute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DrawerCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CompoundOp))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCondition[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Step))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepDef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowRef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WorkflowStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FlowRequestFilter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepRequestFlag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ArrayOfString))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Workflow[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.RuleEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.StepAttributeRule[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Link[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskCreateData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskParameters))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TaskRef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.SplitLinkParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Page3x[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.MappingLookup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.WSVersionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Document[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.File[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageMark))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageVersion[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateFileData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.CreateObjectData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ResponseData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Problem))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ServerObjectType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.ImageList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageConversionDO))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.InputTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AssociateOptions))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileDrawerUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.TypeUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNumberUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileNameUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeUpdateCommand))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.FolderUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DescriptionUpdate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DateUpdateRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.OutputTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.PageRef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeDef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.AttributeRule[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.DeviceType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Device[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceGateway.ImageRightServiceReference.Location[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(char))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(char))]
        ServiceGateway.ImageRightServiceReference.GetMappingResponse GetMapping(ServiceGateway.ImageRightServiceReference.GetMappingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMapping", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMappingResponse> GetMappingAsync(ServiceGateway.ImageRightServiceReference.GetMappingRequest request);
        
        // CODEGEN: Generating message contract since element name AvailableConnectionsResult from namespace http://imageright.com/imageright.webservice is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AvailableConnections", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse AvailableConnections(ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AvailableConnections", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse> AvailableConnectionsAsync(ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSecurityId", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse GetSecurityId(ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSecurityId", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse> GetSecurityIdAsync(ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CurrentUser", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CurrentUserResponse CurrentUser(ServiceGateway.ImageRightServiceReference.CurrentUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CurrentUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CurrentUserResponse> CurrentUserAsync(ServiceGateway.ImageRightServiceReference.CurrentUserRequest request);
        
        // CODEGEN: Generating message contract since element name username from namespace http://imageright.com/imageright.webservice is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UserLogin", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UserLoginResponse UserLogin(ServiceGateway.ImageRightServiceReference.UserLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UserLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLoginResponse> UserLoginAsync(ServiceGateway.ImageRightServiceReference.UserLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ChangeUserPassword", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse ChangeUserPassword(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/ChangeUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse> ChangeUserPasswordAsync(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest request);
        
        // CODEGEN: Generating message contract since element name securityToken from namespace http://imageright.com/imageright.webservice is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UserLogoff", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UserLogoffResponse UserLogoff(ServiceGateway.ImageRightServiceReference.UserLogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UserLogoff", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLogoffResponse> UserLogoffAsync(ServiceGateway.ImageRightServiceReference.UserLogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockAllTasks", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse UnlockAllTasks(ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockAllTasks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse> UnlockAllTasksAsync(ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSecurityAccount", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse GetSecurityAccount(ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetSecurityAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse> GetSecurityAccountAsync(ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest request);
        
        // CODEGEN: Generating message contract since element name VersionResult from namespace http://imageright.com/imageright.webservice is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/Version", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.VersionResponse Version(ServiceGateway.ImageRightServiceReference.VersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/Version", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.VersionResponse> VersionAsync(ServiceGateway.ImageRightServiceReference.VersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetUser", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetUserResponse GetUser(ServiceGateway.ImageRightServiceReference.GetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetUser", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetUserResponse> GetUserAsync(ServiceGateway.ImageRightServiceReference.GetUserRequest request);
        
        // CODEGEN: Generating message contract since element name securityToken from namespace http://imageright.com/imageright.webservice is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/IsLoggedIn", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.IsLoggedInResponse IsLoggedIn(ServiceGateway.ImageRightServiceReference.IsLoggedInRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/IsLoggedIn", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.IsLoggedInResponse> IsLoggedInAsync(ServiceGateway.ImageRightServiceReference.IsLoggedInRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindUserByName", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindUserByNameResponse FindUserByName(ServiceGateway.ImageRightServiceReference.FindUserByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindUserByName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindUserByNameResponse> FindUserByNameAsync(ServiceGateway.ImageRightServiceReference.FindUserByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFolderByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse GetFolderByRef(ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFolderByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse> GetFolderByRefAsync(ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDocumentByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse GetDocumentByRef(ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDocumentByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse> GetDocumentByRefAsync(ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileByRefResponse GetFileByRef(ServiceGateway.ImageRightServiceReference.GetFileByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileByRefResponse> GetFileByRefAsync(ServiceGateway.ImageRightServiceReference.GetFileByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileResponse GetFile(ServiceGateway.ImageRightServiceReference.GetFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileResponse> GetFileAsync(ServiceGateway.ImageRightServiceReference.GetFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetContent", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetContentResponse GetContent(ServiceGateway.ImageRightServiceReference.GetContentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetContent", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetContentResponse> GetContentAsync(ServiceGateway.ImageRightServiceReference.GetContentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetObject", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetObjectResponse GetObject(ServiceGateway.ImageRightServiceReference.GetObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetObject", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectResponse> GetObjectAsync(ServiceGateway.ImageRightServiceReference.GetObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetParent", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetParentResponse GetParent(ServiceGateway.ImageRightServiceReference.GetParentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetParent", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetParentResponse> GetParentAsync(ServiceGateway.ImageRightServiceReference.GetParentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributes", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributesResponse GetAttributes(ServiceGateway.ImageRightServiceReference.GetAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributesResponse> GetAttributesAsync(ServiceGateway.ImageRightServiceReference.GetAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttribute", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributeResponse GetAttribute(ServiceGateway.ImageRightServiceReference.GetAttributeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttribute", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeResponse> GetAttributeAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeByName", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse GetAttributeByName(ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeByName", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse> GetAttributeByNameAsync(ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocuments", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindDocumentsResponse FindDocuments(ServiceGateway.ImageRightServiceReference.FindDocumentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsResponse> FindDocumentsAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocumentsEx", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse FindDocumentsEx(ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindDocumentsEx", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse> FindDocumentsExAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindFiles", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindFilesResponse FindFiles(ServiceGateway.ImageRightServiceReference.FindFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesResponse> FindFilesAsync(ServiceGateway.ImageRightServiceReference.FindFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindFilesEx", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.FindFilesExResponse FindFilesEx(ServiceGateway.ImageRightServiceReference.FindFilesExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/FindFilesEx", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesExResponse> FindFilesExAsync(ServiceGateway.ImageRightServiceReference.FindFilesExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPages", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPagesResponse GetPages(ServiceGateway.ImageRightServiceReference.GetPagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPages", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagesResponse> GetPagesAsync(ServiceGateway.ImageRightServiceReference.GetPagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFirstPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFirstPageResponse GetFirstPage(ServiceGateway.ImageRightServiceReference.GetFirstPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFirstPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFirstPageResponse> GetFirstPageAsync(ServiceGateway.ImageRightServiceReference.GetFirstPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPageByRefResponse GetPageByRef(ServiceGateway.ImageRightServiceReference.GetPageByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageByRefResponse> GetPageByRefAsync(ServiceGateway.ImageRightServiceReference.GetPageByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAssociatedFiles", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse GetAssociatedFiles(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAssociatedFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse> GetAssociatedFilesAsync(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileMarks", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileMarksResponse GetFileMarks(ServiceGateway.ImageRightServiceReference.GetFileMarksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileMarks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarksResponse> GetFileMarksAsync(ServiceGateway.ImageRightServiceReference.GetFileMarksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarksByFileRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse GetPageMarksByFileRef(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarksByFileRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse> GetPageMarksByFileRefAsync(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarksByPageRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse GetPageMarksByPageRef(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageMarksByPageRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse> GetPageMarksByPageRefAsync(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageVersions", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse GetPageVersions(ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPageVersions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse> GetPageVersionsAsync(ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPagePathToFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse GetPagePathToFile(ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPagePathToFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse> GetPagePathToFileAsync(ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetObjectPathToFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse GetObjectPathToFile(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetObjectPathToFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse> GetObjectPathToFileAsync(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetNotes", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetNotesResponse GetNotes(ServiceGateway.ImageRightServiceReference.GetNotesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetNotes", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetNotesResponse> GetNotesAsync(ServiceGateway.ImageRightServiceReference.GetNotesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/SetAttributes", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.SetAttributesResponse SetAttributes(ServiceGateway.ImageRightServiceReference.SetAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/SetAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetAttributesResponse> SetAttributesAsync(ServiceGateway.ImageRightServiceReference.SetAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateFileResponse CreateFile(ServiceGateway.ImageRightServiceReference.CreateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFileResponse> CreateFileAsync(ServiceGateway.ImageRightServiceReference.CreateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateObject", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateObjectResponse CreateObject(ServiceGateway.ImageRightServiceReference.CreateObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateObject", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateObjectResponse> CreateObjectAsync(ServiceGateway.ImageRightServiceReference.CreateObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateDocument", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateDocumentResponse CreateDocument(ServiceGateway.ImageRightServiceReference.CreateDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateDocumentResponse> CreateDocumentAsync(ServiceGateway.ImageRightServiceReference.CreateDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/DeleteDocument", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse DeleteDocument(ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/DeleteDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse> DeleteDocumentAsync(ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateFolder", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateFolderResponse CreateFolder(ServiceGateway.ImageRightServiceReference.CreateFolderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateFolder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFolderResponse> CreateFolderAsync(ServiceGateway.ImageRightServiceReference.CreateFolderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AddPageResponse AddPage(ServiceGateway.ImageRightServiceReference.AddPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageResponse> AddPageAsync(ServiceGateway.ImageRightServiceReference.AddPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddConvertedPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse AddConvertedPage(ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddConvertedPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse> AddConvertedPageAsync(ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateBatch", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.CreateBatchResponse CreateBatch(ServiceGateway.ImageRightServiceReference.CreateBatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/CreateBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateBatchResponse> CreateBatchAsync(ServiceGateway.ImageRightServiceReference.CreateBatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/InsertPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.InsertPageResponse InsertPage(ServiceGateway.ImageRightServiceReference.InsertPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/InsertPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.InsertPageResponse> InsertPageAsync(ServiceGateway.ImageRightServiceReference.InsertPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/LockPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.LockPageResponse LockPage(ServiceGateway.ImageRightServiceReference.LockPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/LockPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockPageResponse> LockPageAsync(ServiceGateway.ImageRightServiceReference.LockPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockPage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UnlockPageResponse UnlockPage(ServiceGateway.ImageRightServiceReference.UnlockPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UnlockPage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockPageResponse> UnlockPageAsync(ServiceGateway.ImageRightServiceReference.UnlockPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddNote", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AddNoteResponse AddNote(ServiceGateway.ImageRightServiceReference.AddNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddNote", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddNoteResponse> AddNoteAsync(ServiceGateway.ImageRightServiceReference.AddNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddFileMark", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AddFileMarkResponse AddFileMark(ServiceGateway.ImageRightServiceReference.AddFileMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddFileMark", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddFileMarkResponse> AddFileMarkAsync(ServiceGateway.ImageRightServiceReference.AddFileMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddPageMark", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AddPageMarkResponse AddPageMark(ServiceGateway.ImageRightServiceReference.AddPageMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AddPageMark", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageMarkResponse> AddPageMarkAsync(ServiceGateway.ImageRightServiceReference.AddPageMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RemovePageMark", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse RemovePageMark(ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RemovePageMark", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse> RemovePageMarkAsync(ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AssociateFiles", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.AssociateFilesResponse AssociateFiles(ServiceGateway.ImageRightServiceReference.AssociateFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/AssociateFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AssociateFilesResponse> AssociateFilesAsync(ServiceGateway.ImageRightServiceReference.AssociateFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RemoveFileAssociation", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse RemoveFileAssociation(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/RemoveFileAssociation", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse> RemoveFileAssociationAsync(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdateFileResponse UpdateFile(ServiceGateway.ImageRightServiceReference.UpdateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileResponse> UpdateFileAsync(ServiceGateway.ImageRightServiceReference.UpdateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFileInfo", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse UpdateFileInfo(ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFileInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse> UpdateFileInfoAsync(ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFolder", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdateFolderResponse UpdateFolder(ServiceGateway.ImageRightServiceReference.UpdateFolderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateFolder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFolderResponse> UpdateFolderAsync(ServiceGateway.ImageRightServiceReference.UpdateFolderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateDocument", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse UpdateDocument(ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdateDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse> UpdateDocumentAsync(ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdatePageDescription", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse UpdatePageDescription(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdatePageDescription", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse> UpdatePageDescriptionAsync(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdatePage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.UpdatePageResponse UpdatePage(ServiceGateway.ImageRightServiceReference.UpdatePageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/UpdatePage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageResponse> UpdatePageAsync(ServiceGateway.ImageRightServiceReference.UpdatePageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPermissions", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetPermissionsResponse GetPermissions(ServiceGateway.ImageRightServiceReference.GetPermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetPermissions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPermissionsResponse> GetPermissionsAsync(ServiceGateway.ImageRightServiceReference.GetPermissionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetImage", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetImageResponse GetImage(ServiceGateway.ImageRightServiceReference.GetImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetImage", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetImageResponse> GetImageAsync(ServiceGateway.ImageRightServiceReference.GetImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFileEx", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse GetMultiPageImageFileEx(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFileEx", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse> GetMultiPageImageFileExAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFile", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse GetMultiPageImageFile(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse> GetMultiPageImageFileAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFileUsingPages", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse GetMultiPageImageFileUsingPages(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetMultiPageImageFileUsingPages", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse> GetMultiPageImageFileUsingPagesAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAllDocTypes", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse GetAllDocTypes(ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAllDocTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse> GetAllDocTypesAsync(ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLocationByRef", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse GetLocationByRef(ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLocationByRef", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse> GetLocationByRefAsync(ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetType", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetTypeResponse GetType(ServiceGateway.ImageRightServiceReference.GetTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypeResponse> GetTypeAsync(ServiceGateway.ImageRightServiceReference.GetTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawerType", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse GetDrawerType(ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawerType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse> GetDrawerTypeAsync(ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileType", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFileTypeResponse GetFileType(ServiceGateway.ImageRightServiceReference.GetFileTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFileType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTypeResponse> GetFileTypeAsync(ServiceGateway.ImageRightServiceReference.GetFileTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFolderType", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse GetFolderType(ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetFolderType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse> GetFolderTypeAsync(ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDocumentType", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse GetDocumentType(ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDocumentType", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse> GetDocumentTypeAsync(ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeDefs", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse GetAttributeDefs(ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeDefs", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse> GetAttributeDefsAsync(ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeRules", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse GetAttributeRules(ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeRules", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse> GetAttributeRulesAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeRule", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse GetAttributeRule(ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetAttributeRule", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse> GetAttributeRuleAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDevices", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDevicesResponse GetDevices(ServiceGateway.ImageRightServiceReference.GetDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDevices", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDevicesResponse> GetDevicesAsync(ServiceGateway.ImageRightServiceReference.GetDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLocations", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetLocationsResponse GetLocations(ServiceGateway.ImageRightServiceReference.GetLocationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetLocations", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationsResponse> GetLocationsAsync(ServiceGateway.ImageRightServiceReference.GetLocationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawers", ReplyAction="*")]
        ServiceGateway.ImageRightServiceReference.GetDrawersResponse GetDrawers(ServiceGateway.ImageRightServiceReference.GetDrawersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://imageright.com/imageright.webservice/GetDrawers", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersResponse> GetDrawersAsync(ServiceGateway.ImageRightServiceReference.GetDrawersRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawersByParentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawersByParent", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequestBody Body;
        
        public GetDrawersByParentRequest() {
        }
        
        public GetDrawersByParentRequest(ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawersByParentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long parentLocationId;
        
        public GetDrawersByParentRequestBody() {
        }
        
        public GetDrawersByParentRequestBody(string securityToken, long parentLocationId) {
            this.securityToken = securityToken;
            this.parentLocationId = parentLocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawersByParentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawersByParentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponseBody Body;
        
        public GetDrawersByParentResponse() {
        }
        
        public GetDrawersByParentResponse(ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawersByParentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawersByParentResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDrawersByParentResponseBody() {
        }
        
        public GetDrawersByParentResponseBody(ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawersByParentResult, string securityToken) {
            this.GetDrawersByParentResult = GetDrawersByParentResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawerByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawerByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequestBody Body;
        
        public GetDrawerByRefRequest() {
        }
        
        public GetDrawerByRefRequest(ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawerByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DrawerRef drawer;
        
        public GetDrawerByRefRequestBody() {
        }
        
        public GetDrawerByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DrawerRef drawer) {
            this.securityToken = securityToken;
            this.drawer = drawer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawerByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawerByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponseBody Body;
        
        public GetDrawerByRefResponse() {
        }
        
        public GetDrawerByRefResponse(ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawerByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Drawer GetDrawerByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDrawerByRefResponseBody() {
        }
        
        public GetDrawerByRefResponseBody(ServiceGateway.ImageRightServiceReference.Drawer GetDrawerByRefResult, string securityToken) {
            this.GetDrawerByRefResult = GetDrawerByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileMarkDefsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileMarkDefs", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequestBody Body;
        
        public GetFileMarkDefsRequest() {
        }
        
        public GetFileMarkDefsRequest(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileMarkDefsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetFileMarkDefsRequestBody() {
        }
        
        public GetFileMarkDefsRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileMarkDefsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileMarkDefsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponseBody Body;
        
        public GetFileMarkDefsResponse() {
        }
        
        public GetFileMarkDefsResponse(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileMarkDefsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarkDefsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileMarkDefsResponseBody() {
        }
        
        public GetFileMarkDefsResponseBody(ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarkDefsResult, string securityToken) {
            this.GetFileMarkDefsResult = GetFileMarkDefsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarkDefsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarkDefs", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequestBody Body;
        
        public GetPageMarkDefsRequest() {
        }
        
        public GetPageMarkDefsRequest(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarkDefsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetPageMarkDefsRequestBody() {
        }
        
        public GetPageMarkDefsRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarkDefsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarkDefsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponseBody Body;
        
        public GetPageMarkDefsResponse() {
        }
        
        public GetPageMarkDefsResponse(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarkDefsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarkDefsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPageMarkDefsResponseBody() {
        }
        
        public GetPageMarkDefsResponseBody(ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarkDefsResult, string securityToken) {
            this.GetPageMarkDefsResult = GetPageMarkDefsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileTemplateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileTemplate", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileTemplateRequestBody Body;
        
        public GetFileTemplateRequest() {
        }
        
        public GetFileTemplateRequest(ServiceGateway.ImageRightServiceReference.GetFileTemplateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileTemplateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long fileTypeId;
        
        public GetFileTemplateRequestBody() {
        }
        
        public GetFileTemplateRequestBody(string securityToken, long fileTypeId) {
            this.securityToken = securityToken;
            this.fileTypeId = fileTypeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileTemplateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileTemplateResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileTemplateResponseBody Body;
        
        public GetFileTemplateResponse() {
        }
        
        public GetFileTemplateResponse(ServiceGateway.ImageRightServiceReference.GetFileTemplateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileTemplateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.FileTemplate GetFileTemplateResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileTemplateResponseBody() {
        }
        
        public GetFileTemplateResponseBody(ServiceGateway.ImageRightServiceReference.FileTemplate GetFileTemplateResult, string securityToken) {
            this.GetFileTemplateResult = GetFileTemplateResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTypePermissionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTypePermissions", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequestBody Body;
        
        public GetTypePermissionsRequest() {
        }
        
        public GetTypePermissionsRequest(ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTypePermissionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectTypeId;
        
        public GetTypePermissionsRequestBody() {
        }
        
        public GetTypePermissionsRequestBody(string securityToken, long objectTypeId) {
            this.securityToken = securityToken;
            this.objectTypeId = objectTypeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTypePermissionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTypePermissionsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponseBody Body;
        
        public GetTypePermissionsResponse() {
        }
        
        public GetTypePermissionsResponse(ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTypePermissionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetTypePermissionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTypePermissionsResponseBody() {
        }
        
        public GetTypePermissionsResponseBody(ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetTypePermissionsResult, string securityToken) {
            this.GetTypePermissionsResult = GetTypePermissionsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTaskByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTaskByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTaskByRefRequestBody Body;
        
        public GetTaskByRefRequest() {
        }
        
        public GetTaskByRefRequest(ServiceGateway.ImageRightServiceReference.GetTaskByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTaskByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        public GetTaskByRefRequestBody() {
        }
        
        public GetTaskByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTaskByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTaskByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTaskByRefResponseBody Body;
        
        public GetTaskByRefResponse() {
        }
        
        public GetTaskByRefResponse(ServiceGateway.ImageRightServiceReference.GetTaskByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTaskByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Task GetTaskByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTaskByRefResponseBody() {
        }
        
        public GetTaskByRefResponseBody(ServiceGateway.ImageRightServiceReference.Task GetTaskByRefResult, string securityToken) {
            this.GetTaskByRefResult = GetTaskByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksForCurrentUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksForCurrentUser", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequestBody Body;
        
        public GetTasksForCurrentUserRequest() {
        }
        
        public GetTasksForCurrentUserRequest(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksForCurrentUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int limit;
        
        public GetTasksForCurrentUserRequestBody() {
        }
        
        public GetTasksForCurrentUserRequestBody(string securityToken, int limit) {
            this.securityToken = securityToken;
            this.limit = limit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksForCurrentUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksForCurrentUserResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponseBody Body;
        
        public GetTasksForCurrentUserResponse() {
        }
        
        public GetTasksForCurrentUserResponse(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksForCurrentUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksForCurrentUserResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTasksForCurrentUserResponseBody() {
        }
        
        public GetTasksForCurrentUserResponseBody(ServiceGateway.ImageRightServiceReference.Task[] GetTasksForCurrentUserResult, string securityToken) {
            this.GetTasksForCurrentUserResult = GetTasksForCurrentUserResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksEx", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksExRequestBody Body;
        
        public GetTasksExRequest() {
        }
        
        public GetTasksExRequest(ServiceGateway.ImageRightServiceReference.GetTasksExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions;
        
        public GetTasksExRequestBody() {
        }
        
        public GetTasksExRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions) {
            this.securityToken = securityToken;
            this.searchConditions = searchConditions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksExResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksExResponseBody Body;
        
        public GetTasksExResponse() {
        }
        
        public GetTasksExResponse(ServiceGateway.ImageRightServiceReference.GetTasksExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTasksExResponseBody() {
        }
        
        public GetTasksExResponseBody(ServiceGateway.ImageRightServiceReference.Task[] GetTasksExResult, string securityToken) {
            this.GetTasksExResult = GetTasksExResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksForFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksForFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksForFileRequestBody Body;
        
        public GetTasksForFileRequest() {
        }
        
        public GetTasksForFileRequest(ServiceGateway.ImageRightServiceReference.GetTasksForFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksForFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int limit;
        
        public GetTasksForFileRequestBody() {
        }
        
        public GetTasksForFileRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, int limit) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
            this.limit = limit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTasksForFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTasksForFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTasksForFileResponseBody Body;
        
        public GetTasksForFileResponse() {
        }
        
        public GetTasksForFileResponse(ServiceGateway.ImageRightServiceReference.GetTasksForFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTasksForFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksForFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTasksForFileResponseBody() {
        }
        
        public GetTasksForFileResponseBody(ServiceGateway.ImageRightServiceReference.Task[] GetTasksForFileResult, string securityToken) {
            this.GetTasksForFileResult = GetTasksForFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDiaryFlowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDiaryFlow", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequestBody Body;
        
        public GetDiaryFlowRequest() {
        }
        
        public GetDiaryFlowRequest(ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDiaryFlowRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetDiaryFlowRequestBody() {
        }
        
        public GetDiaryFlowRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDiaryFlowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDiaryFlowResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponseBody Body;
        
        public GetDiaryFlowResponse() {
        }
        
        public GetDiaryFlowResponse(ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDiaryFlowResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Workflow GetDiaryFlowResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDiaryFlowResponseBody() {
        }
        
        public GetDiaryFlowResponseBody(ServiceGateway.ImageRightServiceReference.Workflow GetDiaryFlowResult, string securityToken) {
            this.GetDiaryFlowResult = GetDiaryFlowResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFlowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFlows", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFlowsRequestBody Body;
        
        public GetFlowsRequest() {
        }
        
        public GetFlowsRequest(ServiceGateway.ImageRightServiceReference.GetFlowsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFlowsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FlowRequestFilter requestFilter;
        
        public GetFlowsRequestBody() {
        }
        
        public GetFlowsRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FlowRequestFilter requestFilter) {
            this.securityToken = securityToken;
            this.requestFilter = requestFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFlowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFlowsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFlowsResponseBody Body;
        
        public GetFlowsResponse() {
        }
        
        public GetFlowsResponse(ServiceGateway.ImageRightServiceReference.GetFlowsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFlowsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Workflow[] GetFlowsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFlowsResponseBody() {
        }
        
        public GetFlowsResponseBody(ServiceGateway.ImageRightServiceReference.Workflow[] GetFlowsResult, string securityToken) {
            this.GetFlowsResult = GetFlowsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFlowByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFlowByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFlowByRefRequestBody Body;
        
        public GetFlowByRefRequest() {
        }
        
        public GetFlowByRefRequest(ServiceGateway.ImageRightServiceReference.GetFlowByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFlowByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef;
        
        public GetFlowByRefRequestBody() {
        }
        
        public GetFlowByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef) {
            this.securityToken = securityToken;
            this.flowRef = flowRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFlowByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFlowByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFlowByRefResponseBody Body;
        
        public GetFlowByRefResponse() {
        }
        
        public GetFlowByRefResponse(ServiceGateway.ImageRightServiceReference.GetFlowByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFlowByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Workflow GetFlowByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFlowByRefResponseBody() {
        }
        
        public GetFlowByRefResponseBody(ServiceGateway.ImageRightServiceReference.Workflow GetFlowByRefResult, string securityToken) {
            this.GetFlowByRefResult = GetFlowByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStepByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepByRefRequestBody Body;
        
        public GetStepByRefRequest() {
        }
        
        public GetStepByRefRequest(ServiceGateway.ImageRightServiceReference.GetStepByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag;
        
        public GetStepByRefRequestBody() {
        }
        
        public GetStepByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            this.securityToken = securityToken;
            this.stepRef = stepRef;
            this.requestFlag = requestFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStepByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepByRefResponseBody Body;
        
        public GetStepByRefResponse() {
        }
        
        public GetStepByRefResponse(ServiceGateway.ImageRightServiceReference.GetStepByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Step GetStepByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetStepByRefResponseBody() {
        }
        
        public GetStepByRefResponseBody(ServiceGateway.ImageRightServiceReference.Step GetStepByRefResult, string securityToken) {
            this.GetStepByRefResult = GetStepByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSteps", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepsRequestBody Body;
        
        public GetStepsRequest() {
        }
        
        public GetStepsRequest(ServiceGateway.ImageRightServiceReference.GetStepsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag;
        
        public GetStepsRequestBody() {
        }
        
        public GetStepsRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            this.securityToken = securityToken;
            this.flowRef = flowRef;
            this.requestFlag = requestFlag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStepsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepsResponseBody Body;
        
        public GetStepsResponse() {
        }
        
        public GetStepsResponse(ServiceGateway.ImageRightServiceReference.GetStepsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Step[] GetStepsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetStepsResponseBody() {
        }
        
        public GetStepsResponseBody(ServiceGateway.ImageRightServiceReference.Step[] GetStepsResult, string securityToken) {
            this.GetStepsResult = GetStepsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAuthorizedUsersForStepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAuthorizedUsersForStep", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequestBody Body;
        
        public GetAuthorizedUsersForStepRequest() {
        }
        
        public GetAuthorizedUsersForStepRequest(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAuthorizedUsersForStepRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepPermission stepPermission;
        
        public GetAuthorizedUsersForStepRequestBody() {
        }
        
        public GetAuthorizedUsersForStepRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepPermission stepPermission) {
            this.securityToken = securityToken;
            this.stepRef = stepRef;
            this.stepPermission = stepPermission;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAuthorizedUsersForStepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAuthorizedUsersForStepResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponseBody Body;
        
        public GetAuthorizedUsersForStepResponse() {
        }
        
        public GetAuthorizedUsersForStepResponse(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAuthorizedUsersForStepResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[] GetAuthorizedUsersForStepResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAuthorizedUsersForStepResponseBody() {
        }
        
        public GetAuthorizedUsersForStepResponseBody(ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[] GetAuthorizedUsersForStepResult, string securityToken) {
            this.GetAuthorizedUsersForStepResult = GetAuthorizedUsersForStepResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepAttributesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStepAttributes", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepAttributesRequestBody Body;
        
        public GetStepAttributesRequest() {
        }
        
        public GetStepAttributesRequest(ServiceGateway.ImageRightServiceReference.GetStepAttributesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepAttributesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        public GetStepAttributesRequestBody() {
        }
        
        public GetStepAttributesRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            this.securityToken = securityToken;
            this.stepRef = stepRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStepAttributesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStepAttributesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetStepAttributesResponseBody Body;
        
        public GetStepAttributesResponse() {
        }
        
        public GetStepAttributesResponse(ServiceGateway.ImageRightServiceReference.GetStepAttributesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetStepAttributesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.StepAttributeRule[] GetStepAttributesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetStepAttributesResponseBody() {
        }
        
        public GetStepAttributesResponseBody(ServiceGateway.ImageRightServiceReference.StepAttributeRule[] GetStepAttributesResult, string securityToken) {
            this.GetStepAttributesResult = GetStepAttributesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLinksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLinks", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLinksRequestBody Body;
        
        public GetLinksRequest() {
        }
        
        public GetLinksRequest(ServiceGateway.ImageRightServiceReference.GetLinksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLinksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        public GetLinksRequestBody() {
        }
        
        public GetLinksRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            this.securityToken = securityToken;
            this.stepRef = stepRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLinksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLinksResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLinksResponseBody Body;
        
        public GetLinksResponse() {
        }
        
        public GetLinksResponse(ServiceGateway.ImageRightServiceReference.GetLinksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLinksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Link[] GetLinksResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetLinksResponseBody() {
        }
        
        public GetLinksResponseBody(ServiceGateway.ImageRightServiceReference.Link[] GetLinksResult, string securityToken) {
            this.GetLinksResult = GetLinksResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateTaskRequestBody Body;
        
        public CreateTaskRequest() {
        }
        
        public CreateTaskRequest(ServiceGateway.ImageRightServiceReference.CreateTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.TaskCreateData createData;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributes;
        
        public CreateTaskRequestBody() {
        }
        
        public CreateTaskRequestBody(string securityToken, long objId, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.TaskCreateData createData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            this.securityToken = securityToken;
            this.objId = objId;
            this.stepRef = stepRef;
            this.createData = createData;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateTaskResponseBody Body;
        
        public CreateTaskResponse() {
        }
        
        public CreateTaskResponse(ServiceGateway.ImageRightServiceReference.CreateTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TaskRef CreateTaskResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateTaskResponseBody() {
        }
        
        public CreateTaskResponseBody(ServiceGateway.ImageRightServiceReference.TaskRef CreateTaskResult, string securityToken) {
            this.CreateTaskResult = CreateTaskResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LockTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.LockTaskRequestBody Body;
        
        public LockTaskRequest() {
        }
        
        public LockTaskRequest(ServiceGateway.ImageRightServiceReference.LockTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class LockTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        public LockTaskRequestBody() {
        }
        
        public LockTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LockTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.LockTaskResponseBody Body;
        
        public LockTaskResponse() {
        }
        
        public LockTaskResponse(ServiceGateway.ImageRightServiceReference.LockTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class LockTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public LockTaskResponseBody() {
        }
        
        public LockTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockTaskRequestBody Body;
        
        public UnlockTaskRequest() {
        }
        
        public UnlockTaskRequest(ServiceGateway.ImageRightServiceReference.UnlockTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        public UnlockTaskRequestBody() {
        }
        
        public UnlockTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockTaskResponseBody Body;
        
        public UnlockTaskResponse() {
        }
        
        public UnlockTaskResponse(ServiceGateway.ImageRightServiceReference.UnlockTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UnlockTaskResponseBody() {
        }
        
        public UnlockTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateTaskRequestBody Body;
        
        public UpdateTaskRequest() {
        }
        
        public UpdateTaskRequest(ServiceGateway.ImageRightServiceReference.UpdateTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.TaskParameters parameters;
        
        public UpdateTaskRequestBody() {
        }
        
        public UpdateTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.TaskParameters parameters) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.parameters = parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateTaskResponseBody Body;
        
        public UpdateTaskResponse() {
        }
        
        public UpdateTaskResponse(ServiceGateway.ImageRightServiceReference.UpdateTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdateTaskResponseBody() {
        }
        
        public UpdateTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MoveTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MoveTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.MoveTaskRequestBody Body;
        
        public MoveTaskRequest() {
        }
        
        public MoveTaskRequest(ServiceGateway.ImageRightServiceReference.MoveTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class MoveTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long targetId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool isPage;
        
        public MoveTaskRequestBody() {
        }
        
        public MoveTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, long targetId, bool isPage) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.targetId = targetId;
            this.isPage = isPage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MoveTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MoveTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.MoveTaskResponseBody Body;
        
        public MoveTaskResponse() {
        }
        
        public MoveTaskResponse(ServiceGateway.ImageRightServiceReference.MoveTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class MoveTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public MoveTaskResponseBody() {
        }
        
        public MoveTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.KillTaskRequestBody Body;
        
        public KillTaskRequest() {
        }
        
        public KillTaskRequest(ServiceGateway.ImageRightServiceReference.KillTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class KillTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        public KillTaskRequestBody() {
        }
        
        public KillTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.KillTaskResponseBody Body;
        
        public KillTaskResponse() {
        }
        
        public KillTaskResponse(ServiceGateway.ImageRightServiceReference.KillTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class KillTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public KillTaskResponseBody() {
        }
        
        public KillTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillTasks", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.KillTasksRequestBody Body;
        
        public KillTasksRequest() {
        }
        
        public KillTasksRequest(ServiceGateway.ImageRightServiceReference.KillTasksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class KillTasksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef[] taskRefs;
        
        public KillTasksRequestBody() {
        }
        
        public KillTasksRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef[] taskRefs) {
            this.securityToken = securityToken;
            this.taskRefs = taskRefs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="KillTasksResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.KillTasksResponseBody Body;
        
        public KillTasksResponse() {
        }
        
        public KillTasksResponse(ServiceGateway.ImageRightServiceReference.KillTasksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class KillTasksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public KillTasksResponseBody() {
        }
        
        public KillTasksResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RouteTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RouteTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RouteTaskRequestBody Body;
        
        public RouteTaskRequest() {
        }
        
        public RouteTaskRequest(ServiceGateway.ImageRightServiceReference.RouteTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RouteTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime newAvailableDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.SecurityID userId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool commit;
        
        public RouteTaskRequestBody() {
        }
        
        public RouteTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, System.DateTime newAvailableDate, ServiceGateway.ImageRightServiceReference.SecurityID userId, bool commit) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.stepRef = stepRef;
            this.newAvailableDate = newAvailableDate;
            this.userId = userId;
            this.commit = commit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RouteTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RouteTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RouteTaskResponseBody Body;
        
        public RouteTaskResponse() {
        }
        
        public RouteTaskResponse(ServiceGateway.ImageRightServiceReference.RouteTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RouteTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public RouteTaskResponseBody() {
        }
        
        public RouteTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTaskToStepRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTaskToStep", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequestBody Body;
        
        public ReleaseTaskToStepRequest() {
        }
        
        public ReleaseTaskToStepRequest(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseTaskToStepRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.StepRef stepRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool commit;
        
        public ReleaseTaskToStepRequestBody() {
        }
        
        public ReleaseTaskToStepRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, bool commit) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.stepRef = stepRef;
            this.commit = commit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTaskToStepResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTaskToStepResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponseBody Body;
        
        public ReleaseTaskToStepResponse() {
        }
        
        public ReleaseTaskToStepResponse(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseTaskToStepResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public ReleaseTaskToStepResponseBody() {
        }
        
        public ReleaseTaskToStepResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseTaskRequestBody Body;
        
        public ReleaseTaskRequest() {
        }
        
        public ReleaseTaskRequest(ServiceGateway.ImageRightServiceReference.ReleaseTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool commit;
        
        public ReleaseTaskRequestBody() {
        }
        
        public ReleaseTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, bool commit) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.commit = commit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseTaskResponseBody Body;
        
        public ReleaseTaskResponse() {
        }
        
        public ReleaseTaskResponse(ServiceGateway.ImageRightServiceReference.ReleaseTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public ReleaseTaskResponseBody() {
        }
        
        public ReleaseTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseSplitTaskRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseSplitTask", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequestBody Body;
        
        public ReleaseSplitTaskRequest() {
        }
        
        public ReleaseSplitTaskRequest(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseSplitTaskRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.SplitLinkParameter[] splitParams;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool commit;
        
        public ReleaseSplitTaskRequestBody() {
        }
        
        public ReleaseSplitTaskRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.SplitLinkParameter[] splitParams, bool commit) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.splitParams = splitParams;
            this.commit = commit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReleaseSplitTaskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReleaseSplitTaskResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponseBody Body;
        
        public ReleaseSplitTaskResponse() {
        }
        
        public ReleaseSplitTaskResponse(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ReleaseSplitTaskResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public ReleaseSplitTaskResponseBody() {
        }
        
        public ReleaseSplitTaskResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTaskAttributeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTaskAttribute", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequestBody Body;
        
        public SetTaskAttributeRequest() {
        }
        
        public SetTaskAttributeRequest(ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class SetTaskAttributeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public object attribute;
        
        public SetTaskAttributeRequestBody() {
        }
        
        public SetTaskAttributeRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef, object attribute) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
            this.attributeRef = attributeRef;
            this.attribute = attribute;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTaskAttributeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTaskAttributeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponseBody Body;
        
        public SetTaskAttributeResponse() {
        }
        
        public SetTaskAttributeResponse(ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class SetTaskAttributeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public SetTaskAttributeResponseBody() {
        }
        
        public SetTaskAttributeResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSubTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSubTasks", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSubTasksRequestBody Body;
        
        public GetSubTasksRequest() {
        }
        
        public GetSubTasksRequest(ServiceGateway.ImageRightServiceReference.GetSubTasksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSubTasksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.TaskRef taskRef;
        
        public GetSubTasksRequestBody() {
        }
        
        public GetSubTasksRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            this.securityToken = securityToken;
            this.taskRef = taskRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSubTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSubTasksResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSubTasksResponseBody Body;
        
        public GetSubTasksResponse() {
        }
        
        public GetSubTasksResponse(ServiceGateway.ImageRightServiceReference.GetSubTasksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSubTasksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TaskRef[] GetSubTasksResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetSubTasksResponseBody() {
        }
        
        public GetSubTasksResponseBody(ServiceGateway.ImageRightServiceReference.TaskRef[] GetSubTasksResult, string securityToken) {
            this.GetSubTasksResult = GetSubTasksResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPages3xRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPages3x", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPages3xRequestBody Body;
        
        public GetPages3xRequest() {
        }
        
        public GetPages3xRequest(ServiceGateway.ImageRightServiceReference.GetPages3xRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPages3xRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string drawer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string filenumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int docid;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pagenumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string tempdin;
        
        public GetPages3xRequestBody() {
        }
        
        public GetPages3xRequestBody(string securityToken, string drawer, string filenumber, int docid, int pagenumber, string tempdin) {
            this.securityToken = securityToken;
            this.drawer = drawer;
            this.filenumber = filenumber;
            this.docid = docid;
            this.pagenumber = pagenumber;
            this.tempdin = tempdin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPages3xResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPages3xResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPages3xResponseBody Body;
        
        public GetPages3xResponse() {
        }
        
        public GetPages3xResponse(ServiceGateway.ImageRightServiceReference.GetPages3xResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPages3xResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page3x[] GetPages3xResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPages3xResponseBody() {
        }
        
        public GetPages3xResponseBody(ServiceGateway.ImageRightServiceReference.Page3x[] GetPages3xResult, string securityToken) {
            this.GetPages3xResult = GetPages3xResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsLegacyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocumentsLegacy", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequestBody Body;
        
        public FindDocumentsLegacyRequest() {
        }
        
        public FindDocumentsLegacyRequest(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsLegacyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool includeDeleted;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includePageData;
        
        public FindDocumentsLegacyRequestBody() {
        }
        
        public FindDocumentsLegacyRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            this.securityToken = securityToken;
            this.searchConditions = searchConditions;
            this.includeDeleted = includeDeleted;
            this.includePageData = includePageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsLegacyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocumentsLegacyResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponseBody Body;
        
        public FindDocumentsLegacyResponse() {
        }
        
        public FindDocumentsLegacyResponse(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsLegacyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page3x[] FindDocumentsLegacyResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindDocumentsLegacyResponseBody() {
        }
        
        public FindDocumentsLegacyResponseBody(ServiceGateway.ImageRightServiceReference.Page3x[] FindDocumentsLegacyResult, string securityToken) {
            this.FindDocumentsLegacyResult = FindDocumentsLegacyResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMappingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMapping", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMappingRequestBody Body;
        
        public GetMappingRequest() {
        }
        
        public GetMappingRequest(ServiceGateway.ImageRightServiceReference.GetMappingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMappingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public object val;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public object val2;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ServiceGateway.ImageRightServiceReference.MappingLookup lookupType;
        
        public GetMappingRequestBody() {
        }
        
        public GetMappingRequestBody(string securityToken, object val, object val2, ServiceGateway.ImageRightServiceReference.MappingLookup lookupType) {
            this.securityToken = securityToken;
            this.val = val;
            this.val2 = val2;
            this.lookupType = lookupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMappingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMappingResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMappingResponseBody Body;
        
        public GetMappingResponse() {
        }
        
        public GetMappingResponse(ServiceGateway.ImageRightServiceReference.GetMappingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMappingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public object GetMappingResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetMappingResponseBody() {
        }
        
        public GetMappingResponseBody(object GetMappingResult, string securityToken) {
            this.GetMappingResult = GetMappingResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AvailableConnectionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AvailableConnections", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequestBody Body;
        
        public AvailableConnectionsRequest() {
        }
        
        public AvailableConnectionsRequest(ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AvailableConnectionsRequestBody {
        
        public AvailableConnectionsRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AvailableConnectionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AvailableConnectionsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponseBody Body;
        
        public AvailableConnectionsResponse() {
        }
        
        public AvailableConnectionsResponse(ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AvailableConnectionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ArrayOfString AvailableConnectionsResult;
        
        public AvailableConnectionsResponseBody() {
        }
        
        public AvailableConnectionsResponseBody(ServiceGateway.ImageRightServiceReference.ArrayOfString AvailableConnectionsResult) {
            this.AvailableConnectionsResult = AvailableConnectionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSecurityIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSecurityId", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSecurityIdRequestBody Body;
        
        public GetSecurityIdRequest() {
        }
        
        public GetSecurityIdRequest(ServiceGateway.ImageRightServiceReference.GetSecurityIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSecurityIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetSecurityIdRequestBody() {
        }
        
        public GetSecurityIdRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSecurityIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSecurityIdResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSecurityIdResponseBody Body;
        
        public GetSecurityIdResponse() {
        }
        
        public GetSecurityIdResponse(ServiceGateway.ImageRightServiceReference.GetSecurityIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSecurityIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.SecurityID GetSecurityIdResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetSecurityIdResponseBody() {
        }
        
        public GetSecurityIdResponseBody(ServiceGateway.ImageRightServiceReference.SecurityID GetSecurityIdResult, string securityToken) {
            this.GetSecurityIdResult = GetSecurityIdResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CurrentUser", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CurrentUserRequestBody Body;
        
        public CurrentUserRequest() {
        }
        
        public CurrentUserRequest(ServiceGateway.ImageRightServiceReference.CurrentUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CurrentUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public CurrentUserRequestBody() {
        }
        
        public CurrentUserRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CurrentUserResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CurrentUserResponseBody Body;
        
        public CurrentUserResponse() {
        }
        
        public CurrentUserResponse(ServiceGateway.ImageRightServiceReference.CurrentUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CurrentUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.User CurrentUserResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CurrentUserResponseBody() {
        }
        
        public CurrentUserResponseBody(ServiceGateway.ImageRightServiceReference.User CurrentUserResult, string securityToken) {
            this.CurrentUserResult = CurrentUserResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UserLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UserLogin", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UserLoginRequestBody Body;
        
        public UserLoginRequest() {
        }
        
        public UserLoginRequest(ServiceGateway.ImageRightServiceReference.UserLoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UserLoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string connName;
        
        public UserLoginRequestBody() {
        }
        
        public UserLoginRequestBody(string username, string password, string connName) {
            this.username = username;
            this.password = password;
            this.connName = connName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UserLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UserLoginResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UserLoginResponseBody Body;
        
        public UserLoginResponse() {
        }
        
        public UserLoginResponse(ServiceGateway.ImageRightServiceReference.UserLoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UserLoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UserLoginResult;
        
        public UserLoginResponseBody() {
        }
        
        public UserLoginResponseBody(string UserLoginResult) {
            this.UserLoginResult = UserLoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeUserPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeUserPassword", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequestBody Body;
        
        public ChangeUserPasswordRequest() {
        }
        
        public ChangeUserPasswordRequest(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ChangeUserPasswordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string newPassword;
        
        public ChangeUserPasswordRequestBody() {
        }
        
        public ChangeUserPasswordRequestBody(string securityToken, string newPassword) {
            this.securityToken = securityToken;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeUserPasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangeUserPasswordResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponseBody Body;
        
        public ChangeUserPasswordResponse() {
        }
        
        public ChangeUserPasswordResponse(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class ChangeUserPasswordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public ChangeUserPasswordResponseBody() {
        }
        
        public ChangeUserPasswordResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UserLogoffRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UserLogoff", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UserLogoffRequestBody Body;
        
        public UserLogoffRequest() {
        }
        
        public UserLogoffRequest(ServiceGateway.ImageRightServiceReference.UserLogoffRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UserLogoffRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UserLogoffRequestBody() {
        }
        
        public UserLogoffRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UserLogoffResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UserLogoffResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UserLogoffResponseBody Body;
        
        public UserLogoffResponse() {
        }
        
        public UserLogoffResponse(ServiceGateway.ImageRightServiceReference.UserLogoffResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UserLogoffResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UserLogoffResult;
        
        public UserLogoffResponseBody() {
        }
        
        public UserLogoffResponseBody(bool UserLogoffResult) {
            this.UserLogoffResult = UserLogoffResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockAllTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockAllTasks", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequestBody Body;
        
        public UnlockAllTasksRequest() {
        }
        
        public UnlockAllTasksRequest(ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockAllTasksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UnlockAllTasksRequestBody() {
        }
        
        public UnlockAllTasksRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockAllTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockAllTasksResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponseBody Body;
        
        public UnlockAllTasksResponse() {
        }
        
        public UnlockAllTasksResponse(ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockAllTasksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UnlockAllTasksResponseBody() {
        }
        
        public UnlockAllTasksResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSecurityAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSecurityAccount", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequestBody Body;
        
        public GetSecurityAccountRequest() {
        }
        
        public GetSecurityAccountRequest(ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSecurityAccountRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SecurityID securityId;
        
        public GetSecurityAccountRequestBody() {
        }
        
        public GetSecurityAccountRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID securityId) {
            this.securityToken = securityToken;
            this.securityId = securityId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSecurityAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSecurityAccountResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponseBody Body;
        
        public GetSecurityAccountResponse() {
        }
        
        public GetSecurityAccountResponse(ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetSecurityAccountResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.SecurityAccount GetSecurityAccountResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetSecurityAccountResponseBody() {
        }
        
        public GetSecurityAccountResponseBody(ServiceGateway.ImageRightServiceReference.SecurityAccount GetSecurityAccountResult, string securityToken) {
            this.GetSecurityAccountResult = GetSecurityAccountResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VersionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Version", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.VersionRequestBody Body;
        
        public VersionRequest() {
        }
        
        public VersionRequest(ServiceGateway.ImageRightServiceReference.VersionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class VersionRequestBody {
        
        public VersionRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VersionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="VersionResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.VersionResponseBody Body;
        
        public VersionResponse() {
        }
        
        public VersionResponse(ServiceGateway.ImageRightServiceReference.VersionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class VersionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.WSVersionInfo VersionResult;
        
        public VersionResponseBody() {
        }
        
        public VersionResponseBody(ServiceGateway.ImageRightServiceReference.WSVersionInfo VersionResult) {
            this.VersionResult = VersionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUser", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetUserRequestBody Body;
        
        public GetUserRequest() {
        }
        
        public GetUserRequest(ServiceGateway.ImageRightServiceReference.GetUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SecurityID id;
        
        public GetUserRequestBody() {
        }
        
        public GetUserRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID id) {
            this.securityToken = securityToken;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetUserResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetUserResponseBody Body;
        
        public GetUserResponse() {
        }
        
        public GetUserResponse(ServiceGateway.ImageRightServiceReference.GetUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.User GetUserResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetUserResponseBody() {
        }
        
        public GetUserResponseBody(ServiceGateway.ImageRightServiceReference.User GetUserResult, string securityToken) {
            this.GetUserResult = GetUserResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsLoggedInRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsLoggedIn", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.IsLoggedInRequestBody Body;
        
        public IsLoggedInRequest() {
        }
        
        public IsLoggedInRequest(ServiceGateway.ImageRightServiceReference.IsLoggedInRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class IsLoggedInRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public IsLoggedInRequestBody() {
        }
        
        public IsLoggedInRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsLoggedInResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsLoggedInResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.IsLoggedInResponseBody Body;
        
        public IsLoggedInResponse() {
        }
        
        public IsLoggedInResponse(ServiceGateway.ImageRightServiceReference.IsLoggedInResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class IsLoggedInResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsLoggedInResult;
        
        public IsLoggedInResponseBody() {
        }
        
        public IsLoggedInResponseBody(bool IsLoggedInResult) {
            this.IsLoggedInResult = IsLoggedInResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindUserByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindUserByName", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindUserByNameRequestBody Body;
        
        public FindUserByNameRequest() {
        }
        
        public FindUserByNameRequest(ServiceGateway.ImageRightServiceReference.FindUserByNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindUserByNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string username;
        
        public FindUserByNameRequestBody() {
        }
        
        public FindUserByNameRequestBody(string securityToken, string username) {
            this.securityToken = securityToken;
            this.username = username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindUserByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindUserByNameResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindUserByNameResponseBody Body;
        
        public FindUserByNameResponse() {
        }
        
        public FindUserByNameResponse(ServiceGateway.ImageRightServiceReference.FindUserByNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindUserByNameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.User FindUserByNameResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindUserByNameResponseBody() {
        }
        
        public FindUserByNameResponseBody(ServiceGateway.ImageRightServiceReference.User FindUserByNameResult, string securityToken) {
            this.FindUserByNameResult = FindUserByNameResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFolderByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFolderByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFolderByRefRequestBody Body;
        
        public GetFolderByRefRequest() {
        }
        
        public GetFolderByRefRequest(ServiceGateway.ImageRightServiceReference.GetFolderByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFolderByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FolderRef folderRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includeDeleted;
        
        public GetFolderByRefRequestBody() {
        }
        
        public GetFolderByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FolderRef folderRef, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.folderRef = folderRef;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFolderByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFolderByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFolderByRefResponseBody Body;
        
        public GetFolderByRefResponse() {
        }
        
        public GetFolderByRefResponse(ServiceGateway.ImageRightServiceReference.GetFolderByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFolderByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Folder GetFolderByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFolderByRefResponseBody() {
        }
        
        public GetFolderByRefResponseBody(ServiceGateway.ImageRightServiceReference.Folder GetFolderByRefResult, string securityToken) {
            this.GetFolderByRefResult = GetFolderByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequestBody Body;
        
        public GetDocumentByRefRequest() {
        }
        
        public GetDocumentByRefRequest(ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDocumentByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef docRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includeDeleted;
        
        public GetDocumentByRefRequestBody() {
        }
        
        public GetDocumentByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef docRef, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.docRef = docRef;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponseBody Body;
        
        public GetDocumentByRefResponse() {
        }
        
        public GetDocumentByRefResponse(ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDocumentByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Document GetDocumentByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDocumentByRefResponseBody() {
        }
        
        public GetDocumentByRefResponseBody(ServiceGateway.ImageRightServiceReference.Document GetDocumentByRefResult, string securityToken) {
            this.GetDocumentByRefResult = GetDocumentByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileByRefRequestBody Body;
        
        public GetFileByRefRequest() {
        }
        
        public GetFileByRefRequest(ServiceGateway.ImageRightServiceReference.GetFileByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includeDeleted;
        
        public GetFileByRefRequestBody() {
        }
        
        public GetFileByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileByRefResponseBody Body;
        
        public GetFileByRefResponse() {
        }
        
        public GetFileByRefResponse(ServiceGateway.ImageRightServiceReference.GetFileByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.File GetFileByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileByRefResponseBody() {
        }
        
        public GetFileByRefResponseBody(ServiceGateway.ImageRightServiceReference.File GetFileByRefResult, string securityToken) {
            this.GetFileByRefResult = GetFileByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileRequestBody Body;
        
        public GetFileRequest() {
        }
        
        public GetFileRequest(ServiceGateway.ImageRightServiceReference.GetFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string drawerPath;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fileNumber1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileNumber2;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string fileNumber3;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fileType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool includeDeleted;
        
        public GetFileRequestBody() {
        }
        
        public GetFileRequestBody(string securityToken, string drawerPath, string fileNumber1, string fileNumber2, string fileNumber3, string fileType, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.drawerPath = drawerPath;
            this.fileNumber1 = fileNumber1;
            this.fileNumber2 = fileNumber2;
            this.fileNumber3 = fileNumber3;
            this.fileType = fileType;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileResponseBody Body;
        
        public GetFileResponse() {
        }
        
        public GetFileResponse(ServiceGateway.ImageRightServiceReference.GetFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.File GetFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileResponseBody() {
        }
        
        public GetFileResponseBody(ServiceGateway.ImageRightServiceReference.File GetFileResult, string securityToken) {
            this.GetFileResult = GetFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetContentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetContent", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetContentRequestBody Body;
        
        public GetContentRequest() {
        }
        
        public GetContentRequest(ServiceGateway.ImageRightServiceReference.GetContentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetContentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool includeDeleted;
        
        public GetContentRequestBody() {
        }
        
        public GetContentRequestBody(string securityToken, long objectId, bool includeDeleted) {
            this.securityToken = securityToken;
            this.objectId = objectId;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetContentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetContentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetContentResponseBody Body;
        
        public GetContentResponse() {
        }
        
        public GetContentResponse(ServiceGateway.ImageRightServiceReference.GetContentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetContentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetContentResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetContentResponseBody() {
        }
        
        public GetContentResponseBody(ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetContentResult, string securityToken) {
            this.GetContentResult = GetContentResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetObject", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetObjectRequestBody Body;
        
        public GetObjectRequest() {
        }
        
        public GetObjectRequest(ServiceGateway.ImageRightServiceReference.GetObjectRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetObjectRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        public GetObjectRequestBody() {
        }
        
        public GetObjectRequestBody(string securityToken, long objectId) {
            this.securityToken = securityToken;
            this.objectId = objectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetObjectResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetObjectResponseBody Body;
        
        public GetObjectResponse() {
        }
        
        public GetObjectResponse(ServiceGateway.ImageRightServiceReference.GetObjectResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetObjectResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData GetObjectResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetObjectResponseBody() {
        }
        
        public GetObjectResponseBody(ServiceGateway.ImageRightServiceReference.TypedObjectData GetObjectResult, string securityToken) {
            this.GetObjectResult = GetObjectResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetParentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetParent", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetParentRequestBody Body;
        
        public GetParentRequest() {
        }
        
        public GetParentRequest(ServiceGateway.ImageRightServiceReference.GetParentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetParentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        public GetParentRequestBody() {
        }
        
        public GetParentRequestBody(string securityToken, long objectId) {
            this.securityToken = securityToken;
            this.objectId = objectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetParentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetParentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetParentResponseBody Body;
        
        public GetParentResponse() {
        }
        
        public GetParentResponse(ServiceGateway.ImageRightServiceReference.GetParentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetParentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData GetParentResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetParentResponseBody() {
        }
        
        public GetParentResponseBody(ServiceGateway.ImageRightServiceReference.TypedObjectData GetParentResult, string securityToken) {
            this.GetParentResult = GetParentResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributes", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributesRequestBody Body;
        
        public GetAttributesRequest() {
        }
        
        public GetAttributesRequest(ServiceGateway.ImageRightServiceReference.GetAttributesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        public GetAttributesRequestBody() {
        }
        
        public GetAttributesRequestBody(string securityToken, long objectId) {
            this.securityToken = securityToken;
            this.objectId = objectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributesResponseBody Body;
        
        public GetAttributesResponse() {
        }
        
        public GetAttributesResponse(ServiceGateway.ImageRightServiceReference.GetAttributesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] GetAttributesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributesResponseBody() {
        }
        
        public GetAttributesResponseBody(ServiceGateway.ImageRightServiceReference.AttributeData[] GetAttributesResult, string securityToken) {
            this.GetAttributesResult = GetAttributesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttribute", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeRequestBody Body;
        
        public GetAttributeRequest() {
        }
        
        public GetAttributeRequest(ServiceGateway.ImageRightServiceReference.GetAttributeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long attributeId;
        
        public GetAttributeRequestBody() {
        }
        
        public GetAttributeRequestBody(string securityToken, long objectId, long attributeId) {
            this.securityToken = securityToken;
            this.objectId = objectId;
            this.attributeId = attributeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeResponseBody Body;
        
        public GetAttributeResponse() {
        }
        
        public GetAttributeResponse(ServiceGateway.ImageRightServiceReference.GetAttributeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeData GetAttributeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributeResponseBody() {
        }
        
        public GetAttributeResponseBody(ServiceGateway.ImageRightServiceReference.AttributeData GetAttributeResult, string securityToken) {
            this.GetAttributeResult = GetAttributeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeByName", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequestBody Body;
        
        public GetAttributeByNameRequest() {
        }
        
        public GetAttributeByNameRequest(ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeByNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string attributeName;
        
        public GetAttributeByNameRequestBody() {
        }
        
        public GetAttributeByNameRequestBody(string securityToken, long objectId, string attributeName) {
            this.securityToken = securityToken;
            this.objectId = objectId;
            this.attributeName = attributeName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeByNameResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponseBody Body;
        
        public GetAttributeByNameResponse() {
        }
        
        public GetAttributeByNameResponse(ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeByNameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeData GetAttributeByNameResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributeByNameResponseBody() {
        }
        
        public GetAttributeByNameResponseBody(ServiceGateway.ImageRightServiceReference.AttributeData GetAttributeByNameResult, string securityToken) {
            this.GetAttributeByNameResult = GetAttributeByNameResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocuments", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsRequestBody Body;
        
        public FindDocumentsRequest() {
        }
        
        public FindDocumentsRequest(ServiceGateway.ImageRightServiceReference.FindDocumentsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long locationId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string fileNumber2;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fileNumber3;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool includeDeleted;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool includePageData;
        
        public FindDocumentsRequestBody() {
        }
        
        public FindDocumentsRequestBody(string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool includeDeleted, bool includePageData) {
            this.securityToken = securityToken;
            this.locationId = locationId;
            this.fileTypeRef = fileTypeRef;
            this.fileNumber = fileNumber;
            this.fileNumber2 = fileNumber2;
            this.fileNumber3 = fileNumber3;
            this.fileName = fileName;
            this.includeDeleted = includeDeleted;
            this.includePageData = includePageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocumentsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsResponseBody Body;
        
        public FindDocumentsResponse() {
        }
        
        public FindDocumentsResponse(ServiceGateway.ImageRightServiceReference.FindDocumentsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Document[] FindDocumentsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindDocumentsResponseBody() {
        }
        
        public FindDocumentsResponseBody(ServiceGateway.ImageRightServiceReference.Document[] FindDocumentsResult, string securityToken) {
            this.FindDocumentsResult = FindDocumentsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocumentsEx", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsExRequestBody Body;
        
        public FindDocumentsExRequest() {
        }
        
        public FindDocumentsExRequest(ServiceGateway.ImageRightServiceReference.FindDocumentsExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool includeDeleted;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includePageData;
        
        public FindDocumentsExRequestBody() {
        }
        
        public FindDocumentsExRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            this.securityToken = securityToken;
            this.searchConditions = searchConditions;
            this.includeDeleted = includeDeleted;
            this.includePageData = includePageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDocumentsExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDocumentsExResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindDocumentsExResponseBody Body;
        
        public FindDocumentsExResponse() {
        }
        
        public FindDocumentsExResponse(ServiceGateway.ImageRightServiceReference.FindDocumentsExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindDocumentsExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Document[] FindDocumentsExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindDocumentsExResponseBody() {
        }
        
        public FindDocumentsExResponseBody(ServiceGateway.ImageRightServiceReference.Document[] FindDocumentsExResult, string securityToken) {
            this.FindDocumentsExResult = FindDocumentsExResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindFiles", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindFilesRequestBody Body;
        
        public FindFilesRequest() {
        }
        
        public FindFilesRequest(ServiceGateway.ImageRightServiceReference.FindFilesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindFilesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long locationId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string fileNumber2;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string fileNumber3;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool includeDeleted;
        
        public FindFilesRequestBody() {
        }
        
        public FindFilesRequestBody(string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.locationId = locationId;
            this.fileTypeRef = fileTypeRef;
            this.fileNumber = fileNumber;
            this.fileNumber2 = fileNumber2;
            this.fileNumber3 = fileNumber3;
            this.fileName = fileName;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindFilesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindFilesResponseBody Body;
        
        public FindFilesResponse() {
        }
        
        public FindFilesResponse(ServiceGateway.ImageRightServiceReference.FindFilesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindFilesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.File[] FindFilesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindFilesResponseBody() {
        }
        
        public FindFilesResponseBody(ServiceGateway.ImageRightServiceReference.File[] FindFilesResult, string securityToken) {
            this.FindFilesResult = FindFilesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindFilesExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindFilesEx", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindFilesExRequestBody Body;
        
        public FindFilesExRequest() {
        }
        
        public FindFilesExRequest(ServiceGateway.ImageRightServiceReference.FindFilesExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindFilesExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool getContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool includeDeleted;
        
        public FindFilesExRequestBody() {
        }
        
        public FindFilesExRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool getContent, bool includeDeleted) {
            this.securityToken = securityToken;
            this.searchConditions = searchConditions;
            this.getContent = getContent;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindFilesExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindFilesExResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.FindFilesExResponseBody Body;
        
        public FindFilesExResponse() {
        }
        
        public FindFilesExResponse(ServiceGateway.ImageRightServiceReference.FindFilesExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class FindFilesExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.File[] FindFilesExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public FindFilesExResponseBody() {
        }
        
        public FindFilesExResponseBody(ServiceGateway.ImageRightServiceReference.File[] FindFilesExResult, string securityToken) {
            this.FindFilesExResult = FindFilesExResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPages", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPagesRequestBody Body;
        
        public GetPagesRequest() {
        }
        
        public GetPagesRequest(ServiceGateway.ImageRightServiceReference.GetPagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef documentRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool includeDeleted;
        
        public GetPagesRequestBody() {
        }
        
        public GetPagesRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, bool includeDeleted) {
            this.securityToken = securityToken;
            this.documentRef = documentRef;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPagesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPagesResponseBody Body;
        
        public GetPagesResponse() {
        }
        
        public GetPagesResponse(ServiceGateway.ImageRightServiceReference.GetPagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page[] GetPagesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPagesResponseBody() {
        }
        
        public GetPagesResponseBody(ServiceGateway.ImageRightServiceReference.Page[] GetPagesResult, string securityToken) {
            this.GetPagesResult = GetPagesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFirstPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFirstPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFirstPageRequestBody Body;
        
        public GetFirstPageRequest() {
        }
        
        public GetFirstPageRequest(ServiceGateway.ImageRightServiceReference.GetFirstPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFirstPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef documentRef;
        
        public GetFirstPageRequestBody() {
        }
        
        public GetFirstPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef) {
            this.securityToken = securityToken;
            this.documentRef = documentRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFirstPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFirstPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFirstPageResponseBody Body;
        
        public GetFirstPageResponse() {
        }
        
        public GetFirstPageResponse(ServiceGateway.ImageRightServiceReference.GetFirstPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFirstPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page GetFirstPageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFirstPageResponseBody() {
        }
        
        public GetFirstPageResponseBody(ServiceGateway.ImageRightServiceReference.Page GetFirstPageResult, string securityToken) {
            this.GetFirstPageResult = GetFirstPageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageByRefRequestBody Body;
        
        public GetPageByRefRequest() {
        }
        
        public GetPageByRefRequest(ServiceGateway.ImageRightServiceReference.GetPageByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public GetPageByRefRequestBody() {
        }
        
        public GetPageByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageByRefResponseBody Body;
        
        public GetPageByRefResponse() {
        }
        
        public GetPageByRefResponse(ServiceGateway.ImageRightServiceReference.GetPageByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page GetPageByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPageByRefResponseBody() {
        }
        
        public GetPageByRefResponseBody(ServiceGateway.ImageRightServiceReference.Page GetPageByRefResult, string securityToken) {
            this.GetPageByRefResult = GetPageByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAssociatedFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAssociatedFiles", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequestBody Body;
        
        public GetAssociatedFilesRequest() {
        }
        
        public GetAssociatedFilesRequest(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAssociatedFilesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        public GetAssociatedFilesRequestBody() {
        }
        
        public GetAssociatedFilesRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAssociatedFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAssociatedFilesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponseBody Body;
        
        public GetAssociatedFilesResponse() {
        }
        
        public GetAssociatedFilesResponse(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAssociatedFilesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.File[] GetAssociatedFilesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAssociatedFilesResponseBody() {
        }
        
        public GetAssociatedFilesResponseBody(ServiceGateway.ImageRightServiceReference.File[] GetAssociatedFilesResult, string securityToken) {
            this.GetAssociatedFilesResult = GetAssociatedFilesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileMarksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileMarks", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileMarksRequestBody Body;
        
        public GetFileMarksRequest() {
        }
        
        public GetFileMarksRequest(ServiceGateway.ImageRightServiceReference.GetFileMarksRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileMarksRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        public GetFileMarksRequestBody() {
        }
        
        public GetFileMarksRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileMarksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileMarksResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileMarksResponseBody Body;
        
        public GetFileMarksResponse() {
        }
        
        public GetFileMarksResponse(ServiceGateway.ImageRightServiceReference.GetFileMarksResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileMarksResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarksResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileMarksResponseBody() {
        }
        
        public GetFileMarksResponseBody(ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarksResult, string securityToken) {
            this.GetFileMarksResult = GetFileMarksResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarksByFileRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarksByFileRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequestBody Body;
        
        public GetPageMarksByFileRefRequest() {
        }
        
        public GetPageMarksByFileRefRequest(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarksByFileRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        public GetPageMarksByFileRefRequestBody() {
        }
        
        public GetPageMarksByFileRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarksByFileRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarksByFileRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponseBody Body;
        
        public GetPageMarksByFileRefResponse() {
        }
        
        public GetPageMarksByFileRefResponse(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarksByFileRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.PageMark[] GetPageMarksByFileRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPageMarksByFileRefResponseBody() {
        }
        
        public GetPageMarksByFileRefResponseBody(ServiceGateway.ImageRightServiceReference.PageMark[] GetPageMarksByFileRefResult, string securityToken) {
            this.GetPageMarksByFileRefResult = GetPageMarksByFileRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarksByPageRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarksByPageRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequestBody Body;
        
        public GetPageMarksByPageRefRequest() {
        }
        
        public GetPageMarksByPageRefRequest(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarksByPageRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public GetPageMarksByPageRefRequestBody() {
        }
        
        public GetPageMarksByPageRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageMarksByPageRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageMarksByPageRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponseBody Body;
        
        public GetPageMarksByPageRefResponse() {
        }
        
        public GetPageMarksByPageRefResponse(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageMarksByPageRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarksByPageRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPageMarksByPageRefResponseBody() {
        }
        
        public GetPageMarksByPageRefResponseBody(ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarksByPageRefResult, string securityToken) {
            this.GetPageMarksByPageRefResult = GetPageMarksByPageRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageVersionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageVersions", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageVersionsRequestBody Body;
        
        public GetPageVersionsRequest() {
        }
        
        public GetPageVersionsRequest(ServiceGateway.ImageRightServiceReference.GetPageVersionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageVersionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public GetPageVersionsRequestBody() {
        }
        
        public GetPageVersionsRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPageVersionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPageVersionsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPageVersionsResponseBody Body;
        
        public GetPageVersionsResponse() {
        }
        
        public GetPageVersionsResponse(ServiceGateway.ImageRightServiceReference.GetPageVersionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPageVersionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.PageVersion[] GetPageVersionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPageVersionsResponseBody() {
        }
        
        public GetPageVersionsResponseBody(ServiceGateway.ImageRightServiceReference.PageVersion[] GetPageVersionsResult, string securityToken) {
            this.GetPageVersionsResult = GetPageVersionsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPagePathToFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPagePathToFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequestBody Body;
        
        public GetPagePathToFileRequest() {
        }
        
        public GetPagePathToFileRequest(ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPagePathToFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public GetPagePathToFileRequestBody() {
        }
        
        public GetPagePathToFileRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPagePathToFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPagePathToFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponseBody Body;
        
        public GetPagePathToFileResponse() {
        }
        
        public GetPagePathToFileResponse(ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPagePathToFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetPagePathToFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPagePathToFileResponseBody() {
        }
        
        public GetPagePathToFileResponseBody(ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetPagePathToFileResult, string securityToken) {
            this.GetPagePathToFileResult = GetPagePathToFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetObjectPathToFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetObjectPathToFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequestBody Body;
        
        public GetObjectPathToFileRequest() {
        }
        
        public GetObjectPathToFileRequest(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetObjectPathToFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectRef;
        
        public GetObjectPathToFileRequestBody() {
        }
        
        public GetObjectPathToFileRequestBody(string securityToken, long objectRef) {
            this.securityToken = securityToken;
            this.objectRef = objectRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetObjectPathToFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetObjectPathToFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponseBody Body;
        
        public GetObjectPathToFileResponse() {
        }
        
        public GetObjectPathToFileResponse(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetObjectPathToFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetObjectPathToFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetObjectPathToFileResponseBody() {
        }
        
        public GetObjectPathToFileResponseBody(ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetObjectPathToFileResult, string securityToken) {
            this.GetObjectPathToFileResult = GetObjectPathToFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNotesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNotes", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetNotesRequestBody Body;
        
        public GetNotesRequest() {
        }
        
        public GetNotesRequest(ServiceGateway.ImageRightServiceReference.GetNotesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetNotesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long collectionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ServiceGateway.ImageRightServiceReference.NoteType noteType;
        
        public GetNotesRequestBody() {
        }
        
        public GetNotesRequestBody(string securityToken, long objectId, long collectionId, ServiceGateway.ImageRightServiceReference.NoteType noteType) {
            this.securityToken = securityToken;
            this.objectId = objectId;
            this.collectionId = collectionId;
            this.noteType = noteType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNotesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNotesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetNotesResponseBody Body;
        
        public GetNotesResponse() {
        }
        
        public GetNotesResponse(ServiceGateway.ImageRightServiceReference.GetNotesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetNotesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Note[] GetNotesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetNotesResponseBody() {
        }
        
        public GetNotesResponseBody(ServiceGateway.ImageRightServiceReference.Note[] GetNotesResult, string securityToken) {
            this.GetNotesResult = GetNotesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetAttributesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetAttributes", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.SetAttributesRequestBody Body;
        
        public SetAttributesRequest() {
        }
        
        public SetAttributesRequest(ServiceGateway.ImageRightServiceReference.SetAttributesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class SetAttributesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributeData;
        
        public SetAttributesRequestBody() {
        }
        
        public SetAttributesRequestBody(string securityToken, long objectId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributeData) {
            this.securityToken = securityToken;
            this.objectId = objectId;
            this.attributeData = attributeData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetAttributesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetAttributesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.SetAttributesResponseBody Body;
        
        public SetAttributesResponse() {
        }
        
        public SetAttributesResponse(ServiceGateway.ImageRightServiceReference.SetAttributesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class SetAttributesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public SetAttributesResponseBody() {
        }
        
        public SetAttributesResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateFileRequestBody Body;
        
        public CreateFileRequest() {
        }
        
        public CreateFileRequest(ServiceGateway.ImageRightServiceReference.CreateFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long drawerContainerId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.CreateFileData fileData;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributes;
        
        public CreateFileRequestBody() {
        }
        
        public CreateFileRequestBody(string securityToken, long drawerContainerId, ServiceGateway.ImageRightServiceReference.CreateFileData fileData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            this.securityToken = securityToken;
            this.drawerContainerId = drawerContainerId;
            this.fileData = fileData;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateFileResponseBody Body;
        
        public CreateFileResponse() {
        }
        
        public CreateFileResponse(ServiceGateway.ImageRightServiceReference.CreateFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.FileRef CreateFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateFileResponseBody() {
        }
        
        public CreateFileResponseBody(ServiceGateway.ImageRightServiceReference.FileRef CreateFileResult, string securityToken) {
            this.CreateFileResult = CreateFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateObject", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateObjectRequestBody Body;
        
        public CreateObjectRequest() {
        }
        
        public CreateObjectRequest(ServiceGateway.ImageRightServiceReference.CreateObjectRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateObjectRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long containerId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.CreateObjectData data;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributes;
        
        public CreateObjectRequestBody() {
        }
        
        public CreateObjectRequestBody(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            this.securityToken = securityToken;
            this.containerId = containerId;
            this.data = data;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateObjectResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateObjectResponseBody Body;
        
        public CreateObjectResponse() {
        }
        
        public CreateObjectResponse(ServiceGateway.ImageRightServiceReference.CreateObjectResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateObjectResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long CreateObjectResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateObjectResponseBody() {
        }
        
        public CreateObjectResponseBody(long CreateObjectResult, string securityToken) {
            this.CreateObjectResult = CreateObjectResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDocument", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateDocumentRequestBody Body;
        
        public CreateDocumentRequest() {
        }
        
        public CreateDocumentRequest(ServiceGateway.ImageRightServiceReference.CreateDocumentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateDocumentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long containerId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.CreateObjectData data;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long batchId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributes;
        
        public CreateDocumentRequestBody() {
        }
        
        public CreateDocumentRequestBody(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, long batchId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            this.securityToken = securityToken;
            this.containerId = containerId;
            this.data = data;
            this.batchId = batchId;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateDocumentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateDocumentResponseBody Body;
        
        public CreateDocumentResponse() {
        }
        
        public CreateDocumentResponse(ServiceGateway.ImageRightServiceReference.CreateDocumentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateDocumentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long CreateDocumentResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateDocumentResponseBody() {
        }
        
        public CreateDocumentResponseBody(long CreateDocumentResult, string securityToken) {
            this.CreateDocumentResult = CreateDocumentResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteDocument", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.DeleteDocumentRequestBody Body;
        
        public DeleteDocumentRequest() {
        }
        
        public DeleteDocumentRequest(ServiceGateway.ImageRightServiceReference.DeleteDocumentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class DeleteDocumentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long docId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool killTasks;
        
        public DeleteDocumentRequestBody() {
        }
        
        public DeleteDocumentRequestBody(string securityToken, long docId, bool killTasks) {
            this.securityToken = securityToken;
            this.docId = docId;
            this.killTasks = killTasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteDocumentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.DeleteDocumentResponseBody Body;
        
        public DeleteDocumentResponse() {
        }
        
        public DeleteDocumentResponse(ServiceGateway.ImageRightServiceReference.DeleteDocumentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class DeleteDocumentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ResponseData DeleteDocumentResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public DeleteDocumentResponseBody() {
        }
        
        public DeleteDocumentResponseBody(ServiceGateway.ImageRightServiceReference.ResponseData DeleteDocumentResult, string securityToken) {
            this.DeleteDocumentResult = DeleteDocumentResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateFolder", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateFolderRequestBody Body;
        
        public CreateFolderRequest() {
        }
        
        public CreateFolderRequest(ServiceGateway.ImageRightServiceReference.CreateFolderRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateFolderRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long containerId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.CreateObjectData data;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.AttributeData[] attributes;
        
        public CreateFolderRequestBody() {
        }
        
        public CreateFolderRequestBody(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            this.securityToken = securityToken;
            this.containerId = containerId;
            this.data = data;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateFolderResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateFolderResponseBody Body;
        
        public CreateFolderResponse() {
        }
        
        public CreateFolderResponse(ServiceGateway.ImageRightServiceReference.CreateFolderResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateFolderResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long CreateFolderResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateFolderResponseBody() {
        }
        
        public CreateFolderResponseBody(long CreateFolderResult, string securityToken) {
            this.CreateFolderResult = CreateFolderResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddPageRequestBody Body;
        
        public AddPageRequest() {
        }
        
        public AddPageRequest(ServiceGateway.ImageRightServiceReference.AddPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef documentRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string description;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ServiceGateway.ImageRightServiceReference.ImageList imageList;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long batchId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool archiveImmediately;
        
        public AddPageRequestBody() {
        }
        
        public AddPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            this.securityToken = securityToken;
            this.documentRef = documentRef;
            this.description = description;
            this.imageList = imageList;
            this.batchId = batchId;
            this.archiveImmediately = archiveImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddPageResponseBody Body;
        
        public AddPageResponse() {
        }
        
        public AddPageResponse(ServiceGateway.ImageRightServiceReference.AddPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page AddPageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public AddPageResponseBody() {
        }
        
        public AddPageResponseBody(ServiceGateway.ImageRightServiceReference.Page AddPageResult, string securityToken) {
            this.AddPageResult = AddPageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddConvertedPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddConvertedPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddConvertedPageRequestBody Body;
        
        public AddConvertedPageRequest() {
        }
        
        public AddConvertedPageRequest(ServiceGateway.ImageRightServiceReference.AddConvertedPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddConvertedPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef documentRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.PageConversionDO pageConversionDo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long batchId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool archiveImmediately;
        
        public AddConvertedPageRequestBody() {
        }
        
        public AddConvertedPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageConversionDO pageConversionDo, long batchId, bool archiveImmediately) {
            this.securityToken = securityToken;
            this.documentRef = documentRef;
            this.pageConversionDo = pageConversionDo;
            this.batchId = batchId;
            this.archiveImmediately = archiveImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddConvertedPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddConvertedPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddConvertedPageResponseBody Body;
        
        public AddConvertedPageResponse() {
        }
        
        public AddConvertedPageResponse(ServiceGateway.ImageRightServiceReference.AddConvertedPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddConvertedPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page[] AddConvertedPageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public AddConvertedPageResponseBody() {
        }
        
        public AddConvertedPageResponseBody(ServiceGateway.ImageRightServiceReference.Page[] AddConvertedPageResult, string securityToken) {
            this.AddConvertedPageResult = AddConvertedPageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateBatchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateBatch", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateBatchRequestBody Body;
        
        public CreateBatchRequest() {
        }
        
        public CreateBatchRequest(ServiceGateway.ImageRightServiceReference.CreateBatchRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateBatchRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int applicationId;
        
        public CreateBatchRequestBody() {
        }
        
        public CreateBatchRequestBody(string securityToken, int applicationId) {
            this.securityToken = securityToken;
            this.applicationId = applicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateBatchResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.CreateBatchResponseBody Body;
        
        public CreateBatchResponse() {
        }
        
        public CreateBatchResponse(ServiceGateway.ImageRightServiceReference.CreateBatchResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class CreateBatchResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public long CreateBatchResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public CreateBatchResponseBody() {
        }
        
        public CreateBatchResponseBody(long CreateBatchResult, string securityToken) {
            this.CreateBatchResult = CreateBatchResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.InsertPageRequestBody Body;
        
        public InsertPageRequest() {
        }
        
        public InsertPageRequest(ServiceGateway.ImageRightServiceReference.InsertPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class InsertPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentRef documentRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool after;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string description;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public ServiceGateway.ImageRightServiceReference.ImageList imageList;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long batchId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool archiveImmediately;
        
        public InsertPageRequestBody() {
        }
        
        public InsertPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageRef pageRef, bool after, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            this.securityToken = securityToken;
            this.documentRef = documentRef;
            this.pageRef = pageRef;
            this.after = after;
            this.description = description;
            this.imageList = imageList;
            this.batchId = batchId;
            this.archiveImmediately = archiveImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.InsertPageResponseBody Body;
        
        public InsertPageResponse() {
        }
        
        public InsertPageResponse(ServiceGateway.ImageRightServiceReference.InsertPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class InsertPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Page InsertPageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public InsertPageResponseBody() {
        }
        
        public InsertPageResponseBody(ServiceGateway.ImageRightServiceReference.Page InsertPageResult, string securityToken) {
            this.InsertPageResult = InsertPageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LockPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.LockPageRequestBody Body;
        
        public LockPageRequest() {
        }
        
        public LockPageRequest(ServiceGateway.ImageRightServiceReference.LockPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class LockPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public LockPageRequestBody() {
        }
        
        public LockPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LockPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.LockPageResponseBody Body;
        
        public LockPageResponse() {
        }
        
        public LockPageResponse(ServiceGateway.ImageRightServiceReference.LockPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class LockPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int LockPageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public LockPageResponseBody() {
        }
        
        public LockPageResponseBody(int LockPageResult, string securityToken) {
            this.LockPageResult = LockPageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockPage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockPageRequestBody Body;
        
        public UnlockPageRequest() {
        }
        
        public UnlockPageRequest(ServiceGateway.ImageRightServiceReference.UnlockPageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockPageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        public UnlockPageRequestBody() {
        }
        
        public UnlockPageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnlockPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnlockPageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UnlockPageResponseBody Body;
        
        public UnlockPageResponse() {
        }
        
        public UnlockPageResponse(ServiceGateway.ImageRightServiceReference.UnlockPageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UnlockPageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UnlockPageResponseBody() {
        }
        
        public UnlockPageResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddNoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddNote", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddNoteRequestBody Body;
        
        public AddNoteRequest() {
        }
        
        public AddNoteRequest(ServiceGateway.ImageRightServiceReference.AddNoteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddNoteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string note;
        
        public AddNoteRequestBody() {
        }
        
        public AddNoteRequestBody(string securityToken, long objId, string note) {
            this.securityToken = securityToken;
            this.objId = objId;
            this.note = note;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddNoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddNoteResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddNoteResponseBody Body;
        
        public AddNoteResponse() {
        }
        
        public AddNoteResponse(ServiceGateway.ImageRightServiceReference.AddNoteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddNoteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public AddNoteResponseBody() {
        }
        
        public AddNoteResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddFileMarkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddFileMark", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddFileMarkRequestBody Body;
        
        public AddFileMarkRequest() {
        }
        
        public AddFileMarkRequest(ServiceGateway.ImageRightServiceReference.AddFileMarkRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddFileMarkRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.MarkRef markRef;
        
        public AddFileMarkRequestBody() {
        }
        
        public AddFileMarkRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            this.securityToken = securityToken;
            this.fileRef = fileRef;
            this.markRef = markRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddFileMarkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddFileMarkResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddFileMarkResponseBody Body;
        
        public AddFileMarkResponse() {
        }
        
        public AddFileMarkResponse(ServiceGateway.ImageRightServiceReference.AddFileMarkResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddFileMarkResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public AddFileMarkResponseBody() {
        }
        
        public AddFileMarkResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPageMarkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPageMark", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddPageMarkRequestBody Body;
        
        public AddPageMarkRequest() {
        }
        
        public AddPageMarkRequest(ServiceGateway.ImageRightServiceReference.AddPageMarkRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddPageMarkRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.MarkRef markRef;
        
        public AddPageMarkRequestBody() {
        }
        
        public AddPageMarkRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
            this.markRef = markRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPageMarkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPageMarkResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AddPageMarkResponseBody Body;
        
        public AddPageMarkResponse() {
        }
        
        public AddPageMarkResponse(ServiceGateway.ImageRightServiceReference.AddPageMarkResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AddPageMarkResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public AddPageMarkResponseBody() {
        }
        
        public AddPageMarkResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePageMarkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePageMark", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RemovePageMarkRequestBody Body;
        
        public RemovePageMarkRequest() {
        }
        
        public RemovePageMarkRequest(ServiceGateway.ImageRightServiceReference.RemovePageMarkRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RemovePageMarkRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.MarkRef markRef;
        
        public RemovePageMarkRequestBody() {
        }
        
        public RemovePageMarkRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
            this.markRef = markRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemovePageMarkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemovePageMarkResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RemovePageMarkResponseBody Body;
        
        public RemovePageMarkResponse() {
        }
        
        public RemovePageMarkResponse(ServiceGateway.ImageRightServiceReference.RemovePageMarkResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RemovePageMarkResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public RemovePageMarkResponseBody() {
        }
        
        public RemovePageMarkResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssociateFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AssociateFiles", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AssociateFilesRequestBody Body;
        
        public AssociateFilesRequest() {
        }
        
        public AssociateFilesRequest(ServiceGateway.ImageRightServiceReference.AssociateFilesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AssociateFilesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef2;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions;
        
        public AssociateFilesRequestBody() {
        }
        
        public AssociateFilesRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            this.securityToken = securityToken;
            this.fileRef1 = fileRef1;
            this.fileRef2 = fileRef2;
            this.associationOptions = associationOptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssociateFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AssociateFilesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.AssociateFilesResponseBody Body;
        
        public AssociateFilesResponse() {
        }
        
        public AssociateFilesResponse(ServiceGateway.ImageRightServiceReference.AssociateFilesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class AssociateFilesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public AssociateFilesResponseBody() {
        }
        
        public AssociateFilesResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFileAssociationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFileAssociation", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequestBody Body;
        
        public RemoveFileAssociationRequest() {
        }
        
        public RemoveFileAssociationRequest(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RemoveFileAssociationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.FileRef fileRef2;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions;
        
        public RemoveFileAssociationRequestBody() {
        }
        
        public RemoveFileAssociationRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            this.securityToken = securityToken;
            this.fileRef1 = fileRef1;
            this.fileRef2 = fileRef2;
            this.associationOptions = associationOptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFileAssociationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFileAssociationResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponseBody Body;
        
        public RemoveFileAssociationResponse() {
        }
        
        public RemoveFileAssociationResponse(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class RemoveFileAssociationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public RemoveFileAssociationResponseBody() {
        }
        
        public RemoveFileAssociationResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFileRequestBody Body;
        
        public UpdateFileRequest() {
        }
        
        public UpdateFileRequest(ServiceGateway.ImageRightServiceReference.UpdateFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileUpdateRequest[] updateRequests;
        
        public UpdateFileRequestBody() {
        }
        
        public UpdateFileRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileUpdateRequest[] updateRequests) {
            this.securityToken = securityToken;
            this.updateRequests = updateRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFileResponseBody Body;
        
        public UpdateFileResponse() {
        }
        
        public UpdateFileResponse(ServiceGateway.ImageRightServiceReference.UpdateFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdateFileResponseBody() {
        }
        
        public UpdateFileResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFileInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFileInfo", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequestBody Body;
        
        public UpdateFileInfoRequest() {
        }
        
        public UpdateFileInfoRequest(ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFileInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[] updateRequests;
        
        public UpdateFileInfoRequestBody() {
        }
        
        public UpdateFileInfoRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[] updateRequests) {
            this.securityToken = securityToken;
            this.updateRequests = updateRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFileInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFileInfoResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponseBody Body;
        
        public UpdateFileInfoResponse() {
        }
        
        public UpdateFileInfoResponse(ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFileInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdateFileInfoResponseBody() {
        }
        
        public UpdateFileInfoResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFolder", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFolderRequestBody Body;
        
        public UpdateFolderRequest() {
        }
        
        public UpdateFolderRequest(ServiceGateway.ImageRightServiceReference.UpdateFolderRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFolderRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[] updateRequests;
        
        public UpdateFolderRequestBody() {
        }
        
        public UpdateFolderRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[] updateRequests) {
            this.securityToken = securityToken;
            this.updateRequests = updateRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateFolderResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateFolderResponseBody Body;
        
        public UpdateFolderResponse() {
        }
        
        public UpdateFolderResponse(ServiceGateway.ImageRightServiceReference.UpdateFolderResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateFolderResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdateFolderResponseBody() {
        }
        
        public UpdateFolderResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDocumentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateDocument", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateDocumentRequestBody Body;
        
        public UpdateDocumentRequest() {
        }
        
        public UpdateDocumentRequest(ServiceGateway.ImageRightServiceReference.UpdateDocumentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateDocumentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[] updateRequests;
        
        public UpdateDocumentRequestBody() {
        }
        
        public UpdateDocumentRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[] updateRequests) {
            this.securityToken = securityToken;
            this.updateRequests = updateRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateDocumentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateDocumentResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdateDocumentResponseBody Body;
        
        public UpdateDocumentResponse() {
        }
        
        public UpdateDocumentResponse(ServiceGateway.ImageRightServiceReference.UpdateDocumentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdateDocumentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdateDocumentResponseBody() {
        }
        
        public UpdateDocumentResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePageDescriptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePageDescription", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequestBody Body;
        
        public UpdatePageDescriptionRequest() {
        }
        
        public UpdatePageDescriptionRequest(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdatePageDescriptionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageReference;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string newDescription;
        
        public UpdatePageDescriptionRequestBody() {
        }
        
        public UpdatePageDescriptionRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageReference, string newDescription) {
            this.securityToken = securityToken;
            this.pageReference = pageReference;
            this.newDescription = newDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePageDescriptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePageDescriptionResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponseBody Body;
        
        public UpdatePageDescriptionResponse() {
        }
        
        public UpdatePageDescriptionResponse(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdatePageDescriptionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdatePageDescriptionResponseBody() {
        }
        
        public UpdatePageDescriptionResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdatePageRequestBody Body;
        
        public UpdatePageRequest() {
        }
        
        public UpdatePageRequest(ServiceGateway.ImageRightServiceReference.UpdatePageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdatePageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.Image[] images;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool archiveImmediately;
        
        public UpdatePageRequestBody() {
        }
        
        public UpdatePageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.Image[] images, bool archiveImmediately) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
            this.images = images;
            this.archiveImmediately = archiveImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.UpdatePageResponseBody Body;
        
        public UpdatePageResponse() {
        }
        
        public UpdatePageResponse(ServiceGateway.ImageRightServiceReference.UpdatePageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class UpdatePageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public UpdatePageResponseBody() {
        }
        
        public UpdatePageResponseBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPermissionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPermissions", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPermissionsRequestBody Body;
        
        public GetPermissionsRequest() {
        }
        
        public GetPermissionsRequest(ServiceGateway.ImageRightServiceReference.GetPermissionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPermissionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long objectId;
        
        public GetPermissionsRequestBody() {
        }
        
        public GetPermissionsRequestBody(string securityToken, long objectId) {
            this.securityToken = securityToken;
            this.objectId = objectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPermissionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPermissionsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetPermissionsResponseBody Body;
        
        public GetPermissionsResponse() {
        }
        
        public GetPermissionsResponse(ServiceGateway.ImageRightServiceReference.GetPermissionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetPermissionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetPermissionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetPermissionsResponseBody() {
        }
        
        public GetPermissionsResponseBody(ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetPermissionsResult, string securityToken) {
            this.GetPermissionsResult = GetPermissionsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetImage", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetImageRequestBody Body;
        
        public GetImageRequest() {
        }
        
        public GetImageRequest(ServiceGateway.ImageRightServiceReference.GetImageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetImageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef pageRef;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int version;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ServiceGateway.ImageRightServiceReference.OutputTypes outputType;
        
        public GetImageRequestBody() {
        }
        
        public GetImageRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, int version, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            this.securityToken = securityToken;
            this.pageRef = pageRef;
            this.version = version;
            this.outputType = outputType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetImageResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetImageResponseBody Body;
        
        public GetImageResponse() {
        }
        
        public GetImageResponse(ServiceGateway.ImageRightServiceReference.GetImageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetImageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ImageList GetImageResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetImageResponseBody() {
        }
        
        public GetImageResponseBody(ServiceGateway.ImageRightServiceReference.ImageList GetImageResult, string securityToken) {
            this.GetImageResult = GetImageResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFileEx", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequestBody Body;
        
        public GetMultiPageImageFileExRequest() {
        }
        
        public GetMultiPageImageFileExRequest(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.OutputTypes outputType;
        
        public GetMultiPageImageFileExRequestBody() {
        }
        
        public GetMultiPageImageFileExRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            this.securityToken = securityToken;
            this.searchConditions = searchConditions;
            this.outputType = outputType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFileExResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponseBody Body;
        
        public GetMultiPageImageFileExResponse() {
        }
        
        public GetMultiPageImageFileExResponse(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] GetMultiPageImageFileExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetMultiPageImageFileExResponseBody() {
        }
        
        public GetMultiPageImageFileExResponseBody(byte[] GetMultiPageImageFileExResult, string securityToken) {
            this.GetMultiPageImageFileExResult = GetMultiPageImageFileExResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFile", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequestBody Body;
        
        public GetMultiPageImageFileRequest() {
        }
        
        public GetMultiPageImageFileRequest(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.Image[] fImages;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.OutputTypes outputType;
        
        public GetMultiPageImageFileRequestBody() {
        }
        
        public GetMultiPageImageFileRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.Image[] fImages, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            this.securityToken = securityToken;
            this.fImages = fImages;
            this.outputType = outputType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFileResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponseBody Body;
        
        public GetMultiPageImageFileResponse() {
        }
        
        public GetMultiPageImageFileResponse(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] GetMultiPageImageFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetMultiPageImageFileResponseBody() {
        }
        
        public GetMultiPageImageFileResponseBody(byte[] GetMultiPageImageFileResult, string securityToken) {
            this.GetMultiPageImageFileResult = GetMultiPageImageFileResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileUsingPagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFileUsingPages", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequestBody Body;
        
        public GetMultiPageImageFileUsingPagesRequest() {
        }
        
        public GetMultiPageImageFileUsingPagesRequest(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileUsingPagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.PageRef[] pageRefs;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ServiceGateway.ImageRightServiceReference.OutputTypes outputType;
        
        public GetMultiPageImageFileUsingPagesRequestBody() {
        }
        
        public GetMultiPageImageFileUsingPagesRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef[] pageRefs, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            this.securityToken = securityToken;
            this.pageRefs = pageRefs;
            this.outputType = outputType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMultiPageImageFileUsingPagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMultiPageImageFileUsingPagesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponseBody Body;
        
        public GetMultiPageImageFileUsingPagesResponse() {
        }
        
        public GetMultiPageImageFileUsingPagesResponse(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetMultiPageImageFileUsingPagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public byte[] GetMultiPageImageFileUsingPagesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetMultiPageImageFileUsingPagesResponseBody() {
        }
        
        public GetMultiPageImageFileUsingPagesResponseBody(byte[] GetMultiPageImageFileUsingPagesResult, string securityToken) {
            this.GetMultiPageImageFileUsingPagesResult = GetMultiPageImageFileUsingPagesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDocTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDocTypes", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequestBody Body;
        
        public GetAllDocTypesRequest() {
        }
        
        public GetAllDocTypesRequest(ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAllDocTypesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetAllDocTypesRequestBody() {
        }
        
        public GetAllDocTypesRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDocTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDocTypesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponseBody Body;
        
        public GetAllDocTypesResponse() {
        }
        
        public GetAllDocTypesResponse(ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAllDocTypesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.DocumentType[] GetAllDocTypesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAllDocTypesResponseBody() {
        }
        
        public GetAllDocTypesResponseBody(ServiceGateway.ImageRightServiceReference.DocumentType[] GetAllDocTypesResult, string securityToken) {
            this.GetAllDocTypesResult = GetAllDocTypesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationByRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocationByRef", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLocationByRefRequestBody Body;
        
        public GetLocationByRefRequest() {
        }
        
        public GetLocationByRefRequest(ServiceGateway.ImageRightServiceReference.GetLocationByRefRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLocationByRefRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public ServiceGateway.ImageRightServiceReference.LocationRef locationRef;
        
        public GetLocationByRefRequestBody() {
        }
        
        public GetLocationByRefRequestBody(string securityToken, ServiceGateway.ImageRightServiceReference.LocationRef locationRef) {
            this.securityToken = securityToken;
            this.locationRef = locationRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationByRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocationByRefResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLocationByRefResponseBody Body;
        
        public GetLocationByRefResponse() {
        }
        
        public GetLocationByRefResponse(ServiceGateway.ImageRightServiceReference.GetLocationByRefResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLocationByRefResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Location GetLocationByRefResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetLocationByRefResponseBody() {
        }
        
        public GetLocationByRefResponseBody(ServiceGateway.ImageRightServiceReference.Location GetLocationByRefResult, string securityToken) {
            this.GetLocationByRefResult = GetLocationByRefResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetType", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTypeRequestBody Body;
        
        public GetTypeRequest() {
        }
        
        public GetTypeRequest(ServiceGateway.ImageRightServiceReference.GetTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long typeId;
        
        public GetTypeRequestBody() {
        }
        
        public GetTypeRequestBody(string securityToken, long typeId) {
            this.securityToken = securityToken;
            this.typeId = typeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTypeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetTypeResponseBody Body;
        
        public GetTypeResponse() {
        }
        
        public GetTypeResponse(ServiceGateway.ImageRightServiceReference.GetTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetTypeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetTypeResponseBody() {
        }
        
        public GetTypeResponseBody(ServiceGateway.ImageRightServiceReference.ObjectTypeData GetTypeResult, string securityToken) {
            this.GetTypeResult = GetTypeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawerTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawerType", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequestBody Body;
        
        public GetDrawerTypeRequest() {
        }
        
        public GetDrawerTypeRequest(ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawerTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string programmaticname;
        
        public GetDrawerTypeRequestBody() {
        }
        
        public GetDrawerTypeRequestBody(string securityToken, string programmaticname) {
            this.securityToken = securityToken;
            this.programmaticname = programmaticname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawerTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawerTypeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponseBody Body;
        
        public GetDrawerTypeResponse() {
        }
        
        public GetDrawerTypeResponse(ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawerTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDrawerTypeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDrawerTypeResponseBody() {
        }
        
        public GetDrawerTypeResponseBody(ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDrawerTypeResult, string securityToken) {
            this.GetDrawerTypeResult = GetDrawerTypeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileType", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileTypeRequestBody Body;
        
        public GetFileTypeRequest() {
        }
        
        public GetFileTypeRequest(ServiceGateway.ImageRightServiceReference.GetFileTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string programmaticname;
        
        public GetFileTypeRequestBody() {
        }
        
        public GetFileTypeRequestBody(string securityToken, string programmaticname) {
            this.securityToken = securityToken;
            this.programmaticname = programmaticname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFileTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFileTypeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFileTypeResponseBody Body;
        
        public GetFileTypeResponse() {
        }
        
        public GetFileTypeResponse(ServiceGateway.ImageRightServiceReference.GetFileTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFileTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFileTypeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFileTypeResponseBody() {
        }
        
        public GetFileTypeResponseBody(ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFileTypeResult, string securityToken) {
            this.GetFileTypeResult = GetFileTypeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFolderTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFolderType", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFolderTypeRequestBody Body;
        
        public GetFolderTypeRequest() {
        }
        
        public GetFolderTypeRequest(ServiceGateway.ImageRightServiceReference.GetFolderTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFolderTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string programmaticname;
        
        public GetFolderTypeRequestBody() {
        }
        
        public GetFolderTypeRequestBody(string securityToken, string programmaticname) {
            this.securityToken = securityToken;
            this.programmaticname = programmaticname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetFolderTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetFolderTypeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetFolderTypeResponseBody Body;
        
        public GetFolderTypeResponse() {
        }
        
        public GetFolderTypeResponse(ServiceGateway.ImageRightServiceReference.GetFolderTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetFolderTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFolderTypeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetFolderTypeResponseBody() {
        }
        
        public GetFolderTypeResponseBody(ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFolderTypeResult, string securityToken) {
            this.GetFolderTypeResult = GetFolderTypeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentType", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequestBody Body;
        
        public GetDocumentTypeRequest() {
        }
        
        public GetDocumentTypeRequest(ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDocumentTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string programmaticname;
        
        public GetDocumentTypeRequestBody() {
        }
        
        public GetDocumentTypeRequestBody(string securityToken, string programmaticname) {
            this.securityToken = securityToken;
            this.programmaticname = programmaticname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDocumentTypeResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponseBody Body;
        
        public GetDocumentTypeResponse() {
        }
        
        public GetDocumentTypeResponse(ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDocumentTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDocumentTypeResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDocumentTypeResponseBody() {
        }
        
        public GetDocumentTypeResponseBody(ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDocumentTypeResult, string securityToken) {
            this.GetDocumentTypeResult = GetDocumentTypeResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeDefsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeDefs", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequestBody Body;
        
        public GetAttributeDefsRequest() {
        }
        
        public GetAttributeDefsRequest(ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeDefsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetAttributeDefsRequestBody() {
        }
        
        public GetAttributeDefsRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeDefsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeDefsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponseBody Body;
        
        public GetAttributeDefsResponse() {
        }
        
        public GetAttributeDefsResponse(ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeDefsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeDef[] GetAttributeDefsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributeDefsResponseBody() {
        }
        
        public GetAttributeDefsResponseBody(ServiceGateway.ImageRightServiceReference.AttributeDef[] GetAttributeDefsResult, string securityToken) {
            this.GetAttributeDefsResult = GetAttributeDefsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeRulesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeRules", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequestBody Body;
        
        public GetAttributeRulesRequest() {
        }
        
        public GetAttributeRulesRequest(ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeRulesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long typeId;
        
        public GetAttributeRulesRequestBody() {
        }
        
        public GetAttributeRulesRequestBody(string securityToken, long typeId) {
            this.securityToken = securityToken;
            this.typeId = typeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeRulesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeRulesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponseBody Body;
        
        public GetAttributeRulesResponse() {
        }
        
        public GetAttributeRulesResponse(ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeRulesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeRule[] GetAttributeRulesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributeRulesResponseBody() {
        }
        
        public GetAttributeRulesResponseBody(ServiceGateway.ImageRightServiceReference.AttributeRule[] GetAttributeRulesResult, string securityToken) {
            this.GetAttributeRulesResult = GetAttributeRulesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeRuleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeRule", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequestBody Body;
        
        public GetAttributeRuleRequest() {
        }
        
        public GetAttributeRuleRequest(ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeRuleRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long typeId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef;
        
        public GetAttributeRuleRequestBody() {
        }
        
        public GetAttributeRuleRequestBody(string securityToken, long typeId, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef) {
            this.securityToken = securityToken;
            this.typeId = typeId;
            this.attributeRef = attributeRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttributeRuleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttributeRuleResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponseBody Body;
        
        public GetAttributeRuleResponse() {
        }
        
        public GetAttributeRuleResponse(ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetAttributeRuleResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.AttributeRule GetAttributeRuleResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetAttributeRuleResponseBody() {
        }
        
        public GetAttributeRuleResponseBody(ServiceGateway.ImageRightServiceReference.AttributeRule GetAttributeRuleResult, string securityToken) {
            this.GetAttributeRuleResult = GetAttributeRuleResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDevicesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDevices", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDevicesRequestBody Body;
        
        public GetDevicesRequest() {
        }
        
        public GetDevicesRequest(ServiceGateway.ImageRightServiceReference.GetDevicesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDevicesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        public GetDevicesRequestBody() {
        }
        
        public GetDevicesRequestBody(string securityToken) {
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDevicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDevicesResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDevicesResponseBody Body;
        
        public GetDevicesResponse() {
        }
        
        public GetDevicesResponse(ServiceGateway.ImageRightServiceReference.GetDevicesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDevicesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Device[] GetDevicesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDevicesResponseBody() {
        }
        
        public GetDevicesResponseBody(ServiceGateway.ImageRightServiceReference.Device[] GetDevicesResult, string securityToken) {
            this.GetDevicesResult = GetDevicesResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocations", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLocationsRequestBody Body;
        
        public GetLocationsRequest() {
        }
        
        public GetLocationsRequest(ServiceGateway.ImageRightServiceReference.GetLocationsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLocationsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long parentLocationId;
        
        public GetLocationsRequestBody() {
        }
        
        public GetLocationsRequestBody(string securityToken, long parentLocationId) {
            this.securityToken = securityToken;
            this.parentLocationId = parentLocationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLocationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetLocationsResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetLocationsResponseBody Body;
        
        public GetLocationsResponse() {
        }
        
        public GetLocationsResponse(ServiceGateway.ImageRightServiceReference.GetLocationsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetLocationsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Location[] GetLocationsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetLocationsResponseBody() {
        }
        
        public GetLocationsResponseBody(ServiceGateway.ImageRightServiceReference.Location[] GetLocationsResult, string securityToken) {
            this.GetLocationsResult = GetLocationsResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawers", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawersRequestBody Body;
        
        public GetDrawersRequest() {
        }
        
        public GetDrawersRequest(ServiceGateway.ImageRightServiceReference.GetDrawersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string securityToken;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool includeDeleted;
        
        public GetDrawersRequestBody() {
        }
        
        public GetDrawersRequestBody(string securityToken, bool includeDeleted) {
            this.securityToken = securityToken;
            this.includeDeleted = includeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDrawersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDrawersResponse", Namespace="http://imageright.com/imageright.webservice", Order=0)]
        public ServiceGateway.ImageRightServiceReference.GetDrawersResponseBody Body;
        
        public GetDrawersResponse() {
        }
        
        public GetDrawersResponse(ServiceGateway.ImageRightServiceReference.GetDrawersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://imageright.com/imageright.webservice")]
    public partial class GetDrawersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawersResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string securityToken;
        
        public GetDrawersResponseBody() {
        }
        
        public GetDrawersResponseBody(ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawersResult, string securityToken) {
            this.GetDrawersResult = GetDrawersResult;
            this.securityToken = securityToken;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRWebService40SoapChannel : ServiceGateway.ImageRightServiceReference.IRWebService40Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RWebService40SoapClient : System.ServiceModel.ClientBase<ServiceGateway.ImageRightServiceReference.IRWebService40Soap>, ServiceGateway.ImageRightServiceReference.IRWebService40Soap {
        
        public RWebService40SoapClient() {
        }
        
        public RWebService40SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RWebService40SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RWebService40SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RWebService40SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawersByParent(ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest request) {
            return base.Channel.GetDrawersByParent(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawersByParent(ref string securityToken, long parentLocationId) {
            ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.parentLocationId = parentLocationId;
            ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawersByParent(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDrawersByParentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawersByParentAsync(ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest request) {
            return base.Channel.GetDrawersByParentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersByParentResponse> GetDrawersByParentAsync(string securityToken, long parentLocationId) {
            ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawersByParentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.parentLocationId = parentLocationId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawersByParentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawerByRef(ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest request) {
            return base.Channel.GetDrawerByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Drawer GetDrawerByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.DrawerRef drawer) {
            ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawer = drawer;
            ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawerByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDrawerByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawerByRefAsync(ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest request) {
            return base.Channel.GetDrawerByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerByRefResponse> GetDrawerByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DrawerRef drawer) {
            ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawerByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawer = drawer;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawerByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileMarkDefs(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest request) {
            return base.Channel.GetFileMarkDefs(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarkDefs(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileMarkDefs(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileMarkDefsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileMarkDefsAsync(ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest request) {
            return base.Channel.GetFileMarkDefsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarkDefsResponse> GetFileMarkDefsAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileMarkDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileMarkDefsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarkDefs(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest request) {
            return base.Channel.GetPageMarkDefs(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarkDefs(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarkDefs(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPageMarkDefsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarkDefsAsync(ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest request) {
            return base.Channel.GetPageMarkDefsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarkDefsResponse> GetPageMarkDefsAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarkDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarkDefsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileTemplate(ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest request) {
            return base.Channel.GetFileTemplate(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.FileTemplate GetFileTemplate(ref string securityToken, long fileTypeId) {
            ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileTemplateRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileTypeId = fileTypeId;
            ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileTemplate(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileTemplateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileTemplateAsync(ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest request) {
            return base.Channel.GetFileTemplateAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTemplateResponse> GetFileTemplateAsync(string securityToken, long fileTypeId) {
            ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileTemplateRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileTemplateRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileTypeId = fileTypeId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileTemplateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTypePermissions(ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest request) {
            return base.Channel.GetTypePermissions(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetTypePermissions(ref string securityToken, long objectTypeId) {
            ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectTypeId = objectTypeId;
            ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTypePermissions(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTypePermissionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTypePermissionsAsync(ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest request) {
            return base.Channel.GetTypePermissionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypePermissionsResponse> GetTypePermissionsAsync(string securityToken, long objectTypeId) {
            ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTypePermissionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectTypeId = objectTypeId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTypePermissionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTaskByRef(ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest request) {
            return base.Channel.GetTaskByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Task GetTaskByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTaskByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTaskByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTaskByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTaskByRefAsync(ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest request) {
            return base.Channel.GetTaskByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTaskByRefResponse> GetTaskByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTaskByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTaskByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTaskByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksForCurrentUser(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest request) {
            return base.Channel.GetTasksForCurrentUser(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksForCurrentUser(ref string securityToken, int limit) {
            ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.limit = limit;
            ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksForCurrentUser(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTasksForCurrentUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksForCurrentUserAsync(ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest request) {
            return base.Channel.GetTasksForCurrentUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserResponse> GetTasksForCurrentUserAsync(string securityToken, int limit) {
            ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksForCurrentUserRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.limit = limit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksForCurrentUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTasksExResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksEx(ServiceGateway.ImageRightServiceReference.GetTasksExRequest request) {
            return base.Channel.GetTasksEx(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksEx(ref string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions) {
            ServiceGateway.ImageRightServiceReference.GetTasksExRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            ServiceGateway.ImageRightServiceReference.GetTasksExResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksEx(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTasksExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksExResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksExAsync(ServiceGateway.ImageRightServiceReference.GetTasksExRequest request) {
            return base.Channel.GetTasksExAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksExResponse> GetTasksExAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions) {
            ServiceGateway.ImageRightServiceReference.GetTasksExRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksExAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksForFile(ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest request) {
            return base.Channel.GetTasksForFile(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Task[] GetTasksForFile(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, int limit) {
            ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksForFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.limit = limit;
            ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksForFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTasksForFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTasksForFileAsync(ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest request) {
            return base.Channel.GetTasksForFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTasksForFileResponse> GetTasksForFileAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, int limit) {
            ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTasksForFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTasksForFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.limit = limit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTasksForFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDiaryFlow(ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest request) {
            return base.Channel.GetDiaryFlow(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Workflow GetDiaryFlow(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDiaryFlow(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDiaryFlowResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDiaryFlowAsync(ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest request) {
            return base.Channel.GetDiaryFlowAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDiaryFlowResponse> GetDiaryFlowAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDiaryFlowRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDiaryFlowAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFlowsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFlows(ServiceGateway.ImageRightServiceReference.GetFlowsRequest request) {
            return base.Channel.GetFlows(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Workflow[] GetFlows(ref string securityToken, ServiceGateway.ImageRightServiceReference.FlowRequestFilter requestFilter) {
            ServiceGateway.ImageRightServiceReference.GetFlowsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFlowsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFlowsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.requestFilter = requestFilter;
            ServiceGateway.ImageRightServiceReference.GetFlowsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFlows(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFlowsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFlowsAsync(ServiceGateway.ImageRightServiceReference.GetFlowsRequest request) {
            return base.Channel.GetFlowsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowsResponse> GetFlowsAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FlowRequestFilter requestFilter) {
            ServiceGateway.ImageRightServiceReference.GetFlowsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFlowsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFlowsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.requestFilter = requestFilter;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFlowsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFlowByRef(ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest request) {
            return base.Channel.GetFlowByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Workflow GetFlowByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef) {
            ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFlowByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.flowRef = flowRef;
            ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFlowByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFlowByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFlowByRefAsync(ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest request) {
            return base.Channel.GetFlowByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFlowByRefResponse> GetFlowByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef) {
            ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFlowByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFlowByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.flowRef = flowRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFlowByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetStepByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetStepByRef(ServiceGateway.ImageRightServiceReference.GetStepByRefRequest request) {
            return base.Channel.GetStepByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Step GetStepByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            ServiceGateway.ImageRightServiceReference.GetStepByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            inValue.Body.requestFlag = requestFlag;
            ServiceGateway.ImageRightServiceReference.GetStepByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetStepByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetStepByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetStepByRefAsync(ServiceGateway.ImageRightServiceReference.GetStepByRefRequest request) {
            return base.Channel.GetStepByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepByRefResponse> GetStepByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            ServiceGateway.ImageRightServiceReference.GetStepByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            inValue.Body.requestFlag = requestFlag;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetStepByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetStepsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSteps(ServiceGateway.ImageRightServiceReference.GetStepsRequest request) {
            return base.Channel.GetSteps(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Step[] GetSteps(ref string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            ServiceGateway.ImageRightServiceReference.GetStepsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.flowRef = flowRef;
            inValue.Body.requestFlag = requestFlag;
            ServiceGateway.ImageRightServiceReference.GetStepsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSteps(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetStepsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetStepsAsync(ServiceGateway.ImageRightServiceReference.GetStepsRequest request) {
            return base.Channel.GetStepsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepsResponse> GetStepsAsync(string securityToken, ServiceGateway.ImageRightServiceReference.WorkflowRef flowRef, ServiceGateway.ImageRightServiceReference.StepRequestFlag requestFlag) {
            ServiceGateway.ImageRightServiceReference.GetStepsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.flowRef = flowRef;
            inValue.Body.requestFlag = requestFlag;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetStepsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAuthorizedUsersForStep(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest request) {
            return base.Channel.GetAuthorizedUsersForStep(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AuthorizedStepUser[] GetAuthorizedUsersForStep(ref string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepPermission stepPermission) {
            ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            inValue.Body.stepPermission = stepPermission;
            ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAuthorizedUsersForStep(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAuthorizedUsersForStepResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAuthorizedUsersForStepAsync(ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest request) {
            return base.Channel.GetAuthorizedUsersForStepAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepResponse> GetAuthorizedUsersForStepAsync(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.StepPermission stepPermission) {
            ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAuthorizedUsersForStepRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            inValue.Body.stepPermission = stepPermission;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAuthorizedUsersForStepAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetStepAttributes(ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest request) {
            return base.Channel.GetStepAttributes(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.StepAttributeRule[] GetStepAttributes(ref string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetStepAttributes(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetStepAttributesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetStepAttributesAsync(ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest request) {
            return base.Channel.GetStepAttributesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetStepAttributesResponse> GetStepAttributesAsync(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetStepAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetStepAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetStepAttributesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetLinksResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLinks(ServiceGateway.ImageRightServiceReference.GetLinksRequest request) {
            return base.Channel.GetLinks(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Link[] GetLinks(ref string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            ServiceGateway.ImageRightServiceReference.GetLinksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLinksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLinksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            ServiceGateway.ImageRightServiceReference.GetLinksResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLinks(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetLinksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLinksResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLinksAsync(ServiceGateway.ImageRightServiceReference.GetLinksRequest request) {
            return base.Channel.GetLinksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLinksResponse> GetLinksAsync(string securityToken, ServiceGateway.ImageRightServiceReference.StepRef stepRef) {
            ServiceGateway.ImageRightServiceReference.GetLinksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLinksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLinksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.stepRef = stepRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLinksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateTask(ServiceGateway.ImageRightServiceReference.CreateTaskRequest request) {
            return base.Channel.CreateTask(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TaskRef CreateTask(ref string securityToken, long objId, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.TaskCreateData createData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objId = objId;
            inValue.Body.stepRef = stepRef;
            inValue.Body.createData = createData;
            inValue.Body.attributes = attributes;
            ServiceGateway.ImageRightServiceReference.CreateTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateTask(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateTaskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateTaskAsync(ServiceGateway.ImageRightServiceReference.CreateTaskRequest request) {
            return base.Channel.CreateTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateTaskResponse> CreateTaskAsync(string securityToken, long objId, ServiceGateway.ImageRightServiceReference.StepRef stepRef, ServiceGateway.ImageRightServiceReference.TaskCreateData createData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objId = objId;
            inValue.Body.stepRef = stepRef;
            inValue.Body.createData = createData;
            inValue.Body.attributes = attributes;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.LockTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.LockTask(ServiceGateway.ImageRightServiceReference.LockTaskRequest request) {
            return base.Channel.LockTask(request);
        }
        
        public void LockTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.LockTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.LockTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.LockTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            ServiceGateway.ImageRightServiceReference.LockTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).LockTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.LockTaskAsync(ServiceGateway.ImageRightServiceReference.LockTaskRequest request) {
            return base.Channel.LockTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockTaskResponse> LockTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.LockTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.LockTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.LockTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).LockTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UnlockTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockTask(ServiceGateway.ImageRightServiceReference.UnlockTaskRequest request) {
            return base.Channel.UnlockTask(request);
        }
        
        public void UnlockTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.UnlockTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            ServiceGateway.ImageRightServiceReference.UnlockTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockTaskAsync(ServiceGateway.ImageRightServiceReference.UnlockTaskRequest request) {
            return base.Channel.UnlockTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockTaskResponse> UnlockTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.UnlockTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdateTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateTask(ServiceGateway.ImageRightServiceReference.UpdateTaskRequest request) {
            return base.Channel.UpdateTask(request);
        }
        
        public void UpdateTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.TaskParameters parameters) {
            ServiceGateway.ImageRightServiceReference.UpdateTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.parameters = parameters;
            ServiceGateway.ImageRightServiceReference.UpdateTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateTaskAsync(ServiceGateway.ImageRightServiceReference.UpdateTaskRequest request) {
            return base.Channel.UpdateTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateTaskResponse> UpdateTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.TaskParameters parameters) {
            ServiceGateway.ImageRightServiceReference.UpdateTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.parameters = parameters;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.MoveTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.MoveTask(ServiceGateway.ImageRightServiceReference.MoveTaskRequest request) {
            return base.Channel.MoveTask(request);
        }
        
        public void MoveTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, long targetId, bool isPage) {
            ServiceGateway.ImageRightServiceReference.MoveTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.MoveTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.MoveTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.targetId = targetId;
            inValue.Body.isPage = isPage;
            ServiceGateway.ImageRightServiceReference.MoveTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).MoveTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.MoveTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.MoveTaskAsync(ServiceGateway.ImageRightServiceReference.MoveTaskRequest request) {
            return base.Channel.MoveTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.MoveTaskResponse> MoveTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, long targetId, bool isPage) {
            ServiceGateway.ImageRightServiceReference.MoveTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.MoveTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.MoveTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.targetId = targetId;
            inValue.Body.isPage = isPage;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).MoveTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.KillTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.KillTask(ServiceGateway.ImageRightServiceReference.KillTaskRequest request) {
            return base.Channel.KillTask(request);
        }
        
        public void KillTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.KillTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.KillTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.KillTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            ServiceGateway.ImageRightServiceReference.KillTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).KillTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.KillTaskAsync(ServiceGateway.ImageRightServiceReference.KillTaskRequest request) {
            return base.Channel.KillTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTaskResponse> KillTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.KillTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.KillTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.KillTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).KillTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.KillTasksResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.KillTasks(ServiceGateway.ImageRightServiceReference.KillTasksRequest request) {
            return base.Channel.KillTasks(request);
        }
        
        public void KillTasks(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef[] taskRefs) {
            ServiceGateway.ImageRightServiceReference.KillTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.KillTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.KillTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRefs = taskRefs;
            ServiceGateway.ImageRightServiceReference.KillTasksResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).KillTasks(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTasksResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.KillTasksAsync(ServiceGateway.ImageRightServiceReference.KillTasksRequest request) {
            return base.Channel.KillTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.KillTasksResponse> KillTasksAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef[] taskRefs) {
            ServiceGateway.ImageRightServiceReference.KillTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.KillTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.KillTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRefs = taskRefs;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).KillTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.RouteTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RouteTask(ServiceGateway.ImageRightServiceReference.RouteTaskRequest request) {
            return base.Channel.RouteTask(request);
        }
        
        public void RouteTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, System.DateTime newAvailableDate, ServiceGateway.ImageRightServiceReference.SecurityID userId, bool commit) {
            ServiceGateway.ImageRightServiceReference.RouteTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.RouteTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RouteTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.stepRef = stepRef;
            inValue.Body.newAvailableDate = newAvailableDate;
            inValue.Body.userId = userId;
            inValue.Body.commit = commit;
            ServiceGateway.ImageRightServiceReference.RouteTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RouteTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RouteTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RouteTaskAsync(ServiceGateway.ImageRightServiceReference.RouteTaskRequest request) {
            return base.Channel.RouteTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RouteTaskResponse> RouteTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, System.DateTime newAvailableDate, ServiceGateway.ImageRightServiceReference.SecurityID userId, bool commit) {
            ServiceGateway.ImageRightServiceReference.RouteTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.RouteTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RouteTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.stepRef = stepRef;
            inValue.Body.newAvailableDate = newAvailableDate;
            inValue.Body.userId = userId;
            inValue.Body.commit = commit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RouteTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseTaskToStep(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest request) {
            return base.Channel.ReleaseTaskToStep(request);
        }
        
        public void ReleaseTaskToStep(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.stepRef = stepRef;
            inValue.Body.commit = commit;
            ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseTaskToStep(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseTaskToStepAsync(ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest request) {
            return base.Channel.ReleaseTaskToStepAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepResponse> ReleaseTaskToStepAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.StepRef stepRef, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseTaskToStepRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.stepRef = stepRef;
            inValue.Body.commit = commit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseTaskToStepAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseTask(ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest request) {
            return base.Channel.ReleaseTask(request);
        }
        
        public void ReleaseTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.commit = commit;
            ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseTaskAsync(ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest request) {
            return base.Channel.ReleaseTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseTaskResponse> ReleaseTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.commit = commit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseSplitTask(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest request) {
            return base.Channel.ReleaseSplitTask(request);
        }
        
        public void ReleaseSplitTask(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.SplitLinkParameter[] splitParams, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.splitParams = splitParams;
            inValue.Body.commit = commit;
            ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseSplitTask(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ReleaseSplitTaskAsync(ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest request) {
            return base.Channel.ReleaseSplitTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskResponse> ReleaseSplitTaskAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.SplitLinkParameter[] splitParams, bool commit) {
            ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest inValue = new ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ReleaseSplitTaskRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.splitParams = splitParams;
            inValue.Body.commit = commit;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ReleaseSplitTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.SetTaskAttribute(ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest request) {
            return base.Channel.SetTaskAttribute(request);
        }
        
        public void SetTaskAttribute(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef, object attribute) {
            ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest inValue = new ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.attributeRef = attributeRef;
            inValue.Body.attribute = attribute;
            ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).SetTaskAttribute(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.SetTaskAttributeAsync(ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest request) {
            return base.Channel.SetTaskAttributeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetTaskAttributeResponse> SetTaskAttributeAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef, object attribute) {
            ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest inValue = new ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.SetTaskAttributeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            inValue.Body.attributeRef = attributeRef;
            inValue.Body.attribute = attribute;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).SetTaskAttributeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetSubTasksResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSubTasks(ServiceGateway.ImageRightServiceReference.GetSubTasksRequest request) {
            return base.Channel.GetSubTasks(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TaskRef[] GetSubTasks(ref string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.GetSubTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSubTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSubTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            ServiceGateway.ImageRightServiceReference.GetSubTasksResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSubTasks(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetSubTasksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSubTasksResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSubTasksAsync(ServiceGateway.ImageRightServiceReference.GetSubTasksRequest request) {
            return base.Channel.GetSubTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSubTasksResponse> GetSubTasksAsync(string securityToken, ServiceGateway.ImageRightServiceReference.TaskRef taskRef) {
            ServiceGateway.ImageRightServiceReference.GetSubTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSubTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSubTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.taskRef = taskRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSubTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPages3xResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPages3x(ServiceGateway.ImageRightServiceReference.GetPages3xRequest request) {
            return base.Channel.GetPages3x(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page3x[] GetPages3x(ref string securityToken, string drawer, string filenumber, int docid, int pagenumber, string tempdin) {
            ServiceGateway.ImageRightServiceReference.GetPages3xRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPages3xRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPages3xRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawer = drawer;
            inValue.Body.filenumber = filenumber;
            inValue.Body.docid = docid;
            inValue.Body.pagenumber = pagenumber;
            inValue.Body.tempdin = tempdin;
            ServiceGateway.ImageRightServiceReference.GetPages3xResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPages3x(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPages3xResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPages3xResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPages3xAsync(ServiceGateway.ImageRightServiceReference.GetPages3xRequest request) {
            return base.Channel.GetPages3xAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPages3xResponse> GetPages3xAsync(string securityToken, string drawer, string filenumber, int docid, int pagenumber, string tempdin) {
            ServiceGateway.ImageRightServiceReference.GetPages3xRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPages3xRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPages3xRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawer = drawer;
            inValue.Body.filenumber = filenumber;
            inValue.Body.docid = docid;
            inValue.Body.pagenumber = pagenumber;
            inValue.Body.tempdin = tempdin;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPages3xAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocumentsLegacy(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest request) {
            return base.Channel.FindDocumentsLegacy(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page3x[] FindDocumentsLegacy(ref string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocumentsLegacy(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindDocumentsLegacyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocumentsLegacyAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest request) {
            return base.Channel.FindDocumentsLegacyAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyResponse> FindDocumentsLegacyAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsLegacyRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocumentsLegacyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetMappingResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMapping(ServiceGateway.ImageRightServiceReference.GetMappingRequest request) {
            return base.Channel.GetMapping(request);
        }
        
        public object GetMapping(ref string securityToken, object val, object val2, ServiceGateway.ImageRightServiceReference.MappingLookup lookupType) {
            ServiceGateway.ImageRightServiceReference.GetMappingRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMappingRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMappingRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.val = val;
            inValue.Body.val2 = val2;
            inValue.Body.lookupType = lookupType;
            ServiceGateway.ImageRightServiceReference.GetMappingResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMapping(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetMappingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMappingResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMappingAsync(ServiceGateway.ImageRightServiceReference.GetMappingRequest request) {
            return base.Channel.GetMappingAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMappingResponse> GetMappingAsync(string securityToken, object val, object val2, ServiceGateway.ImageRightServiceReference.MappingLookup lookupType) {
            ServiceGateway.ImageRightServiceReference.GetMappingRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMappingRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMappingRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.val = val;
            inValue.Body.val2 = val2;
            inValue.Body.lookupType = lookupType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMappingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AvailableConnections(ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest request) {
            return base.Channel.AvailableConnections(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ArrayOfString AvailableConnections() {
            ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest inValue = new ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequestBody();
            ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AvailableConnections(inValue);
            return retVal.Body.AvailableConnectionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AvailableConnectionsAsync(ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest request) {
            return base.Channel.AvailableConnectionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AvailableConnectionsResponse> AvailableConnectionsAsync() {
            ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest inValue = new ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AvailableConnectionsRequestBody();
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AvailableConnectionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSecurityId(ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest request) {
            return base.Channel.GetSecurityId(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.SecurityID GetSecurityId(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSecurityIdRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSecurityId(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetSecurityIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSecurityIdAsync(ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest request) {
            return base.Channel.GetSecurityIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityIdResponse> GetSecurityIdAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSecurityIdRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSecurityIdRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSecurityIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CurrentUserResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CurrentUser(ServiceGateway.ImageRightServiceReference.CurrentUserRequest request) {
            return base.Channel.CurrentUser(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.User CurrentUser(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.CurrentUserRequest inValue = new ServiceGateway.ImageRightServiceReference.CurrentUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CurrentUserRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.CurrentUserResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CurrentUser(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CurrentUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CurrentUserResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CurrentUserAsync(ServiceGateway.ImageRightServiceReference.CurrentUserRequest request) {
            return base.Channel.CurrentUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CurrentUserResponse> CurrentUserAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.CurrentUserRequest inValue = new ServiceGateway.ImageRightServiceReference.CurrentUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CurrentUserRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CurrentUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UserLoginResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UserLogin(ServiceGateway.ImageRightServiceReference.UserLoginRequest request) {
            return base.Channel.UserLogin(request);
        }
        
        public string UserLogin(string username, string password, string connName) {
            ServiceGateway.ImageRightServiceReference.UserLoginRequest inValue = new ServiceGateway.ImageRightServiceReference.UserLoginRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UserLoginRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.connName = connName;
            ServiceGateway.ImageRightServiceReference.UserLoginResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UserLogin(inValue);
            return retVal.Body.UserLoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLoginResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UserLoginAsync(ServiceGateway.ImageRightServiceReference.UserLoginRequest request) {
            return base.Channel.UserLoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLoginResponse> UserLoginAsync(string username, string password, string connName) {
            ServiceGateway.ImageRightServiceReference.UserLoginRequest inValue = new ServiceGateway.ImageRightServiceReference.UserLoginRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UserLoginRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            inValue.Body.connName = connName;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UserLoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ChangeUserPassword(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest request) {
            return base.Channel.ChangeUserPassword(request);
        }
        
        public void ChangeUserPassword(ref string securityToken, string newPassword) {
            ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest inValue = new ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.newPassword = newPassword;
            ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ChangeUserPassword(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.ChangeUserPasswordAsync(ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest request) {
            return base.Channel.ChangeUserPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.ChangeUserPasswordResponse> ChangeUserPasswordAsync(string securityToken, string newPassword) {
            ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest inValue = new ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.ChangeUserPasswordRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.newPassword = newPassword;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).ChangeUserPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UserLogoffResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UserLogoff(ServiceGateway.ImageRightServiceReference.UserLogoffRequest request) {
            return base.Channel.UserLogoff(request);
        }
        
        public bool UserLogoff(string securityToken) {
            ServiceGateway.ImageRightServiceReference.UserLogoffRequest inValue = new ServiceGateway.ImageRightServiceReference.UserLogoffRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UserLogoffRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.UserLogoffResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UserLogoff(inValue);
            return retVal.Body.UserLogoffResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLogoffResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UserLogoffAsync(ServiceGateway.ImageRightServiceReference.UserLogoffRequest request) {
            return base.Channel.UserLogoffAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UserLogoffResponse> UserLogoffAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.UserLogoffRequest inValue = new ServiceGateway.ImageRightServiceReference.UserLogoffRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UserLogoffRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UserLogoffAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockAllTasks(ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest request) {
            return base.Channel.UnlockAllTasks(request);
        }
        
        public void UnlockAllTasks(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockAllTasks(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockAllTasksAsync(ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest request) {
            return base.Channel.UnlockAllTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockAllTasksResponse> UnlockAllTasksAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockAllTasksRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockAllTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSecurityAccount(ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest request) {
            return base.Channel.GetSecurityAccount(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.SecurityAccount GetSecurityAccount(ref string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID securityId) {
            ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.securityId = securityId;
            ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSecurityAccount(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetSecurityAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetSecurityAccountAsync(ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest request) {
            return base.Channel.GetSecurityAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetSecurityAccountResponse> GetSecurityAccountAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID securityId) {
            ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest inValue = new ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetSecurityAccountRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.securityId = securityId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetSecurityAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.VersionResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.Version(ServiceGateway.ImageRightServiceReference.VersionRequest request) {
            return base.Channel.Version(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.WSVersionInfo Version() {
            ServiceGateway.ImageRightServiceReference.VersionRequest inValue = new ServiceGateway.ImageRightServiceReference.VersionRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.VersionRequestBody();
            ServiceGateway.ImageRightServiceReference.VersionResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).Version(inValue);
            return retVal.Body.VersionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.VersionResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.VersionAsync(ServiceGateway.ImageRightServiceReference.VersionRequest request) {
            return base.Channel.VersionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.VersionResponse> VersionAsync() {
            ServiceGateway.ImageRightServiceReference.VersionRequest inValue = new ServiceGateway.ImageRightServiceReference.VersionRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.VersionRequestBody();
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).VersionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetUserResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetUser(ServiceGateway.ImageRightServiceReference.GetUserRequest request) {
            return base.Channel.GetUser(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.User GetUser(ref string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID id) {
            ServiceGateway.ImageRightServiceReference.GetUserRequest inValue = new ServiceGateway.ImageRightServiceReference.GetUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetUserRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.id = id;
            ServiceGateway.ImageRightServiceReference.GetUserResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetUser(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetUserResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetUserAsync(ServiceGateway.ImageRightServiceReference.GetUserRequest request) {
            return base.Channel.GetUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetUserResponse> GetUserAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SecurityID id) {
            ServiceGateway.ImageRightServiceReference.GetUserRequest inValue = new ServiceGateway.ImageRightServiceReference.GetUserRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetUserRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.id = id;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.IsLoggedInResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.IsLoggedIn(ServiceGateway.ImageRightServiceReference.IsLoggedInRequest request) {
            return base.Channel.IsLoggedIn(request);
        }
        
        public bool IsLoggedIn(string securityToken) {
            ServiceGateway.ImageRightServiceReference.IsLoggedInRequest inValue = new ServiceGateway.ImageRightServiceReference.IsLoggedInRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.IsLoggedInRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.IsLoggedInResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).IsLoggedIn(inValue);
            return retVal.Body.IsLoggedInResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.IsLoggedInResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.IsLoggedInAsync(ServiceGateway.ImageRightServiceReference.IsLoggedInRequest request) {
            return base.Channel.IsLoggedInAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.IsLoggedInResponse> IsLoggedInAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.IsLoggedInRequest inValue = new ServiceGateway.ImageRightServiceReference.IsLoggedInRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.IsLoggedInRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).IsLoggedInAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindUserByNameResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindUserByName(ServiceGateway.ImageRightServiceReference.FindUserByNameRequest request) {
            return base.Channel.FindUserByName(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.User FindUserByName(ref string securityToken, string username) {
            ServiceGateway.ImageRightServiceReference.FindUserByNameRequest inValue = new ServiceGateway.ImageRightServiceReference.FindUserByNameRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindUserByNameRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.username = username;
            ServiceGateway.ImageRightServiceReference.FindUserByNameResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindUserByName(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindUserByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindUserByNameResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindUserByNameAsync(ServiceGateway.ImageRightServiceReference.FindUserByNameRequest request) {
            return base.Channel.FindUserByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindUserByNameResponse> FindUserByNameAsync(string securityToken, string username) {
            ServiceGateway.ImageRightServiceReference.FindUserByNameRequest inValue = new ServiceGateway.ImageRightServiceReference.FindUserByNameRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindUserByNameRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.username = username;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindUserByNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFolderByRef(ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest request) {
            return base.Channel.GetFolderByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Folder GetFolderByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.FolderRef folderRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFolderByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.folderRef = folderRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFolderByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFolderByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFolderByRefAsync(ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest request) {
            return base.Channel.GetFolderByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderByRefResponse> GetFolderByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FolderRef folderRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFolderByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFolderByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.folderRef = folderRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFolderByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDocumentByRef(ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest request) {
            return base.Channel.GetDocumentByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Document GetDocumentByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef docRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.docRef = docRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDocumentByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDocumentByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDocumentByRefAsync(ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest request) {
            return base.Channel.GetDocumentByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentByRefResponse> GetDocumentByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef docRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDocumentByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.docRef = docRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDocumentByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileByRef(ServiceGateway.ImageRightServiceReference.GetFileByRefRequest request) {
            return base.Channel.GetFileByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.File GetFileByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFileByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetFileByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileByRefAsync(ServiceGateway.ImageRightServiceReference.GetFileByRefRequest request) {
            return base.Channel.GetFileByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileByRefResponse> GetFileByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFileByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFile(ServiceGateway.ImageRightServiceReference.GetFileRequest request) {
            return base.Channel.GetFile(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.File GetFile(ref string securityToken, string drawerPath, string fileNumber1, string fileNumber2, string fileNumber3, string fileType, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawerPath = drawerPath;
            inValue.Body.fileNumber1 = fileNumber1;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileType = fileType;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileAsync(ServiceGateway.ImageRightServiceReference.GetFileRequest request) {
            return base.Channel.GetFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileResponse> GetFileAsync(string securityToken, string drawerPath, string fileNumber1, string fileNumber2, string fileNumber3, string fileType, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawerPath = drawerPath;
            inValue.Body.fileNumber1 = fileNumber1;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileType = fileType;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetContentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetContent(ServiceGateway.ImageRightServiceReference.GetContentRequest request) {
            return base.Channel.GetContent(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetContent(ref string securityToken, long objectId, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetContentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetContentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetContentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetContentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetContent(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetContentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetContentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetContentAsync(ServiceGateway.ImageRightServiceReference.GetContentRequest request) {
            return base.Channel.GetContentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetContentResponse> GetContentAsync(string securityToken, long objectId, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetContentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetContentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetContentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetContentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetObjectResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetObject(ServiceGateway.ImageRightServiceReference.GetObjectRequest request) {
            return base.Channel.GetObject(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TypedObjectData GetObject(ref string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetObjectRequest inValue = new ServiceGateway.ImageRightServiceReference.GetObjectRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetObjectRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            ServiceGateway.ImageRightServiceReference.GetObjectResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetObject(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetObjectResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetObjectAsync(ServiceGateway.ImageRightServiceReference.GetObjectRequest request) {
            return base.Channel.GetObjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectResponse> GetObjectAsync(string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetObjectRequest inValue = new ServiceGateway.ImageRightServiceReference.GetObjectRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetObjectRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetObjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetParentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetParent(ServiceGateway.ImageRightServiceReference.GetParentRequest request) {
            return base.Channel.GetParent(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TypedObjectData GetParent(ref string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetParentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetParentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetParentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            ServiceGateway.ImageRightServiceReference.GetParentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetParent(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetParentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetParentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetParentAsync(ServiceGateway.ImageRightServiceReference.GetParentRequest request) {
            return base.Channel.GetParentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetParentResponse> GetParentAsync(string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetParentRequest inValue = new ServiceGateway.ImageRightServiceReference.GetParentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetParentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetParentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributes(ServiceGateway.ImageRightServiceReference.GetAttributesRequest request) {
            return base.Channel.GetAttributes(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeData[] GetAttributes(ref string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            ServiceGateway.ImageRightServiceReference.GetAttributesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributes(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributesAsync(ServiceGateway.ImageRightServiceReference.GetAttributesRequest request) {
            return base.Channel.GetAttributesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributesResponse> GetAttributesAsync(string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttribute(ServiceGateway.ImageRightServiceReference.GetAttributeRequest request) {
            return base.Channel.GetAttribute(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeData GetAttribute(ref string securityToken, long objectId, long attributeId) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeId = attributeId;
            ServiceGateway.ImageRightServiceReference.GetAttributeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttribute(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRequest request) {
            return base.Channel.GetAttributeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeResponse> GetAttributeAsync(string securityToken, long objectId, long attributeId) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeId = attributeId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeByName(ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest request) {
            return base.Channel.GetAttributeByName(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeData GetAttributeByName(ref string securityToken, long objectId, string attributeName) {
            ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeName = attributeName;
            ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeByName(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributeByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeByNameAsync(ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest request) {
            return base.Channel.GetAttributeByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeByNameResponse> GetAttributeByNameAsync(string securityToken, long objectId, string attributeName) {
            ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeByNameRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeName = attributeName;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeByNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindDocumentsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocuments(ServiceGateway.ImageRightServiceReference.FindDocumentsRequest request) {
            return base.Channel.FindDocuments(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Document[] FindDocuments(ref string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationId = locationId;
            inValue.Body.fileTypeRef = fileTypeRef;
            inValue.Body.fileNumber = fileNumber;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileName = fileName;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            ServiceGateway.ImageRightServiceReference.FindDocumentsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocuments(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindDocumentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocumentsAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsRequest request) {
            return base.Channel.FindDocumentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsResponse> FindDocumentsAsync(string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationId = locationId;
            inValue.Body.fileTypeRef = fileTypeRef;
            inValue.Body.fileNumber = fileNumber;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileName = fileName;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocumentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocumentsEx(ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest request) {
            return base.Channel.FindDocumentsEx(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Document[] FindDocumentsEx(ref string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocumentsEx(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindDocumentsExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindDocumentsExAsync(ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest request) {
            return base.Channel.FindDocumentsExAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindDocumentsExResponse> FindDocumentsExAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool includeDeleted, bool includePageData) {
            ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest inValue = new ServiceGateway.ImageRightServiceReference.FindDocumentsExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindDocumentsExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.includeDeleted = includeDeleted;
            inValue.Body.includePageData = includePageData;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindDocumentsExAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindFilesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindFiles(ServiceGateway.ImageRightServiceReference.FindFilesRequest request) {
            return base.Channel.FindFiles(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.File[] FindFiles(ref string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.FindFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.FindFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationId = locationId;
            inValue.Body.fileTypeRef = fileTypeRef;
            inValue.Body.fileNumber = fileNumber;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileName = fileName;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.FindFilesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindFiles(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindFilesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindFilesAsync(ServiceGateway.ImageRightServiceReference.FindFilesRequest request) {
            return base.Channel.FindFilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesResponse> FindFilesAsync(string securityToken, long locationId, ServiceGateway.ImageRightServiceReference.FileTypeRef fileTypeRef, string fileNumber, string fileNumber2, string fileNumber3, string fileName, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.FindFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.FindFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationId = locationId;
            inValue.Body.fileTypeRef = fileTypeRef;
            inValue.Body.fileNumber = fileNumber;
            inValue.Body.fileNumber2 = fileNumber2;
            inValue.Body.fileNumber3 = fileNumber3;
            inValue.Body.fileName = fileName;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindFilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.FindFilesExResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindFilesEx(ServiceGateway.ImageRightServiceReference.FindFilesExRequest request) {
            return base.Channel.FindFilesEx(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.File[] FindFilesEx(ref string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.FindFilesExRequest inValue = new ServiceGateway.ImageRightServiceReference.FindFilesExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindFilesExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.FindFilesExResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindFilesEx(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.FindFilesExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesExResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.FindFilesExAsync(ServiceGateway.ImageRightServiceReference.FindFilesExRequest request) {
            return base.Channel.FindFilesExAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.FindFilesExResponse> FindFilesExAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, bool getContent, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.FindFilesExRequest inValue = new ServiceGateway.ImageRightServiceReference.FindFilesExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.FindFilesExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.getContent = getContent;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).FindFilesExAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPagesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPages(ServiceGateway.ImageRightServiceReference.GetPagesRequest request) {
            return base.Channel.GetPages(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page[] GetPages(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetPagesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPagesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPagesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetPagesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPages(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPagesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPagesAsync(ServiceGateway.ImageRightServiceReference.GetPagesRequest request) {
            return base.Channel.GetPagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagesResponse> GetPagesAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetPagesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPagesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPagesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPagesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFirstPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFirstPage(ServiceGateway.ImageRightServiceReference.GetFirstPageRequest request) {
            return base.Channel.GetFirstPage(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page GetFirstPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef) {
            ServiceGateway.ImageRightServiceReference.GetFirstPageRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFirstPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFirstPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            ServiceGateway.ImageRightServiceReference.GetFirstPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFirstPage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFirstPageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFirstPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFirstPageAsync(ServiceGateway.ImageRightServiceReference.GetFirstPageRequest request) {
            return base.Channel.GetFirstPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFirstPageResponse> GetFirstPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef) {
            ServiceGateway.ImageRightServiceReference.GetFirstPageRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFirstPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFirstPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFirstPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPageByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageByRef(ServiceGateway.ImageRightServiceReference.GetPageByRefRequest request) {
            return base.Channel.GetPageByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page GetPageByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.GetPageByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPageByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageByRefAsync(ServiceGateway.ImageRightServiceReference.GetPageByRefRequest request) {
            return base.Channel.GetPageByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageByRefResponse> GetPageByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAssociatedFiles(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest request) {
            return base.Channel.GetAssociatedFiles(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.File[] GetAssociatedFiles(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAssociatedFiles(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAssociatedFilesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAssociatedFilesAsync(ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest request) {
            return base.Channel.GetAssociatedFilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAssociatedFilesResponse> GetAssociatedFilesAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAssociatedFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAssociatedFilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileMarksResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileMarks(ServiceGateway.ImageRightServiceReference.GetFileMarksRequest request) {
            return base.Channel.GetFileMarks(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Mark[] GetFileMarks(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetFileMarksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileMarksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileMarksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            ServiceGateway.ImageRightServiceReference.GetFileMarksResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileMarks(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileMarksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarksResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileMarksAsync(ServiceGateway.ImageRightServiceReference.GetFileMarksRequest request) {
            return base.Channel.GetFileMarksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileMarksResponse> GetFileMarksAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetFileMarksRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileMarksRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileMarksRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileMarksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarksByFileRef(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest request) {
            return base.Channel.GetPageMarksByFileRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.PageMark[] GetPageMarksByFileRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarksByFileRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPageMarksByFileRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarksByFileRefAsync(ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest request) {
            return base.Channel.GetPageMarksByFileRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefResponse> GetPageMarksByFileRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef) {
            ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarksByFileRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarksByFileRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarksByPageRef(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest request) {
            return base.Channel.GetPageMarksByPageRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Mark[] GetPageMarksByPageRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarksByPageRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPageMarksByPageRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageMarksByPageRefAsync(ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest request) {
            return base.Channel.GetPageMarksByPageRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefResponse> GetPageMarksByPageRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageMarksByPageRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageMarksByPageRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageVersions(ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest request) {
            return base.Channel.GetPageVersions(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.PageVersion[] GetPageVersions(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageVersionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageVersions(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPageVersionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPageVersionsAsync(ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest request) {
            return base.Channel.GetPageVersionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPageVersionsResponse> GetPageVersionsAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPageVersionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPageVersionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPageVersionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPagePathToFile(ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest request) {
            return base.Channel.GetPagePathToFile(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetPagePathToFile(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPagePathToFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPagePathToFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPagePathToFileAsync(ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest request) {
            return base.Channel.GetPagePathToFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPagePathToFileResponse> GetPagePathToFileAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPagePathToFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPagePathToFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetObjectPathToFile(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest request) {
            return base.Channel.GetObjectPathToFile(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.TypedObjectData[] GetObjectPathToFile(ref string securityToken, long objectRef) {
            ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectRef = objectRef;
            ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetObjectPathToFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetObjectPathToFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetObjectPathToFileAsync(ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest request) {
            return base.Channel.GetObjectPathToFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetObjectPathToFileResponse> GetObjectPathToFileAsync(string securityToken, long objectRef) {
            ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetObjectPathToFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectRef = objectRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetObjectPathToFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetNotesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetNotes(ServiceGateway.ImageRightServiceReference.GetNotesRequest request) {
            return base.Channel.GetNotes(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Note[] GetNotes(ref string securityToken, long objectId, long collectionId, ServiceGateway.ImageRightServiceReference.NoteType noteType) {
            ServiceGateway.ImageRightServiceReference.GetNotesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetNotesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetNotesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.collectionId = collectionId;
            inValue.Body.noteType = noteType;
            ServiceGateway.ImageRightServiceReference.GetNotesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetNotes(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetNotesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetNotesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetNotesAsync(ServiceGateway.ImageRightServiceReference.GetNotesRequest request) {
            return base.Channel.GetNotesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetNotesResponse> GetNotesAsync(string securityToken, long objectId, long collectionId, ServiceGateway.ImageRightServiceReference.NoteType noteType) {
            ServiceGateway.ImageRightServiceReference.GetNotesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetNotesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetNotesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.collectionId = collectionId;
            inValue.Body.noteType = noteType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetNotesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.SetAttributesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.SetAttributes(ServiceGateway.ImageRightServiceReference.SetAttributesRequest request) {
            return base.Channel.SetAttributes(request);
        }
        
        public void SetAttributes(ref string securityToken, long objectId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributeData) {
            ServiceGateway.ImageRightServiceReference.SetAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.SetAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.SetAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeData = attributeData;
            ServiceGateway.ImageRightServiceReference.SetAttributesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).SetAttributes(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetAttributesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.SetAttributesAsync(ServiceGateway.ImageRightServiceReference.SetAttributesRequest request) {
            return base.Channel.SetAttributesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.SetAttributesResponse> SetAttributesAsync(string securityToken, long objectId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributeData) {
            ServiceGateway.ImageRightServiceReference.SetAttributesRequest inValue = new ServiceGateway.ImageRightServiceReference.SetAttributesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.SetAttributesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            inValue.Body.attributeData = attributeData;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).SetAttributesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateFile(ServiceGateway.ImageRightServiceReference.CreateFileRequest request) {
            return base.Channel.CreateFile(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.FileRef CreateFile(ref string securityToken, long drawerContainerId, ServiceGateway.ImageRightServiceReference.CreateFileData fileData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateFileRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawerContainerId = drawerContainerId;
            inValue.Body.fileData = fileData;
            inValue.Body.attributes = attributes;
            ServiceGateway.ImageRightServiceReference.CreateFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateFileAsync(ServiceGateway.ImageRightServiceReference.CreateFileRequest request) {
            return base.Channel.CreateFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFileResponse> CreateFileAsync(string securityToken, long drawerContainerId, ServiceGateway.ImageRightServiceReference.CreateFileData fileData, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateFileRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.drawerContainerId = drawerContainerId;
            inValue.Body.fileData = fileData;
            inValue.Body.attributes = attributes;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateObjectResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateObject(ServiceGateway.ImageRightServiceReference.CreateObjectRequest request) {
            return base.Channel.CreateObject(request);
        }
        
        public long CreateObject(ref string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateObjectRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateObjectRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateObjectRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.attributes = attributes;
            ServiceGateway.ImageRightServiceReference.CreateObjectResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateObject(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateObjectResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateObjectResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateObjectAsync(ServiceGateway.ImageRightServiceReference.CreateObjectRequest request) {
            return base.Channel.CreateObjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateObjectResponse> CreateObjectAsync(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateObjectRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateObjectRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateObjectRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.attributes = attributes;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateObjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateDocumentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateDocument(ServiceGateway.ImageRightServiceReference.CreateDocumentRequest request) {
            return base.Channel.CreateDocument(request);
        }
        
        public long CreateDocument(ref string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, long batchId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.batchId = batchId;
            inValue.Body.attributes = attributes;
            ServiceGateway.ImageRightServiceReference.CreateDocumentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateDocument(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateDocumentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateDocumentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateDocumentAsync(ServiceGateway.ImageRightServiceReference.CreateDocumentRequest request) {
            return base.Channel.CreateDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateDocumentResponse> CreateDocumentAsync(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, long batchId, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.batchId = batchId;
            inValue.Body.attributes = attributes;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateDocumentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.DeleteDocument(ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest request) {
            return base.Channel.DeleteDocument(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ResponseData DeleteDocument(ref string securityToken, long docId, bool killTasks) {
            ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.DeleteDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.docId = docId;
            inValue.Body.killTasks = killTasks;
            ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).DeleteDocument(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.DeleteDocumentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.DeleteDocumentAsync(ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest request) {
            return base.Channel.DeleteDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.DeleteDocumentResponse> DeleteDocumentAsync(string securityToken, long docId, bool killTasks) {
            ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.DeleteDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.DeleteDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.docId = docId;
            inValue.Body.killTasks = killTasks;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).DeleteDocumentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateFolderResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateFolder(ServiceGateway.ImageRightServiceReference.CreateFolderRequest request) {
            return base.Channel.CreateFolder(request);
        }
        
        public long CreateFolder(ref string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateFolderRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateFolderRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateFolderRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.attributes = attributes;
            ServiceGateway.ImageRightServiceReference.CreateFolderResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateFolder(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateFolderResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFolderResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateFolderAsync(ServiceGateway.ImageRightServiceReference.CreateFolderRequest request) {
            return base.Channel.CreateFolderAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateFolderResponse> CreateFolderAsync(string securityToken, long containerId, ServiceGateway.ImageRightServiceReference.CreateObjectData data, ServiceGateway.ImageRightServiceReference.AttributeData[] attributes) {
            ServiceGateway.ImageRightServiceReference.CreateFolderRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateFolderRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateFolderRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.containerId = containerId;
            inValue.Body.data = data;
            inValue.Body.attributes = attributes;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateFolderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AddPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddPage(ServiceGateway.ImageRightServiceReference.AddPageRequest request) {
            return base.Channel.AddPage(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page AddPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.AddPageRequest inValue = new ServiceGateway.ImageRightServiceReference.AddPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.description = description;
            inValue.Body.imageList = imageList;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            ServiceGateway.ImageRightServiceReference.AddPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddPage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.AddPageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddPageAsync(ServiceGateway.ImageRightServiceReference.AddPageRequest request) {
            return base.Channel.AddPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageResponse> AddPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.AddPageRequest inValue = new ServiceGateway.ImageRightServiceReference.AddPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.description = description;
            inValue.Body.imageList = imageList;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddConvertedPage(ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest request) {
            return base.Channel.AddConvertedPage(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page[] AddConvertedPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageConversionDO pageConversionDo, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest inValue = new ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddConvertedPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.pageConversionDo = pageConversionDo;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddConvertedPage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.AddConvertedPageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddConvertedPageAsync(ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest request) {
            return base.Channel.AddConvertedPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddConvertedPageResponse> AddConvertedPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageConversionDO pageConversionDo, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest inValue = new ServiceGateway.ImageRightServiceReference.AddConvertedPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddConvertedPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.pageConversionDo = pageConversionDo;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddConvertedPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.CreateBatchResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateBatch(ServiceGateway.ImageRightServiceReference.CreateBatchRequest request) {
            return base.Channel.CreateBatch(request);
        }
        
        public long CreateBatch(ref string securityToken, int applicationId) {
            ServiceGateway.ImageRightServiceReference.CreateBatchRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateBatchRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateBatchRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.applicationId = applicationId;
            ServiceGateway.ImageRightServiceReference.CreateBatchResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateBatch(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.CreateBatchResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateBatchResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.CreateBatchAsync(ServiceGateway.ImageRightServiceReference.CreateBatchRequest request) {
            return base.Channel.CreateBatchAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.CreateBatchResponse> CreateBatchAsync(string securityToken, int applicationId) {
            ServiceGateway.ImageRightServiceReference.CreateBatchRequest inValue = new ServiceGateway.ImageRightServiceReference.CreateBatchRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.CreateBatchRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.applicationId = applicationId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).CreateBatchAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.InsertPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.InsertPage(ServiceGateway.ImageRightServiceReference.InsertPageRequest request) {
            return base.Channel.InsertPage(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Page InsertPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageRef pageRef, bool after, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.InsertPageRequest inValue = new ServiceGateway.ImageRightServiceReference.InsertPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.InsertPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.pageRef = pageRef;
            inValue.Body.after = after;
            inValue.Body.description = description;
            inValue.Body.imageList = imageList;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            ServiceGateway.ImageRightServiceReference.InsertPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).InsertPage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.InsertPageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.InsertPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.InsertPageAsync(ServiceGateway.ImageRightServiceReference.InsertPageRequest request) {
            return base.Channel.InsertPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.InsertPageResponse> InsertPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentRef documentRef, ServiceGateway.ImageRightServiceReference.PageRef pageRef, bool after, string description, ServiceGateway.ImageRightServiceReference.ImageList imageList, long batchId, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.InsertPageRequest inValue = new ServiceGateway.ImageRightServiceReference.InsertPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.InsertPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.documentRef = documentRef;
            inValue.Body.pageRef = pageRef;
            inValue.Body.after = after;
            inValue.Body.description = description;
            inValue.Body.imageList = imageList;
            inValue.Body.batchId = batchId;
            inValue.Body.archiveImmediately = archiveImmediately;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).InsertPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.LockPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.LockPage(ServiceGateway.ImageRightServiceReference.LockPageRequest request) {
            return base.Channel.LockPage(request);
        }
        
        public int LockPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.LockPageRequest inValue = new ServiceGateway.ImageRightServiceReference.LockPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.LockPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.LockPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).LockPage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.LockPageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.LockPageAsync(ServiceGateway.ImageRightServiceReference.LockPageRequest request) {
            return base.Channel.LockPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.LockPageResponse> LockPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.LockPageRequest inValue = new ServiceGateway.ImageRightServiceReference.LockPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.LockPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).LockPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UnlockPageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockPage(ServiceGateway.ImageRightServiceReference.UnlockPageRequest request) {
            return base.Channel.UnlockPage(request);
        }
        
        public void UnlockPage(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.UnlockPageRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            ServiceGateway.ImageRightServiceReference.UnlockPageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockPage(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockPageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UnlockPageAsync(ServiceGateway.ImageRightServiceReference.UnlockPageRequest request) {
            return base.Channel.UnlockPageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UnlockPageResponse> UnlockPageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef) {
            ServiceGateway.ImageRightServiceReference.UnlockPageRequest inValue = new ServiceGateway.ImageRightServiceReference.UnlockPageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UnlockPageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UnlockPageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AddNoteResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddNote(ServiceGateway.ImageRightServiceReference.AddNoteRequest request) {
            return base.Channel.AddNote(request);
        }
        
        public void AddNote(ref string securityToken, long objId, string note) {
            ServiceGateway.ImageRightServiceReference.AddNoteRequest inValue = new ServiceGateway.ImageRightServiceReference.AddNoteRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddNoteRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objId = objId;
            inValue.Body.note = note;
            ServiceGateway.ImageRightServiceReference.AddNoteResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddNote(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddNoteResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddNoteAsync(ServiceGateway.ImageRightServiceReference.AddNoteRequest request) {
            return base.Channel.AddNoteAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddNoteResponse> AddNoteAsync(string securityToken, long objId, string note) {
            ServiceGateway.ImageRightServiceReference.AddNoteRequest inValue = new ServiceGateway.ImageRightServiceReference.AddNoteRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddNoteRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objId = objId;
            inValue.Body.note = note;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddNoteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AddFileMarkResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddFileMark(ServiceGateway.ImageRightServiceReference.AddFileMarkRequest request) {
            return base.Channel.AddFileMark(request);
        }
        
        public void AddFileMark(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.AddFileMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.AddFileMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddFileMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.markRef = markRef;
            ServiceGateway.ImageRightServiceReference.AddFileMarkResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddFileMark(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddFileMarkResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddFileMarkAsync(ServiceGateway.ImageRightServiceReference.AddFileMarkRequest request) {
            return base.Channel.AddFileMarkAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddFileMarkResponse> AddFileMarkAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.AddFileMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.AddFileMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddFileMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef = fileRef;
            inValue.Body.markRef = markRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddFileMarkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AddPageMarkResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddPageMark(ServiceGateway.ImageRightServiceReference.AddPageMarkRequest request) {
            return base.Channel.AddPageMark(request);
        }
        
        public void AddPageMark(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.AddPageMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.AddPageMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddPageMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.markRef = markRef;
            ServiceGateway.ImageRightServiceReference.AddPageMarkResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddPageMark(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageMarkResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AddPageMarkAsync(ServiceGateway.ImageRightServiceReference.AddPageMarkRequest request) {
            return base.Channel.AddPageMarkAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AddPageMarkResponse> AddPageMarkAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.AddPageMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.AddPageMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AddPageMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.markRef = markRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AddPageMarkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RemovePageMark(ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest request) {
            return base.Channel.RemovePageMark(request);
        }
        
        public void RemovePageMark(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RemovePageMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.markRef = markRef;
            ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RemovePageMark(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RemovePageMarkAsync(ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest request) {
            return base.Channel.RemovePageMarkAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemovePageMarkResponse> RemovePageMarkAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.MarkRef markRef) {
            ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest inValue = new ServiceGateway.ImageRightServiceReference.RemovePageMarkRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RemovePageMarkRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.markRef = markRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RemovePageMarkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.AssociateFilesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AssociateFiles(ServiceGateway.ImageRightServiceReference.AssociateFilesRequest request) {
            return base.Channel.AssociateFiles(request);
        }
        
        public void AssociateFiles(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            ServiceGateway.ImageRightServiceReference.AssociateFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.AssociateFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AssociateFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef1 = fileRef1;
            inValue.Body.fileRef2 = fileRef2;
            inValue.Body.associationOptions = associationOptions;
            ServiceGateway.ImageRightServiceReference.AssociateFilesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AssociateFiles(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AssociateFilesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.AssociateFilesAsync(ServiceGateway.ImageRightServiceReference.AssociateFilesRequest request) {
            return base.Channel.AssociateFilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.AssociateFilesResponse> AssociateFilesAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            ServiceGateway.ImageRightServiceReference.AssociateFilesRequest inValue = new ServiceGateway.ImageRightServiceReference.AssociateFilesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.AssociateFilesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef1 = fileRef1;
            inValue.Body.fileRef2 = fileRef2;
            inValue.Body.associationOptions = associationOptions;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).AssociateFilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RemoveFileAssociation(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest request) {
            return base.Channel.RemoveFileAssociation(request);
        }
        
        public void RemoveFileAssociation(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest inValue = new ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef1 = fileRef1;
            inValue.Body.fileRef2 = fileRef2;
            inValue.Body.associationOptions = associationOptions;
            ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RemoveFileAssociation(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.RemoveFileAssociationAsync(ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest request) {
            return base.Channel.RemoveFileAssociationAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.RemoveFileAssociationResponse> RemoveFileAssociationAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileRef fileRef1, ServiceGateway.ImageRightServiceReference.FileRef fileRef2, ServiceGateway.ImageRightServiceReference.AssociateOptions associationOptions) {
            ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest inValue = new ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.RemoveFileAssociationRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fileRef1 = fileRef1;
            inValue.Body.fileRef2 = fileRef2;
            inValue.Body.associationOptions = associationOptions;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).RemoveFileAssociationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdateFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFile(ServiceGateway.ImageRightServiceReference.UpdateFileRequest request) {
            return base.Channel.UpdateFile(request);
        }
        
        public void UpdateFile(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFileRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            ServiceGateway.ImageRightServiceReference.UpdateFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFile(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFileAsync(ServiceGateway.ImageRightServiceReference.UpdateFileRequest request) {
            return base.Channel.UpdateFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileResponse> UpdateFileAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFileRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFileInfo(ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest request) {
            return base.Channel.UpdateFileInfo(request);
        }
        
        public void UpdateFileInfo(ref string securityToken, ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFileInfo(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFileInfoAsync(ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest request) {
            return base.Channel.UpdateFileInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFileInfoResponse> UpdateFileInfoAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FileInfoUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFileInfoRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFileInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdateFolderResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFolder(ServiceGateway.ImageRightServiceReference.UpdateFolderRequest request) {
            return base.Channel.UpdateFolder(request);
        }
        
        public void UpdateFolder(ref string securityToken, ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFolderRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFolderRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFolderRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            ServiceGateway.ImageRightServiceReference.UpdateFolderResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFolder(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFolderResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateFolderAsync(ServiceGateway.ImageRightServiceReference.UpdateFolderRequest request) {
            return base.Channel.UpdateFolderAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateFolderResponse> UpdateFolderAsync(string securityToken, ServiceGateway.ImageRightServiceReference.FolderUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateFolderRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateFolderRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateFolderRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateFolderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateDocument(ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest request) {
            return base.Channel.UpdateDocument(request);
        }
        
        public void UpdateDocument(ref string securityToken, ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateDocument(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdateDocumentAsync(ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest request) {
            return base.Channel.UpdateDocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdateDocumentResponse> UpdateDocumentAsync(string securityToken, ServiceGateway.ImageRightServiceReference.DocumentUpdateRequest[] updateRequests) {
            ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdateDocumentRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdateDocumentRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.updateRequests = updateRequests;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdateDocumentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdatePageDescription(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest request) {
            return base.Channel.UpdatePageDescription(request);
        }
        
        public void UpdatePageDescription(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageReference, string newDescription) {
            ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageReference = pageReference;
            inValue.Body.newDescription = newDescription;
            ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdatePageDescription(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdatePageDescriptionAsync(ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest request) {
            return base.Channel.UpdatePageDescriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionResponse> UpdatePageDescriptionAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageReference, string newDescription) {
            ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdatePageDescriptionRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageReference = pageReference;
            inValue.Body.newDescription = newDescription;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdatePageDescriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.UpdatePageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdatePage(ServiceGateway.ImageRightServiceReference.UpdatePageRequest request) {
            return base.Channel.UpdatePage(request);
        }
        
        public void UpdatePage(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.Image[] images, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.UpdatePageRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdatePageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdatePageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.images = images;
            inValue.Body.archiveImmediately = archiveImmediately;
            ServiceGateway.ImageRightServiceReference.UpdatePageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdatePage(inValue);
            securityToken = retVal.Body.securityToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.UpdatePageAsync(ServiceGateway.ImageRightServiceReference.UpdatePageRequest request) {
            return base.Channel.UpdatePageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.UpdatePageResponse> UpdatePageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, ServiceGateway.ImageRightServiceReference.Image[] images, bool archiveImmediately) {
            ServiceGateway.ImageRightServiceReference.UpdatePageRequest inValue = new ServiceGateway.ImageRightServiceReference.UpdatePageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.UpdatePageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.images = images;
            inValue.Body.archiveImmediately = archiveImmediately;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).UpdatePageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetPermissionsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPermissions(ServiceGateway.ImageRightServiceReference.GetPermissionsRequest request) {
            return base.Channel.GetPermissions(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AccountPermissions[] GetPermissions(ref string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetPermissionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPermissionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPermissionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            ServiceGateway.ImageRightServiceReference.GetPermissionsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPermissions(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetPermissionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPermissionsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetPermissionsAsync(ServiceGateway.ImageRightServiceReference.GetPermissionsRequest request) {
            return base.Channel.GetPermissionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetPermissionsResponse> GetPermissionsAsync(string securityToken, long objectId) {
            ServiceGateway.ImageRightServiceReference.GetPermissionsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetPermissionsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetPermissionsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.objectId = objectId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetPermissionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetImageResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetImage(ServiceGateway.ImageRightServiceReference.GetImageRequest request) {
            return base.Channel.GetImage(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ImageList GetImage(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, int version, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetImageRequest inValue = new ServiceGateway.ImageRightServiceReference.GetImageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetImageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.version = version;
            inValue.Body.outputType = outputType;
            ServiceGateway.ImageRightServiceReference.GetImageResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetImage(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetImageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetImageResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetImageAsync(ServiceGateway.ImageRightServiceReference.GetImageRequest request) {
            return base.Channel.GetImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetImageResponse> GetImageAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef pageRef, int version, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetImageRequest inValue = new ServiceGateway.ImageRightServiceReference.GetImageRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetImageRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRef = pageRef;
            inValue.Body.version = version;
            inValue.Body.outputType = outputType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFileEx(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest request) {
            return base.Channel.GetMultiPageImageFileEx(request);
        }
        
        public byte[] GetMultiPageImageFileEx(ref string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.outputType = outputType;
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFileEx(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetMultiPageImageFileExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFileExAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest request) {
            return base.Channel.GetMultiPageImageFileExAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExResponse> GetMultiPageImageFileExAsync(string securityToken, ServiceGateway.ImageRightServiceReference.SearchConditionLists searchConditions, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileExRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.searchConditions = searchConditions;
            inValue.Body.outputType = outputType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFileExAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFile(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest request) {
            return base.Channel.GetMultiPageImageFile(request);
        }
        
        public byte[] GetMultiPageImageFile(ref string securityToken, ServiceGateway.ImageRightServiceReference.Image[] fImages, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fImages = fImages;
            inValue.Body.outputType = outputType;
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFile(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetMultiPageImageFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFileAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest request) {
            return base.Channel.GetMultiPageImageFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileResponse> GetMultiPageImageFileAsync(string securityToken, ServiceGateway.ImageRightServiceReference.Image[] fImages, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.fImages = fImages;
            inValue.Body.outputType = outputType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFileUsingPages(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest request) {
            return base.Channel.GetMultiPageImageFileUsingPages(request);
        }
        
        public byte[] GetMultiPageImageFileUsingPages(ref string securityToken, ServiceGateway.ImageRightServiceReference.PageRef[] pageRefs, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRefs = pageRefs;
            inValue.Body.outputType = outputType;
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFileUsingPages(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetMultiPageImageFileUsingPagesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetMultiPageImageFileUsingPagesAsync(ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest request) {
            return base.Channel.GetMultiPageImageFileUsingPagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesResponse> GetMultiPageImageFileUsingPagesAsync(string securityToken, ServiceGateway.ImageRightServiceReference.PageRef[] pageRefs, ServiceGateway.ImageRightServiceReference.OutputTypes outputType) {
            ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetMultiPageImageFileUsingPagesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.pageRefs = pageRefs;
            inValue.Body.outputType = outputType;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetMultiPageImageFileUsingPagesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAllDocTypes(ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest request) {
            return base.Channel.GetAllDocTypes(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.DocumentType[] GetAllDocTypes(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAllDocTypes(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAllDocTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAllDocTypesAsync(ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest request) {
            return base.Channel.GetAllDocTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAllDocTypesResponse> GetAllDocTypesAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAllDocTypesRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAllDocTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLocationByRef(ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest request) {
            return base.Channel.GetLocationByRef(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Location GetLocationByRef(ref string securityToken, ServiceGateway.ImageRightServiceReference.LocationRef locationRef) {
            ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLocationByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationRef = locationRef;
            ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLocationByRef(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetLocationByRefResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLocationByRefAsync(ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest request) {
            return base.Channel.GetLocationByRefAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationByRefResponse> GetLocationByRefAsync(string securityToken, ServiceGateway.ImageRightServiceReference.LocationRef locationRef) {
            ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLocationByRefRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLocationByRefRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.locationRef = locationRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLocationByRefAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetTypeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetType(ServiceGateway.ImageRightServiceReference.GetTypeRequest request) {
            return base.Channel.GetType(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetType(ref string securityToken, long typeId) {
            ServiceGateway.ImageRightServiceReference.GetTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            ServiceGateway.ImageRightServiceReference.GetTypeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetType(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetTypeAsync(ServiceGateway.ImageRightServiceReference.GetTypeRequest request) {
            return base.Channel.GetTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetTypeResponse> GetTypeAsync(string securityToken, long typeId) {
            ServiceGateway.ImageRightServiceReference.GetTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawerType(ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest request) {
            return base.Channel.GetDrawerType(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDrawerType(ref string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawerType(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDrawerTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawerTypeAsync(ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest request) {
            return base.Channel.GetDrawerTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawerTypeResponse> GetDrawerTypeAsync(string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawerTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawerTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFileTypeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileType(ServiceGateway.ImageRightServiceReference.GetFileTypeRequest request) {
            return base.Channel.GetFileType(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFileType(ref string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetFileTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            ServiceGateway.ImageRightServiceReference.GetFileTypeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileType(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFileTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTypeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFileTypeAsync(ServiceGateway.ImageRightServiceReference.GetFileTypeRequest request) {
            return base.Channel.GetFileTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFileTypeResponse> GetFileTypeAsync(string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetFileTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFileTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFileTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFileTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFolderType(ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest request) {
            return base.Channel.GetFolderType(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetFolderType(ref string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFolderTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFolderType(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetFolderTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetFolderTypeAsync(ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest request) {
            return base.Channel.GetFolderTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetFolderTypeResponse> GetFolderTypeAsync(string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetFolderTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetFolderTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetFolderTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDocumentType(ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest request) {
            return base.Channel.GetDocumentType(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.ObjectTypeData GetDocumentType(ref string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDocumentType(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDocumentTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDocumentTypeAsync(ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest request) {
            return base.Channel.GetDocumentTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDocumentTypeResponse> GetDocumentTypeAsync(string securityToken, string programmaticname) {
            ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDocumentTypeRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.programmaticname = programmaticname;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDocumentTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeDefs(ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest request) {
            return base.Channel.GetAttributeDefs(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeDef[] GetAttributeDefs(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeDefs(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributeDefsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeDefsAsync(ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest request) {
            return base.Channel.GetAttributeDefsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeDefsResponse> GetAttributeDefsAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeDefsRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeDefsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeRules(ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest request) {
            return base.Channel.GetAttributeRules(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeRule[] GetAttributeRules(ref string securityToken, long typeId) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeRules(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributeRulesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeRulesAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest request) {
            return base.Channel.GetAttributeRulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRulesResponse> GetAttributeRulesAsync(string securityToken, long typeId) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRulesRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeRulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeRule(ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest request) {
            return base.Channel.GetAttributeRule(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.AttributeRule GetAttributeRule(ref string securityToken, long typeId, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            inValue.Body.attributeRef = attributeRef;
            ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeRule(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetAttributeRuleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetAttributeRuleAsync(ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest request) {
            return base.Channel.GetAttributeRuleAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetAttributeRuleResponse> GetAttributeRuleAsync(string securityToken, long typeId, ServiceGateway.ImageRightServiceReference.AttributeRef attributeRef) {
            ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest inValue = new ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetAttributeRuleRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.typeId = typeId;
            inValue.Body.attributeRef = attributeRef;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetAttributeRuleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDevicesResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDevices(ServiceGateway.ImageRightServiceReference.GetDevicesRequest request) {
            return base.Channel.GetDevices(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Device[] GetDevices(ref string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetDevicesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDevicesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDevicesRequestBody();
            inValue.Body.securityToken = securityToken;
            ServiceGateway.ImageRightServiceReference.GetDevicesResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDevices(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDevicesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDevicesResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDevicesAsync(ServiceGateway.ImageRightServiceReference.GetDevicesRequest request) {
            return base.Channel.GetDevicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDevicesResponse> GetDevicesAsync(string securityToken) {
            ServiceGateway.ImageRightServiceReference.GetDevicesRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDevicesRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDevicesRequestBody();
            inValue.Body.securityToken = securityToken;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDevicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetLocationsResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLocations(ServiceGateway.ImageRightServiceReference.GetLocationsRequest request) {
            return base.Channel.GetLocations(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Location[] GetLocations(ref string securityToken, long parentLocationId) {
            ServiceGateway.ImageRightServiceReference.GetLocationsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLocationsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLocationsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.parentLocationId = parentLocationId;
            ServiceGateway.ImageRightServiceReference.GetLocationsResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLocations(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetLocationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationsResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetLocationsAsync(ServiceGateway.ImageRightServiceReference.GetLocationsRequest request) {
            return base.Channel.GetLocationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetLocationsResponse> GetLocationsAsync(string securityToken, long parentLocationId) {
            ServiceGateway.ImageRightServiceReference.GetLocationsRequest inValue = new ServiceGateway.ImageRightServiceReference.GetLocationsRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetLocationsRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.parentLocationId = parentLocationId;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetLocationsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceGateway.ImageRightServiceReference.GetDrawersResponse ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawers(ServiceGateway.ImageRightServiceReference.GetDrawersRequest request) {
            return base.Channel.GetDrawers(request);
        }
        
        public ServiceGateway.ImageRightServiceReference.Drawer[] GetDrawers(ref string securityToken, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetDrawersRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawersRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawersRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.includeDeleted = includeDeleted;
            ServiceGateway.ImageRightServiceReference.GetDrawersResponse retVal = ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawers(inValue);
            securityToken = retVal.Body.securityToken;
            return retVal.Body.GetDrawersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersResponse> ServiceGateway.ImageRightServiceReference.IRWebService40Soap.GetDrawersAsync(ServiceGateway.ImageRightServiceReference.GetDrawersRequest request) {
            return base.Channel.GetDrawersAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceGateway.ImageRightServiceReference.GetDrawersResponse> GetDrawersAsync(string securityToken, bool includeDeleted) {
            ServiceGateway.ImageRightServiceReference.GetDrawersRequest inValue = new ServiceGateway.ImageRightServiceReference.GetDrawersRequest();
            inValue.Body = new ServiceGateway.ImageRightServiceReference.GetDrawersRequestBody();
            inValue.Body.securityToken = securityToken;
            inValue.Body.includeDeleted = includeDeleted;
            return ((ServiceGateway.ImageRightServiceReference.IRWebService40Soap)(this)).GetDrawersAsync(inValue);
        }
    }
}
