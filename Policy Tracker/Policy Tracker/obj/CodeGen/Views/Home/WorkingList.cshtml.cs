#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DevExpress.Data.PivotGrid;
    using DevExpress.Utils;
    using DevExpress.Web;
    using DevExpress.Web.ASPxHtmlEditor;
    using DevExpress.Web.ASPxPivotGrid;
    using DevExpress.Web.ASPxRichEdit;
    using DevExpress.Web.ASPxScheduler;
    using DevExpress.Web.ASPxSpellChecker;
    using DevExpress.Web.ASPxSpreadsheet;
    using DevExpress.Web.ASPxThemes;
    using DevExpress.Web.Mvc;
    using DevExpress.Web.Mvc.UI;
    using DevExpress.XtraCharts;
    using DevExpress.XtraCharts.Web;
    using DevExpress.XtraPivotGrid;
    using DevExpress.XtraReports;
    using DevExpress.XtraReports.UI;
    using DevExpress.XtraReports.Web;
    using DevExpress.XtraReports.Web.DocumentViewer;
    using DevExpress.XtraRichEdit;
    using DevExpress.XtraScheduler;
    using DevExpress.XtraScheduler.Native;
    using PolicyTracker.BusinessServices;
    using PolicyTracker.BusinessServices.Security;
    using PolicyTracker.HtmlHelpers;
    using PolicyTracker.Utilities;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Home/WorkingList.cshtml")]
    public partial class _Views_Home_WorkingList_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_Home_WorkingList_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n    function WLQuickAssign(s, e) {\r\n        if (e.item.name == \"QuickAssign\") " +
"{\r\n            var grid = ASPxClientControl.GetControlCollection().GetByName(\'Wo" +
"rkingListGrid\');\r\n            grid.SetFocusedRowIndex(e.elementIndex);\r\n\r\n      " +
"      var key = $(\"#WLCurrentKey\").val();\r\n            if (key != null) {\r\n     " +
"           ora.Dialog.ActionForm(\r\n                {\r\n                    id: \'Q" +
"uickAssign_dg\',\r\n                    title: \'Assign Risk to Underwriter\',\r\n     " +
"               form: { id: \"QuickAssignForm\", container: \"QuickAssign_dg\", submi" +
"tURL: \"/policytracker/Home/QuickAssign\", grid: \"\" },\r\n                    url: \"" +
"/policytracker/Home/QuickAssign/\" + key,\r\n                    modal: true, autoF" +
"ocus: \"UnderwriterId\",\r\n                    WritePermissions: true,\r\n           " +
"         HideSaveButton: true,\r\n                    CustomFormSubmit: true,\r\n   " +
"                 Type: ora.Dialog.ActionFormSizes.Small,\r\n                })\r\n  " +
"          }\r\n\r\n        }\r\n    };\r\n\r\n    $(document).ready(function () {\r\n       " +
" $(\'#WorkingListPresetsd_dg\').dialog({\r\n            position: { my: \"center\", at" +
": \"center\", of: window },\r\n            modal: true,\r\n            autoOpen: false" +
",\r\n            minWidth: 700,\r\n            width: 700,\r\n            minHeight: 5" +
"00,\r\n            buttons: {\r\n                Close: function () {\r\n             " +
"       $(\'#WorkingListPresetsd_dg\').dialog(\"close\");\r\n                }\r\n       " +
"     },\r\n        })\r\n\r\n        $(\'#WorkingListPresets\').click(function () {\r\n   " +
"         $(\'#WorkingListPresetsd_dg\').dialog(\'open\');\r\n        })\r\n\r\n        $(\"" +
"#exportWorkingList\").click(function () {\r\n            var grid = ASPxClientContr" +
"ol.GetControlCollection().GetByName(\'WorkingListGrid\');\r\n            var actionP" +
"arams = $(\"form#exptWorkingList\").attr(\"action\").split(\"?filterExp=\");\r\n        " +
"    actionParams[1] = grid.cpFilterExpression;\r\n            $(\"form#exptWorkingL" +
"ist\").attr(\"action\", actionParams.join(\"?filterExp=\"));\r\n            $(\"form#exp" +
"tWorkingList\").submit();\r\n        })\r\n\r\n        $(\"#WLConfigureGrid\").click(func" +
"tion () {\r\n            ora.Dialog.SimpleAjax({\r\n                Id: \'GridConfig_" +
"dg\', Title: \'Customize Grid Configuration\',\r\n                Url: \'/policytracke" +
"r/Home/GridConfig\',\r\n            });\r\n        });\r\n\r\n        $(\"#ResetWorkingLis" +
"t\").click(function () {\r\n            var grid = ASPxClientControl.GetControlColl" +
"ection().GetByName(\'WorkingListGrid\');\r\n            $(\'input:radio\').removeAttr(" +
"\'checked\');\r\n            $(\"#WLMyFilter\").val(\"\");\r\n            grid.ClearFilter" +
"();\r\n        });\r\n\r\n        $(\"#WLRefresh\").click(function () {\r\n            var" +
" grid = ASPxClientControl.GetControlCollection().GetByName(\'WorkingListGrid\');\r\n" +
"            grid.ApplyFilter(grid.cpFilterExpression);\r\n        });\r\n\r\n        $" +
"(\"#GridPerformCallback\").click(function () {\r\n            grid = ASPxClientContr" +
"ol.GetControlCollection().GetByName(\'WorkingListGrid\');\r\n            grid.Perfor" +
"mCallback();\r\n        });\r\n\r\n        $(\"#WLMyList\").click(function () {\r\n       " +
"     $(\"#WLMyFilter\").val(\"\");\r\n            grid = ASPxClientControl.GetControlC" +
"ollection().GetByName(\'WorkingListGrid\');\r\n            $(\'input:radio\').removeAt" +
"tr(\'checked\');\r\n\r\n            var isUA = $(\"#UserIsUA\").val();\r\n\r\n            va" +
"r date = new Date();\r\n            var firstDay = new Date(date.getFullYear(), da" +
"te.getMonth(), 1);\r\n            var lastDay = new Date(date.getFullYear(), date." +
"getMonth() + 1, 0);\r\n\r\n            var filterExp = \"\";\r\n            if (isUA == " +
"\"True\") {\r\n                filterExp = \"Contains([UA], \'");

            
            #line 90 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral("\') \";\r\n            } else {\r\n                filterExp = \"Contains([UW], \'");

            
            #line 92 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral("\') \";\r\n            }\r\n\r\n            filterExp += \" AND [EffectiveDate] >= #\" + or" +
"a.UI.Utils.GetFormattedDate(firstDay) + \"#\";\r\n            filterExp += \" AND [Ef" +
"fectiveDate] <= #\" + ora.UI.Utils.GetFormattedDate(lastDay) + \"#\";\r\n            " +
"grid.ApplyFilter(filterExp);\r\n            //grid.GetRowValues(s.GetFocusedRowInd" +
"ex(), \'RiskId;Name\', GetSelectedFieldValuesCallback)\r\n        });\r\n\r\n        $(\"" +
"#WLSaveFilter\").click(function () {\r\n            grid = ASPxClientControl.GetCon" +
"trolCollection().GetByName(\'WorkingListGrid\');\r\n            var filterExp = enco" +
"deURIComponent(grid.cpFilterExpression)\r\n\r\n            if (grid.cpFilterExpressi" +
"on == \"\") {\r\n                ora.Dialog.Simple({ title: \"Oops...\", message: \"No " +
"filters are currently applied\" });\r\n            } else {\r\n                ora.Di" +
"alog.ActionForm({\r\n                    id: \'UserFilter_dg\',\r\n                   " +
" title: \'Save Filter Settings\',\r\n                    form: {\r\n                  " +
"      id: \"UserFilterForm\", container: \"UserFilter_dg\", dialog: \"UserFilter_dg\"," +
" submitURL: \"/policytracker/Home/SaveFilterSettings\", grid: \"\",\r\n               " +
"         successCallback: function (data) {\r\n                            ora.Aja" +
"x.Ajax({\r\n                                url: \"policytracker/Home/UserFilters\"," +
"\r\n                                dataType: \"HTML\", type: \"GET\",\r\n              " +
"                  successCallback: function (data) { $(\"#UserFilterPanel\").html(" +
"data); }\r\n                            });\r\n                        }\r\n          " +
"          },\r\n                    url: \"/policytracker/Home/SaveFilterSettings?e" +
"xp=\" + filterExp,\r\n                    modal: true, autoFocus: \"Name\",\r\n        " +
"            WritePermissions: true,\r\n                    HideSaveButton: true,\r\n" +
"                    Type: ora.Dialog.ActionFormSizes.Medium,\r\n                })" +
";\r\n            }\r\n        });\r\n\r\n        $(\"#WLEditRisk\").click(function () {\r\n " +
"           var key = $(\"#WLCurrentKey\").val();\r\n            if (key != null) {\r\n" +
"                ora.Risk.RiskEdit(key);\r\n            }\r\n        });\r\n\r\n        $" +
"(\"#WLAddNewRisk\").click(function () {\r\n            ora.Risk.NewRisk();\r\n        " +
"});\r\n\r\n        $(\"#WLDeleteRisk\").click(function () {\r\n            var riskId = " +
"$(\"#WLCurrentKey\").val();\r\n            if (riskId != null) {\r\n                or" +
"a.Dialog.Confirm({\r\n                    message: \"Are you sure you want to delet" +
"e risk \" + riskId + \"?\",\r\n                    AcceptCallback: function () {\r\n\r\n " +
"                       ora.Ajax.Ajax({\r\n                            url: \"/polic" +
"ytracker/Policy/DeleteRisk/\" + riskId,\r\n                            dataType: \"H" +
"TML\", type: \"DELETE\",\r\n                            successCallback: function (da" +
"ta) { $(\"#WLRefresh\").click(); }\r\n                        });\r\n                 " +
"   }\r\n                });\r\n            }\r\n        });\r\n\r\n        $(\"#WLShowing\")" +
".change(function () { $(\"#ApplyExternalFilters\").click(); });\r\n\r\n        $(\"#WLA" +
"pplyOtherFilter\").click(function () {\r\n            var grid = ASPxClientControl." +
"GetControlCollection().GetByName(\'WorkingListGrid\');\r\n            var filterExp " +
"= grid.cpFilterExpression;\r\n            var filterToRemove = [];\r\n\r\n            " +
"var lowerEffective = new Date($(\"#LowerEffectiveDate\").val());\r\n            var " +
"upperEffective = new Date($(\"#UpperEffectiveDate\").val());\r\n            var rene" +
"walUW = $(\"#WLRenewalUWFilter option:selected\").text();\r\n\r\n            var prope" +
"rtyFilters = filterExp.split(/\\sAND\\s|\\sAnd\\s/);\r\n\r\n            for (var i = 0; " +
"i < propertyFilters.length; i++) {\r\n                if (propertyFilters[i] === \'" +
"undefined\') {\r\n                    propertyFilters.splice(i);\r\n                }" +
"\r\n            }\r\n\r\n            if (lowerEffective != \"Invalid Date\" && upperEffe" +
"ctive != \"Invalid Date\") {\r\n                for (var i = propertyFilters.length " +
"- 1; i > 0; i--) {\r\n                    if (propertyFilters[i].indexOf(\"Effectiv" +
"eDate\") > -1) {\r\n                        propertyFilters.splice(i, 1);\r\n        " +
"            }\r\n                }\r\n\r\n                propertyFilters.push(\"[Effec" +
"tiveDate] >= #\" + ora.UI.Utils.GetFormattedDate(lowerEffective) + \"#\");\r\n       " +
"         propertyFilters.push(\"[EffectiveDate] <= #\" + ora.UI.Utils.GetFormatted" +
"Date(upperEffective) + \"#\");\r\n            }\r\n\r\n            if (renewalUW) {\r\n   " +
"             for (var i = propertyFilters.length - 1; i > 0; i--) {\r\n           " +
"         if (propertyFilters[i].indexOf(\"RUW\") > -1) {\r\n                        " +
"propertyFilters.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n     " +
"           propertyFilters.push(\"Contains([RUW], \'\" + renewalUW + \"\')\");\r\n      " +
"      }\r\n\r\n            filterExp = \'\';\r\n\r\n            for (var i = 0; i < proper" +
"tyFilters.length; i++) {\r\n                if (filterExp.length)\r\n               " +
"     filterExp += \" AND \"\r\n                filterExp += propertyFilters[i];\r\n   " +
"         }\r\n\r\n            grid.ApplyFilter(filterExp);\r\n        });\r\n\r\n        $" +
"(\"input:radio\").change(function () {\r\n            var grid = ASPxClientControl.G" +
"etControlCollection().GetByName(\'WorkingListGrid\');\r\n            var filterExp =" +
" \"\";\r\n            $(\"#ViewDescriptions > div\").hide();\r\n            $(\"#\" + this" +
".value).show();\r\n            $(\"#WLMyFilter\").val(\"\");\r\n\r\n            if (this.v" +
"alue == \"AllMyRenewals\") {\r\n                filterExp = \"[IsRenewal] = True AND " +
"Contains([UW], \'");

            
            #line 217 "..\..\Views\Home\WorkingList.cshtml"
                                                               Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral("\')\";\r\n                grid.ApplyFilter(filterExp);\r\n            }\r\n\r\n            " +
"if (this.value == \"InForceRenewals\") {\r\n                filterExp = \"Contains([U" +
"W], \'");

            
            #line 222 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') AND Contains([Status], 'Issued') AND [IsRenewal] = True"";
                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""UnResolvedRenewals"") {
                var date = new Date();
                filterExp = ""Contains([UW], '");

            
            #line 228 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') AND [IsRenewal] = True AND Not Contains([Status], 'Lost,Issued,Declined')"";
                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""UnResolvedProspects"") {
                var date = new Date();
                filterExp = ""Contains([UW], '");

            
            #line 234 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') AND Contains([Status], 'Submission,Quote') AND [EffectiveDate] < #"" + ora.UI.Utils.GetFormattedDate(date) + ""#"";
                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""PoliciesExpiringInNinety"") {
                //Exp > today and less than 90 days from today
                var date = new Date();
                var maxDate = new Date();
                maxDate.setDate(date.getDate() + 90);

                filterExp = ""Contains([UW], '");

            
            #line 244 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') AND Contains([Status], 'Issued')"";
                filterExp += "" AND [ExpirationDate] > #"" + ora.UI.Utils.GetFormattedDate(date) + ""#"";
                filterExp += "" AND [ExpirationDate] < #"" + ora.UI.Utils.GetFormattedDate(maxDate) + ""#""

                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""EffectiveWithinThirty"") {
                var date = new Date();
                var maxDate = new Date();
                maxDate.setDate(date.getDate() + 30);
                date.setDate(date.getDate());

                filterExp = ""Contains([UW], '");

            
            #line 257 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') "";
                filterExp += "" AND [EffectiveDate] >= #"" + ora.UI.Utils.GetFormattedDate(date) + ""#"";
                filterExp += "" AND [EffectiveDate] <= #"" + ora.UI.Utils.GetFormattedDate(maxDate) + ""#"";

                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""EffectiveWithinSixty"") {
                var date = new Date();
                var maxDate = new Date();
                maxDate.setDate(date.getDate() + 60);
                date.setDate(date.getDate());

                filterExp = ""Contains([UW], '");

            
            #line 270 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') "";
                filterExp += "" AND [EffectiveDate] >= #"" + ora.UI.Utils.GetFormattedDate(date) + ""#"";
                filterExp += "" AND [EffectiveDate] <= #"" + ora.UI.Utils.GetFormattedDate(maxDate) + ""#"";

                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""EffectiveWithinNinety"") {
                var date = new Date();
                var maxDate = new Date();
                maxDate.setDate(date.getDate() + 90);
                date.setDate(date.getDate());

                filterExp = ""Contains([UW], '");

            
            #line 283 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') "";
                filterExp += "" AND [EffectiveDate] >= #"" + ora.UI.Utils.GetFormattedDate(date) + ""#"";
                filterExp += "" AND [EffectiveDate] <= #"" + ora.UI.Utils.GetFormattedDate(maxDate) + ""#"";

                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""LatestSubmissions"") {
                var filterExp = ""Contains([Status], 'Submission,Quote') AND Contains([UW], '");

            
            #line 291 "..\..\Views\Home\WorkingList.cshtml"
                                                                                       Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"')"";
                grid.ApplyFilter(filterExp);
            }

            if (this.value == ""EffectiveThisMonth"") {
                var date = new Date();
                var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                filterExp = ""Contains([UW], '");

            
            #line 300 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral(@"') "";
                filterExp += "" AND [EffectiveDate] >= #"" + ora.UI.Utils.GetFormattedDate(firstDay) + ""#"";
                filterExp += "" AND [EffectiveDate] <= #"" + ora.UI.Utils.GetFormattedDate(lastDay) + ""#""

                grid.ApplyFilter(filterExp);
            }
        });
    });

    $(window).resize(function () {
        var commandMenuHeight = $('#WorkingListCommandMenu').height();
        var height = $('#page-wrapper').height();
        WorkingListGrid.SetHeight(height - 93 - (commandMenuHeight - 34));
        var containerWidth = $('#page-wrapper').width();
        WorkingListGrid.SetWidth(containerWidth);
    });
</script>

<style>
    .clearfix:before,
    .clearfix:after {
        content: '\0020';
        display: block;
        overflow: hidden;
        visibility: hidden;
        width: 0;
        height: 0;
    }

    .clearfix:after {
        clear: both;
    }

    .clearfix {
        zoom: 1;
    }
</style>

<div");

WriteLiteral(" id=\"WorkingListPresetsd_dg\"");

WriteLiteral(" title=\"Views\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"LatestSubmissions\"");

WriteLiteral(">\r\n                All My Submissions\r\n            </label>\r\n        </div>\r\n    " +
"    <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"AllMyRenewals\"");

WriteLiteral(">\r\n                All My Renewals\r\n            </label>\r\n        </div>\r\n       " +
" <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"PoliciesExpiringInNinety\"");

WriteLiteral(">\r\n                My Policies Expiring In 90 Days\r\n            </label>\r\n       " +
" </div>\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"UnResolvedRenewals\"");

WriteLiteral(">\r\n                My Un-Resolved Renewals\r\n            </label>\r\n        </div>\r" +
"\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"UnResolvedProspects\"");

WriteLiteral(">\r\n                My Un-Resolved Prospects\r\n            </label>\r\n        </div>" +
"\r\n\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"InForceRenewals\"");

WriteLiteral(">\r\n                My Inforce Renewals\r\n            </label>\r\n        </div>\r\n   " +
"     <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"EffectiveWithinThirty\"");

WriteLiteral(">\r\n                My List Effective Within 30 Days\r\n            </label>\r\n      " +
"  </div>\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"EffectiveWithinSixty\"");

WriteLiteral(">\r\n                My List Effective Within 60 Days\r\n            </label>\r\n      " +
"  </div>\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"EffectiveWithinNinety\"");

WriteLiteral(">\r\n                My List Effective Within 90 Days\r\n            </label>\r\n      " +
"  </div>\r\n        <div");

WriteLiteral(" class=\"radio\"");

WriteLiteral(">\r\n            <label>\r\n                <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"ViewFilter\"");

WriteLiteral(" value=\"EffectiveThisMonth\"");

WriteLiteral(">\r\n                My List Effective This Month ");

            
            #line 398 "..\..\Views\Home\WorkingList.cshtml"
                                        Write(System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(DateTime.Now.Month).ToString());

            
            #line default
            #line hidden
WriteLiteral("\r\n            </label>\r\n        </div>\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" id=\"ViewDescriptions\"");

WriteLiteral(" class=\"panel-body gray annotation\"");

WriteLiteral(">\r\n        <h4");

WriteLiteral(" style=\"margin:0px 0px 10px 0px\"");

WriteLiteral(">Filter Description</h4>\r\n        <div");

WriteLiteral(" id=\"LatestSubmissions\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All risks assigned to ");

            
            #line 406 "..\..\Views\Home\WorkingList.cshtml"
                             Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral("  where status is one of (Submission, Quote)\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"AllMyRenewals\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All risks where the policy # suffix is greater than 1\r\n        </d" +
"iv>\r\n        <div");

WriteLiteral(" id=\"InForceRenewals\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All risks where the policy # suffix is greater than 1 and the stat" +
"us is Issued and is assigned to underwriter ");

            
            #line 412 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                                     Write(ViewBag.UserName);

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"UnResolvedRenewals\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            Risk policy # suffix is greater than 1 and the effective date has " +
"already passed (");

            
            #line 415 "..\..\Views\Home\WorkingList.cshtml"
                                                                                         Write(DateTime.Now.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral(")\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"UnResolvedProspects\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            Risk Status is one of (Submission, Quote) and the effective date h" +
"as already passed today (");

            
            #line 418 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                  Write(DateTime.Now.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral(")\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"PoliciesExpiringInNinety\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All policies where the expiring date falls between ");

            
            #line 421 "..\..\Views\Home\WorkingList.cshtml"
                                                          Write(DateTime.Now.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral(" and ");

            
            #line 421 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                Write(DateTime.Now.AddDays(90).Date.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral(" days from today.\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"EffectiveWithinThirty\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All policies assigned to ");

            
            #line 424 "..\..\Views\Home\WorkingList.cshtml"
                                Write(PolicyTracker.Platform.Security.SessionManager.GetCurrentSession().User.Name);

            
            #line default
            #line hidden
WriteLiteral(" that are effective on or before ");

            
            #line 424 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                                                              Write(DateTime.Now.AddDays(30).ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"EffectiveWithinSixty\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All policies assigned to ");

            
            #line 427 "..\..\Views\Home\WorkingList.cshtml"
                                Write(PolicyTracker.Platform.Security.SessionManager.GetCurrentSession().User.Name);

            
            #line default
            #line hidden
WriteLiteral(" that are effective on or before ");

            
            #line 427 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                                                              Write(DateTime.Now.AddDays(60).ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"EffectiveWithinNinety\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(">\r\n            All policies assigned to ");

            
            #line 430 "..\..\Views\Home\WorkingList.cshtml"
                                Write(PolicyTracker.Platform.Security.SessionManager.GetCurrentSession().User.Name);

            
            #line default
            #line hidden
WriteLiteral(" that are effective on or before ");

            
            #line 430 "..\..\Views\Home\WorkingList.cshtml"
                                                                                                                                              Write(DateTime.Now.AddDays(90).ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<section");

WriteLiteral(" class=\"content no-padding\"");

WriteLiteral(">\r\n    <form");

WriteLiteral(" id=\"exptWorkingList\"");

WriteLiteral(" class=\"hidden\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(" action=\"/policytracker/WorkingListGrid/Export\"");

WriteLiteral("></form>\r\n    <div");

WriteLiteral(" id=\"WorkingListGridPane\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" id=\"WorkingListCommandMenu\"");

WriteLiteral(" class=\"clear clearfix\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"gridMenu pull-left col-lg-8 col-md-12 col-sm-12 fillContainer\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"dropdown btn gridMenu no-padding\"");

WriteLiteral(" title=\"Select from preset grid filters (views)\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" id=\"WorkingListPresets\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(">Views</button>\r\n                </div>\r\n                <div");

WriteLiteral(" class=\"dropdown btn gridMenu\"");

WriteLiteral(" style=\"padding:0px\"");

WriteLiteral(" title=\"Select other filters to apply to grid\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" class=\"btn btn-primary dropdown-toggle\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"dropdownMenu1\"");

WriteLiteral(" data-toggle=\"dropdown\"");

WriteLiteral(" aria-haspopup=\"true\"");

WriteLiteral(" aria-expanded=\"true\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-filter\"");

WriteLiteral("></i> Other Filters\r\n                    </button>\r\n                    <div");

WriteLiteral(" class=\"dropdown-menu\"");

WriteLiteral(" aria-labelledby=\"dropdownMenu1\"");

WriteLiteral(" style=\"width:700px\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"col-lg-12\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                <label");

WriteLiteral(" style=\"float:none;font-size:15px\"");

WriteLiteral(">Effective Date Range</label>\r\n                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"form-control datePicker\"");

WriteLiteral(" id=\"LowerEffectiveDate\"");

WriteLiteral(" placeholder=\"Lower Effective Date\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"form-control datePicker\"");

WriteLiteral(" id=\"UpperEffectiveDate\"");

WriteLiteral(" placeholder=\"Upper Effective Date\"");

WriteLiteral(">\r\n                            </div>\r\n\r\n                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                <label");

WriteLiteral(" style=\"float:none;font-size:15px\"");

WriteLiteral(">Renewal Underwriter</label>\r\n");

WriteLiteral("                                ");

            
            #line 457 "..\..\Views\Home\WorkingList.cshtml"
                           Write(Html.DropDownList("WLRenewalUWFilter", new SelectList(@ViewBag.Underwriters, "UserId", "Name"), "", new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n\r\n                            <div");

WriteLiteral(" class=\"form-group gridMenu\"");

WriteLiteral(">\r\n                                <button");

WriteLiteral(" id=\"WLApplyOtherFilter\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary first\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-filter\"");

WriteLiteral("></i> Apply Filters</button>\r\n                            </div>\r\n               " +
"             <script");

WriteLiteral(" type=\"text/ecmascript\"");

WriteLiteral(">\r\n                                $(\".datePicker\").datepicker();\r\n              " +
"              </script>\r\n                        </div>\r\n                    </d" +
"iv>\r\n                </div>\r\n\r\n                <button");

WriteLiteral(" id=\"WLRefresh\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Refresh the grid with current filters applied\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-refresh\"");

WriteLiteral("></i> Refresh</button>\r\n                <button");

WriteLiteral(" id=\"ResetWorkingList\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Clear all filters applied to grid\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-repeat\"");

WriteLiteral("></i> Clear Filters</button>\r\n                <button");

WriteLiteral(" id=\"WLMyList\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Filter risks assigned to you for the current month\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-user\"");

WriteLiteral("></i> My List</button>\r\n                <button");

WriteLiteral(" id=\"WLSaveFilter\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Save current filter settings to user profile\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-save\"");

WriteLiteral("></i> Save Filter Settings</button>\r\n                <button");

WriteLiteral(" id=\"exportWorkingList\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Export Working List\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-download\"");

WriteLiteral("></i></button>\r\n                <button");

WriteLiteral(" id=\"WLConfigureGrid\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" title=\"Setup Custom grid column selections and ordering\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-wrench\"");

WriteLiteral("></i> Configure Columns</button>\r\n                \r\n\r\n                <div");

WriteLiteral(" id=\"GridConfigListContainer\"");

WriteLiteral(" class=\"btn\"");

WriteLiteral(" style=\"padding:0px\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 479 "..\..\Views\Home\WorkingList.cshtml"
               Write(Html.Action("GridConfigList"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                $(\'.dropdown-menu input, .dropdown-menu label, .dropdown-menu " +
"select\').click(function (e) {\r\n                    e.stopPropagation();\r\n       " +
"         });\r\n            </script>\r\n\r\n            <div");

WriteLiteral(" id=\"userwlfilter\"");

WriteLiteral(" class=\"col-lg-4 col-md-12 col-sm-12 fillContainer\"");

WriteLiteral(" style=\"padding-top:5px\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" id=\"UserFilterPanel\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 492 "..\..\Views\Home\WorkingList.cshtml"
               Write(Html.Action("UserFilters"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </div>\r\n");

WriteLiteral("                ");

            
            #line 494 "..\..\Views\Home\WorkingList.cshtml"
           Write(Html.Hidden("CurrUserId", (int)ViewBag.UserId));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n        </div>\r\n\r\n");

WriteLiteral("        ");

            
            #line 498 "..\..\Views\Home\WorkingList.cshtml"
   Write(Html.Hidden("UserIsUA", (bool)ViewBag.IsUA));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 499 "..\..\Views\Home\WorkingList.cshtml"
   Write(Html.Hidden("WLCurrentKey"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 500 "..\..\Views\Home\WorkingList.cshtml"
   Write(Html.Hidden("CurrUserName", (string)ViewBag.UserName));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" style=\"overflow-x:scroll\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 502 "..\..\Views\Home\WorkingList.cshtml"
       Write(Html.Action("WorkingListGrid", "WorkingListGrid", new { gridConfig = ViewBag.UserGridConfig }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n\r\n        <div");

WriteLiteral(" id=\"WorkingListRowMenu\"");

WriteLiteral(" class=\"gridMenu clear\"");

WriteLiteral(">\r\n");

            
            #line 506 "..\..\Views\Home\WorkingList.cshtml"
            
            
            #line default
            #line hidden
            
            #line 506 "..\..\Views\Home\WorkingList.cshtml"
               var canDelete = SecurityManager.HasAccess("/Risk/WorkingList", SecurityManager.ResourcePrivilege.Delete); 
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 508 "..\..\Views\Home\WorkingList.cshtml"
            
            
            #line default
            #line hidden
            
            #line 508 "..\..\Views\Home\WorkingList.cshtml"
             if (!canDelete)
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"WLAddNewRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-success first\"");

WriteLiteral(" style=\"width:50%;padding:10px 10px\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral("></i> Add</button>\r\n");

WriteLiteral("                <button");

WriteLiteral(" id=\"WLEditRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" style=\"width:50%;padding:10px 10px\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-pencil\"");

WriteLiteral("></i> Edit</button>\r\n");

            
            #line 512 "..\..\Views\Home\WorkingList.cshtml"
            }
            else
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"WLAddNewRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-success first\"");

WriteLiteral(" style=\"width:33.33%;padding:10px 10px\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral("></i> Add</button>\r\n");

WriteLiteral("                <button");

WriteLiteral(" id=\"WLEditRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" style=\"width:33.33%;padding:10px 10px\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-pencil\"");

WriteLiteral("></i> Edit</button>\r\n");

WriteLiteral("                <button");

WriteLiteral(" id=\"WLDeleteRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-danger\"");

WriteLiteral(" style=\"width:33.33%;padding:10px 10px\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-trash-o\"");

WriteLiteral("></i> Delete</button>\r\n");

            
            #line 518 "..\..\Views\Home\WorkingList.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n    </div>\r\n</section>");

        }
    }
}
#pragma warning restore 1591
