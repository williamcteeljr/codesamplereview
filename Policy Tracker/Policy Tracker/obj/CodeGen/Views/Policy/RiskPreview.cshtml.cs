#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DevExpress.Data.PivotGrid;
    using DevExpress.Utils;
    using DevExpress.Web;
    using DevExpress.Web.ASPxHtmlEditor;
    using DevExpress.Web.ASPxPivotGrid;
    using DevExpress.Web.ASPxRichEdit;
    using DevExpress.Web.ASPxScheduler;
    using DevExpress.Web.ASPxSpellChecker;
    using DevExpress.Web.ASPxSpreadsheet;
    using DevExpress.Web.ASPxThemes;
    using DevExpress.Web.Mvc;
    using DevExpress.Web.Mvc.UI;
    using DevExpress.XtraCharts;
    using DevExpress.XtraCharts.Web;
    using DevExpress.XtraPivotGrid;
    using DevExpress.XtraReports;
    using DevExpress.XtraReports.UI;
    using DevExpress.XtraReports.Web;
    using DevExpress.XtraReports.Web.DocumentViewer;
    using DevExpress.XtraRichEdit;
    using DevExpress.XtraScheduler;
    using DevExpress.XtraScheduler.Native;
    using PolicyTracker.BusinessServices;
    using PolicyTracker.BusinessServices.Security;
    
    #line 2 "..\..\Views\Policy\RiskPreview.cshtml"
    using PolicyTracker.DomainModel.Policy;
    
    #line default
    #line hidden
    using PolicyTracker.HtmlHelpers;
    using PolicyTracker.Utilities;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Policy/RiskPreview.cshtml")]
    public partial class _Views_Policy_RiskPreview_cshtml : System.Web.Mvc.WebViewPage<PolicyTracker.DomainModel.Policy.Risk>
    {
        public _Views_Policy_RiskPreview_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n<style>\r\n    .dx-datagrid-rowsview .dx-row:nth-child(odd) {\r\n        background" +
"-color: #f9f9f9;\r\n        color: black;\r\n    }\r\n    .noHeaderBorders .dx-header-" +
"row>td {\r\n        border-left: 0px!important;\r\n    }\r\n</style>\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n    ora.UI.Grid.Grid({\r\n        Parent: \"");

            
            #line 16 "..\..\Views\Policy\RiskPreview.cshtml"
            Write(ViewBag.PreviewParent);

            
            #line default
            #line hidden
WriteLiteral("\",\r\n        id: \"AircraftGrid\",\r\n        pager: \"AircraftGridPager\",\r\n        hei" +
"ght: 75,\r\n        restUrl: \'/policytracker/api/risk/GetAircraft/");

            
            #line 20 "..\..\Views\Policy\RiskPreview.cshtml"
                                                 Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral(@"',
            rowId: 'Id',
            caption: '',
            columnNames: ['Id', 'RiskId', 'N#', 'Year', 'Make', 'Model', 'Value', 'Engine', 'Use', 'Hull Prem.'],
            columnModel: [
                { name: 'Id', width: 70, search: false, hidden: true },
                { name: 'QuoteId', width: 70, search: false, hidden: true },
                { name: 'FAANo', width: 70, search: false, align: 'center' },
                { name: 'Year', width: 70, search: false, align: 'center' },
                { name: 'Make', width: 70, search: false },
                { name: 'ModelID', width: 70, search: false },
                { name: 'Value', width: 70, search: false },
                { name: 'EngineType', width: 70, search: false },
                { name: 'PurposeOfUse', width: 70, search: false, align: 'center' },
                { name: 'HullPrem', width: 70, search: false },
            ]
    });

    ora.UI.Grid.Grid({
        Parent: """);

            
            #line 39 "..\..\Views\Policy\RiskPreview.cshtml"
            Write(ViewBag.PreviewParent);

            
            #line default
            #line hidden
WriteLiteral("\",\r\n        id: \"RiskInstallmentsGrid\",\r\n        pager: \"RiskInstallmentsGridPage" +
"r\",\r\n        height: 75,\r\n        restUrl: \'/policytracker/api/risk/GetInstallme" +
"nts/");

            
            #line 43 "..\..\Views\Policy\RiskPreview.cshtml"
                                                     Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n        rowId: \'Id\',\r\n        caption: \'\',\r\n        columnNames: [\'PaymentId\'" +
", \'RiskId\', \'Due Date\', \'Invoiced Date\', \'Anticipated %\', \'Actual $\', \'Report Re" +
"c\' ],\r\n        columnModel: [\r\n            { name: \'PaymentId\', width: 70, searc" +
"h: false, hidden: true },\r\n            { name: \'RiskId\', width: 70, search: fals" +
"e, hidden: true },\r\n            { name: \'DueDate\', width: 100, align: \'center\', " +
"formatter: \'date\', formatoptions: { srcformat: \'Y-m-d\' } },\r\n            { name:" +
" \'InvoicedDate\', width: 100, align: \'center\', formatter: \'date\', formatoptions: " +
"{ srcformat: \'Y-m-d\' } },\r\n            //ora.UI.Grid.Column.ShortDate(\'DueDate\'," +
" 100),\r\n            //ora.UI.Grid.Column.ShortDate(\'InvoicedDate\', 100),\r\n      " +
"      { name: \'AnticipatedAmount\', width: 100, align: \'right\', formatter: \'curre" +
"ncy\', formatoptions: { prefix: \'$\' } },\r\n            { name: \'ActualAmount\', wid" +
"th: 100, align: \'right\', formatter: \'currency\', formatoptions: { prefix: \'$\' } }" +
",\r\n            //ora.UI.Grid.Column.Currency(\'AnticipatedAmount\', 100),\r\n       " +
"     //ora.UI.Grid.Column.Currency(\'ActualAmount\', 100),\r\n            { name: \'R" +
"eportReceived\', width: 100, align: \'center\', formatter: \'date\', formatoptions: {" +
" srcformat: \'Y-m-d\' } }\r\n            //ora.UI.Grid.Column.ShortDate(\'ReportRecei" +
"ved\', 100),\r\n        ]\r\n    });\r\n\r\n    $(\"#EditRisk\").click(function () {\r\n     " +
"   var riskId = $(\"#EditRiskId\").val();\r\n        if (riskId == null || riskId ==" +
" 0) {\r\n            ora.Dialog.Simple({ id: \"PleaseSelectRisk\", message: \"First S" +
"elect a Risk to Edit.\" });\r\n        }\r\n        else {\r\n            var name = $(" +
"\"#EditRiskName\").val()\r\n            ora.Dialog.ActionForm(\r\n            {\r\n     " +
"           id: \'RiskEdit_dg\',\r\n                title: \'Editing Risk \' + riskId +" +
" \" For \" + name,\r\n                form: { id: \"RiskEditForm\", container: \"RiskEd" +
"it_dg\", submitURL: \"/policytracker/Policy/RiskEditForm\", grid: \"RiskFindGrid\" }," +
"\r\n                url: \"/policytracker/Policy/RiskEditForm/\" + riskId,\r\n        " +
"        modal: true, autoFocus: \"ImageRightId\",\r\n                WritePermission" +
"s: true,\r\n                CustomFormSubmit: true,\r\n                Type: ora.Dia" +
"log.ActionFormSizes.Large,\r\n            })\r\n        }\r\n    });\r\n\r\n    $(\"#CloneR" +
"isk\").click(function () {\r\n        var riskId = $(\"#EditRiskId\").val();\r\n       " +
" if (riskId == null || riskId == 0) {\r\n            ora.Dialog.Simple({ id: \"Plea" +
"seSelectRisk\", message: \"First Select a Risk to Clone.\" });\r\n        }\r\n        " +
"else {\r\n            ora.Dialog.ActionForm(\r\n            {\r\n                id: \'" +
"NewRiskEntry_dg\',\r\n                title: \'Edit Cloned Risk\',\r\n                f" +
"orm: { id: \"RiskEntryForm\", container: \"NewRiskEntry_dg\", submitURL: \"/policytra" +
"cker/Policy/RiskEntryForm\", grid: \"RiskFindGrid\" },\r\n                url: \"/poli" +
"cytracker/Policy/CloneAndRelateRisk?riskId=\" + riskId,\r\n                modal: t" +
"rue, autoFocus: \"ImageRightId\",\r\n                WritePermissions: true,\r\n      " +
"          CustomFormSubmit: true,\r\n                Type: ora.Dialog.ActionFormSi" +
"zes.Large,\r\n            })\r\n        }\r\n    });\r\n\r\n    $(\"#RiskForExisting\").clic" +
"k(function () {\r\n        var rowid = $(\"#NamedInsuredSearchGrid\").jqGrid(\'getGri" +
"dParam\', \'selrow\');\r\n        var rowData = $(\"#NamedInsuredSearchGrid\").getRowDa" +
"ta(rowid);\r\n        if (rowid == null || rowid == 0) {\r\n            ora.Dialog.S" +
"imple({ id: \"PleaseSelectRisk\", message: \"Must select a client.\" });\r\n        }\r" +
"\n        else {\r\n            ora.Dialog.ActionForm(\r\n            {\r\n            " +
"    id: \'NewRiskEntry_dg\',\r\n                title: \'Entering a New Risk For \' + " +
"rowData.Name,\r\n                form: { id: \"RiskEntryForm\", container: \"NewRiskE" +
"ntry_dg\", submitURL: \"/policytracker/Policy/RiskEntryForm\", grid: \"RiskFindGrid\"" +
" },\r\n                url: \"/policytracker/Policy/RiskEntryForm?controlNumber=\" +" +
" rowData.ControlNumber,\r\n                modal: true, autoFocus: \"ImageRightId\"," +
"\r\n                WritePermissions: true,\r\n                CustomFormSubmit: tru" +
"e,\r\n                Type: ora.Dialog.ActionFormSizes.Large,\r\n            })\r\n   " +
"     }\r\n    });\r\n\r\n    $(\"#DeclineRisk\").click(function () {\r\n        var riskId" +
" = $(\"#EditRiskId\").val();\r\n        if (riskId == null || riskId == 0) {\r\n      " +
"      ora.Dialog.Simple({ id: \"PleaseSelectRisk\", message: \"First Select a Risk " +
"to Decline.\" });\r\n        }\r\n        else {\r\n            ora.Dialog.ActionForm(\r" +
"\n            {\r\n                id: \'RiskDecline_dg\',\r\n                title: \'D" +
"eclining Risk\',\r\n                form: { id: \"DeclineRiskForm\", container: \"Risk" +
"Decline_dg\", submitURL: \"/policytracker/Policy/DeclineRiskForm\", grid: \"RiskFind" +
"Grid\" },\r\n                url: \"/policytracker/Policy/DeclineRiskForm/\" + riskId" +
",\r\n                modal: true, autoFocus: \"ReasonForDecline\",\r\n                " +
"WritePermissions: true,\r\n                HideSaveButton: true,\r\n                " +
"Type: ora.Dialog.ActionFormSizes.Small,\r\n            })\r\n        }\r\n    });\r\n\r\n " +
"   $(\"#SearchDeleteRisk\").click(function () {\r\n        var riskId = $(\"#EditRisk" +
"Id\").val();\r\n        if (riskId == null || riskId == 0) {\r\n            ora.Dialo" +
"g.Simple({ id: \"PleaseSelectRisk\", message: \"First Select a Risk to Decline.\" })" +
";\r\n        } else {\r\n            ora.Dialog.Confirm({\r\n                message: " +
"\"Are you sure you want to delete risk \" + riskId + \"?\",\r\n                AcceptC" +
"allback: function () {\r\n\r\n                    ora.Ajax.Ajax({\r\n                 " +
"       url: \"/policytracker/Policy/DeleteRisk/\" + riskId,\r\n                     " +
"   dataType: \"HTML\", type: \"DELETE\",\r\n                        successCallback: f" +
"unction (data) {\r\n                            $(\'#RiskFindGrid\').trigger(\"reload" +
"Grid\");\r\n                            $(\"#RiskFindRowPreview\").html(\'\');\r\n       " +
"                 }\r\n                    });\r\n                }\r\n            });\r" +
"\n        }\r\n    });\r\n\r\n    var gridDataSource = {\r\n        load: function (loadO" +
"ptions) {\r\n            var d = $.Deferred();\r\n            $.getJSON(\'/policytrac" +
"ker/api/risk/GetAircraft\', { id: \'");

            
            #line 170 "..\..\Views\Policy\RiskPreview.cshtml"
                                                               Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral(@"'}).done(function (result) {
                d.resolve(result.Results, { totalCount: result.TotalCount });
            });
            return d.promise();
        },
        update: function (key, values) {
            //Updating data
        },
        insert: function (values) {
            //Inserting data
        },
        remove: function (key) {
            //Deleting data
        }
    }

    $(""#gridContainer"").dxDataGrid({
        dataSource: gridDataSource,
        columns: [
                { dataField: 'Id', visible: false },
                { dataField: 'QuoteId', visible: false },
                { dataField: 'FAANo', caption: 'N#'},
                { dataField: 'Year' },
                { dataField: 'Make' },
                { dataField: 'ModelID', caption: 'Model' },
                { dataField: 'Value', format: 'currency', width: 100 },
                { dataField: 'EngineType', caption: 'Engine' },
                { dataField: 'PurposeOfUse', caption: 'Use' },
                { dataField: 'HullPrem', caption: 'Hull Prem.', format: 'currency', width: 100 },
        ],
        paging: { enabled: true, pageSize: 10 },
        pager: {
            showPageSizeSelector: true,
            allowedPageSizes: [10, 20],
            showInfo: true,
            visible: true
        },
        noDataText: 'No Aircraft for Policy'
    });
</script>

");

            
            #line 211 "..\..\Views\Policy\RiskPreview.cshtml"
Write(Html.Hidden("EditRiskId", Model.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 212 "..\..\Views\Policy\RiskPreview.cshtml"
Write(Html.Hidden("RiskControlNumber", Model.ControlNumber));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 213 "..\..\Views\Policy\RiskPreview.cshtml"
Write(Html.Hidden("EditRiskIsCompany", Model.NamedInsured.IsCompany));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 214 "..\..\Views\Policy\RiskPreview.cshtml"
Write(Html.Hidden("EditRiskName", (Model.NamedInsured.IsCompany ? Model.NamedInsured.CompanyName : Model.NamedInsured.FirstName + " " + Model.NamedInsured.LastName)));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<section");

WriteLiteral(" class=\"invoice\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(">\r\n            <button");

WriteLiteral(" id=\"EditRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-edit\"");

WriteLiteral("></i> Edit</button>\r\n            <button");

WriteLiteral(" id=\"CloneRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-copy\"");

WriteLiteral("></i> Copy</button>\r\n            <button");

WriteLiteral(" id=\"DeclineRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-danger\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-ban\"");

WriteLiteral("></i> Quick Decline</button>\r\n");

            
            #line 222 "..\..\Views\Policy\RiskPreview.cshtml"
            
            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\Policy\RiskPreview.cshtml"
             if (SecurityManager.HasAccess("/Risk/Search", SecurityManager.ResourcePrivilege.Delete))
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"SearchDeleteRisk\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-danger\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-trash\"");

WriteLiteral("></i> Delete</button>\r\n");

            
            #line 225 "..\..\Views\Policy\RiskPreview.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" id=\"RiskForExisting\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"btn btn-default\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral("></i> New Risk For Existing(selected) Client</button>\r\n        </div>\r\n        \r\n" +
"    </div>\r\n    <!-- title row -->\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-xs-12\"");

WriteLiteral(">\r\n            <h2");

WriteLiteral(" class=\"page-header\"");

WriteLiteral(">\r\n                <small>[");

            
            #line 234 "..\..\Views\Policy\RiskPreview.cshtml"
                   Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("]</small> ");

            
            #line 234 "..\..\Views\Policy\RiskPreview.cshtml"
                                       Write(Model.IsRenewal || Model.Status == RiskStatus.ISSUED.Value ? Model.Prefix + ' ' + Model.PolicyNumber + " " + Model.PolicySuffix : Model.ImageRightId);

            
            #line default
            #line hidden
WriteLiteral("\r\n                - ");

            
            #line 235 "..\..\Views\Policy\RiskPreview.cshtml"
             Write(Model.Status);

            
            #line default
            #line hidden
WriteLiteral("\r\n                <small");

WriteLiteral(" class=\"pull-right\"");

WriteLiteral(">Created On: ");

            
            #line 236 "..\..\Views\Policy\RiskPreview.cshtml"
                                                 Write(Model.CreatedDate.Value.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("</small>\r\n            </h2>\r\n        </div>\r\n        <!-- /.col -->\r\n    </div>\r\n" +
"    <!-- info row -->\r\n    <div");

WriteLiteral(" class=\"row invoice-info\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-sm-4 invoice-col\"");

WriteLiteral(">\r\n            Named Insured:\r\n            <address>\r\n                <strong>");

            
            #line 246 "..\..\Views\Policy\RiskPreview.cshtml"
                   Write(Model.Name);

            
            #line default
            #line hidden
WriteLiteral(" <small><span");

WriteLiteral(" class=\"text-muted\"");

WriteLiteral(">");

            
            #line 246 "..\..\Views\Policy\RiskPreview.cshtml"
                                                               Write(Model.ControlNumber);

            
            #line default
            #line hidden
WriteLiteral("</span></small></strong><br/>\r\n");

            
            #line 247 "..\..\Views\Policy\RiskPreview.cshtml"
                
            
            #line default
            #line hidden
            
            #line 247 "..\..\Views\Policy\RiskPreview.cshtml"
                 if (!String.IsNullOrEmpty(@Model.DoingBusinessAs)) {
            
            #line default
            #line hidden
WriteLiteral(" <span>DBA:</span> ");

            
            #line 247 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                        
            
            #line default
            #line hidden
            
            #line 247 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                   Write(Model.DoingBusinessAs);

            
            #line default
            #line hidden
WriteLiteral(" <br /> ");

            
            #line 247 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                                                      }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 248 "..\..\Views\Policy\RiskPreview.cshtml"
                 if (!String.IsNullOrEmpty(@Model.StreetAddress1)) {
            
            #line default
            #line hidden
WriteLiteral(" <span>Address:</span> ");

            
            #line 248 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                           
            
            #line default
            #line hidden
            
            #line 248 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                      Write(Model.StreetAddress1);

            
            #line default
            #line hidden
WriteLiteral(" <br/> ");

            
            #line 248 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                                                       }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 249 "..\..\Views\Policy\RiskPreview.cshtml"
           Write(Model.NamedInsured.City);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 249 "..\..\Views\Policy\RiskPreview.cshtml"
                                    Write(Model.State);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 249 "..\..\Views\Policy\RiskPreview.cshtml"
                                                  Write(Model.Zip);

            
            #line default
            #line hidden
WriteLiteral("<br>\r\n                ");

WriteLiteral("\r\n            </address>\r\n        </div>\r\n        <!-- /.col -->\r\n        <div");

WriteLiteral(" class=\"col-sm-4 invoice-col\"");

WriteLiteral(">\r\n            Broker:\r\n            <address>\r\n                <strong>");

            
            #line 258 "..\..\Views\Policy\RiskPreview.cshtml"
                   Write(Model.Broker.AgencyName);

            
            #line default
            #line hidden
WriteLiteral(" <small><span");

WriteLiteral(" class=\"text-muted\"");

WriteLiteral(">");

            
            #line 258 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                            Write(Model.AgencyID);

            
            #line default
            #line hidden
WriteLiteral("</span></small></strong><br>\r\n");

            
            #line 259 "..\..\Views\Policy\RiskPreview.cshtml"
                
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\Policy\RiskPreview.cshtml"
                 if (Model.Broker.PlatinumProducer) {
            
            #line default
            #line hidden
WriteLiteral(" <span><i");

WriteLiteral(" class=\"fa fa-star\"");

WriteLiteral(" style=\"color:gold\"");

WriteLiteral("></i> Platinum Producer</span> ");

WriteLiteral("<br/> ");

            
            #line 259 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                                                                         }

            
            #line default
            #line hidden
WriteLiteral("                Agent: ");

            
            #line 260 "..\..\Views\Policy\RiskPreview.cshtml"
                  Write(Model.AgentName);

            
            #line default
            #line hidden
WriteLiteral(" <br/>\r\n                Email: ");

            
            #line 261 "..\..\Views\Policy\RiskPreview.cshtml"
                  Write(Model.AgentEmail);

            
            #line default
            #line hidden
WriteLiteral("\r\n            </address>\r\n        </div>\r\n        <!-- /.col -->\r\n        <div");

WriteLiteral(" class=\"col-sm-4 invoice-col\"");

WriteLiteral(">\r\n            <b>Product Line:</b> ");

            
            #line 266 "..\..\Views\Policy\RiskPreview.cshtml"
                            Write(ViewBag.ProductLine.Name);

            
            #line default
            #line hidden
WriteLiteral("<br>\r\n            <b>Underwriter:</b> ");

            
            #line 267 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(ViewBag.UWName);

            
            #line default
            #line hidden
WriteLiteral("<br>\r\n            <b>Effective:</b> ");

            
            #line 268 "..\..\Views\Policy\RiskPreview.cshtml"
                         Write(Model.EffectiveDate.Value.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral(" - ");

            
            #line 268 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                          Write(Model.ExpirationDate.Value.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <!-- /.col -->\r\n    </div>\r\n    <!-- /.row -->\r\n    <!-" +
"- Table row -->\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"margin:25px 0px\"");

WriteLiteral(">\r\n");

            
            #line 275 "..\..\Views\Policy\RiskPreview.cshtml"
        
            
            #line default
            #line hidden
            
            #line 275 "..\..\Views\Policy\RiskPreview.cshtml"
         if (Model.ProductLine != (int)ProductLines.WC)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" style=\"padding:0px 50px\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" id=\"gridContainer\"");

WriteLiteral(" class=\"noHeaderBorders\"");

WriteLiteral("></div>\r\n            </div>\r\n");

            
            #line 280 "..\..\Views\Policy\RiskPreview.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"col-xs-12 table-responsive\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" class=\"table table-striped\"");

WriteLiteral(@">
                    <thead>
                        <tr>
                            <th>Program Type</th>
                            <th>Account Desc</th>
                            <th>Sch Rating</th>
                            <th>X Mod</th>
                            <th>Payroll</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>");

            
            #line 296 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.WorkersCompInfo.ProgramType);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td>");

            
            #line 297 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.WorkersCompInfo.AccountDescription);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td>");

            
            #line 298 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.WorkersCompInfo.ScheduledRating);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td>");

            
            #line 299 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.WorkersCompInfo.ExperienceModifier);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td>");

            
            #line 300 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.WorkersCompInfo.Payroll.ToString("C0"));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        </tr>\r\n                    </tbody>\r\n             " +
"   </table>\r\n            </div>\r\n");

            
            #line 305 "..\..\Views\Policy\RiskPreview.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <!-- /.col -->\r\n    </div>\r\n    <!-- /.row -->\r\n\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <!-- accepted payments column -->\r\n        <div");

WriteLiteral(" class=\"col-xs-6\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"nav-tabs-custom\"");

WriteLiteral(">\r\n                <ul");

WriteLiteral(" class=\"nav nav-tabs\"");

WriteLiteral(">\r\n                    <li");

WriteLiteral(" class=\"active\"");

WriteLiteral("><a");

WriteLiteral(" href=\"#riskPreviewTab_1\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">Comments</a></li>\r\n                    <li><a");

WriteLiteral(" href=\"#riskPreviewTab_2\"");

WriteLiteral(" data-toggle=\"tab\"");

WriteLiteral(">History</a></li>\r\n                </ul>\r\n                <div");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"tab-pane active\"");

WriteLiteral(" id=\"riskPreviewTab_1\"");

WriteLiteral(">\r\n");

            
            #line 320 "..\..\Views\Policy\RiskPreview.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 320 "..\..\Views\Policy\RiskPreview.cshtml"
                         if (Model.Notes.Count() == 0)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <p");

WriteLiteral(" class=\"text-muted\"");

WriteLiteral(">No Comments</p>\r\n");

            
            #line 323 "..\..\Views\Policy\RiskPreview.cshtml"
                        }
                        else
                        {
                            foreach (var note in Model.Notes)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <p");

WriteLiteral(" class=\"text-muted well well-sm no-shadow\"");

WriteLiteral(" style=\"margin-top: 10px;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 329 "..\..\Views\Policy\RiskPreview.cshtml"
                               Write(note.CreatedDate.Value.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    - ");

            
            #line 330 "..\..\Views\Policy\RiskPreview.cshtml"
                                 Write(note.Comment);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </p>\r\n");

            
            #line 332 "..\..\Views\Policy\RiskPreview.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div><!-- /.tab-pane -->\r\n                    <div");

WriteLiteral(" class=\"tab-pane\"");

WriteLiteral(" id=\"riskPreviewTab_2\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"scroll-y\"");

WriteLiteral(" style=\"height:250px;\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(">\r\n                                <table");

WriteLiteral(" class=\"table table-hover\"");

WriteLiteral(">\r\n                                    <thead>\r\n                                 " +
"       <tr>\r\n                                            ");

WriteLiteral("\r\n                                            <th");

WriteLiteral(" style=\"width:125px\"");

WriteLiteral(">Date</th>\r\n                                            <th");

WriteLiteral(" style=\"width:125px\"");

WriteLiteral(">User</th>\r\n                                            <th>Action</th>\r\n        " +
"                                </tr>\r\n                                    </the" +
"ad>\r\n                                    <tbody>\r\n");

            
            #line 348 "..\..\Views\Policy\RiskPreview.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 348 "..\..\Views\Policy\RiskPreview.cshtml"
                                         foreach (var log in ViewBag.Logs)
                                        {
                                            var l = log as PolicyTracker.DomainModel.Policy.RiskLog;

            
            #line default
            #line hidden
WriteLiteral("                                            <tr>\r\n                               " +
"                 ");

WriteLiteral("\r\n                                                <td>");

            
            #line 353 "..\..\Views\Policy\RiskPreview.cshtml"
                                               Write(l.ActionDate.Value.ToShortDateString());

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                                                <td>");

            
            #line 354 "..\..\Views\Policy\RiskPreview.cshtml"
                                               Write(l.UserName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                                                <td>");

            
            #line 355 "..\..\Views\Policy\RiskPreview.cshtml"
                                               Write(l.LogAction);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                                            </tr>\r\n");

            
            #line 357 "..\..\Views\Policy\RiskPreview.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral(@"                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div><!-- /.tab-pane -->
                </div><!-- /.tab-content -->
            </div>
        </div>
        <!-- /.col -->
        <div");

WriteLiteral(" class=\"col-xs-6\"");

WriteLiteral(">\r\n            <p");

WriteLiteral(" class=\"lead\"");

WriteLiteral(">\r\n                Premium \r\n");

            
            #line 370 "..\..\Views\Policy\RiskPreview.cshtml"
                
            
            #line default
            #line hidden
            
            #line 370 "..\..\Views\Policy\RiskPreview.cshtml"
                 if (Model.InstallmentInfo.IsPaidInInstallments || Model.InstallmentInfo.IsReporter) {
            
            #line default
            #line hidden
WriteLiteral(" <small><span");

WriteLiteral(" class=\"text-muted\"");

WriteLiteral("> - Paid in Installments</span></small> ");

            
            #line 370 "..\..\Views\Policy\RiskPreview.cshtml"
                                                                                                                                                                              }

            
            #line default
            #line hidden
WriteLiteral("            </p>\r\n\r\n            <div");

WriteLiteral(" class=\"table-responsive\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" class=\"table\"");

WriteLiteral(">\r\n                    <tbody>\r\n");

            
            #line 376 "..\..\Views\Policy\RiskPreview.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 376 "..\..\Views\Policy\RiskPreview.cshtml"
                         if (Model.IsRenewal)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <th>Expired Ann" +
"ual Premium:</th>\r\n                                <td>");

            
            #line 380 "..\..\Views\Policy\RiskPreview.cshtml"
                               Write(Model.PremiumInfo.ExpiredAnnualizedPremium.ToString("C0"));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            </tr>\r\n");

            
            #line 382 "..\..\Views\Policy\RiskPreview.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        <tr>\r\n                            <th");

WriteLiteral(" style=\"width:50%\"");

WriteLiteral(">Annual Premium:</th>\r\n                            <td>");

            
            #line 385 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.PremiumInfo.AnnualizedPremium.ToString("C0"));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        </tr>\r\n                        <tr>\r\n             " +
"               <th>Written Premium</th>\r\n                            <td>");

            
            #line 389 "..\..\Views\Policy\RiskPreview.cshtml"
                           Write(Model.PremiumInfo.WrittenPremium.ToString("C0"));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        </tr>\r\n");

            
            #line 391 "..\..\Views\Policy\RiskPreview.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 391 "..\..\Views\Policy\RiskPreview.cshtml"
                         if (Model.InstallmentInfo.IsPaidInInstallments)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <th>Deposit:</t" +
"h>\r\n                                <td>");

            
            #line 395 "..\..\Views\Policy\RiskPreview.cshtml"
                               Write(Model.PremiumInfo.DepositPremium.ToString("C0"));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            </tr>\r\n");

            
            #line 397 "..\..\Views\Policy\RiskPreview.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </tbody>\r\n                </table>\r\n            </div>\r\n     " +
"   </div>\r\n        <!-- /.col -->\r\n    </div>\r\n    <!-- /.row -->\r\n</section>\r\n\r" +
"\n");

        }
    }
}
#pragma warning restore 1591
